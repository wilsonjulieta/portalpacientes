{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[8],{\"3mUM\":function(r,e,n){\"use strict\";var t=n(\"rePB\");function a(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.push.apply(n,t)}return n}function o(r){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){Object(t.a)(r,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(n,e))}))}return r}var f={colorPrimary:\"#e0115f\",colorSecondary:\"blue\",colorNeutral:\"#ddd\",colorError:\"#aa0000\",colorError2:\"#ffaaaa\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"purple\",\"violet\"],cardHeaderSecondaryGradientColors:[\"#ff66cc\",\"pink\"],turnStatusColors:{COMPLETED:\"green\",CANCELLED:\"orange\",ABSENT:\"red\"}},c=[o(o({},f),{},{colorPrimary:\"#073763\",colorSecondary:\"#f44336\",colorNeutral:\"#d6d9ed\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"#073763\",\"#839bb1\"],cardHeaderSecondaryGradientColors:[\"#a30000\",\"#db4c4c\"]}),o(o({},f),{},{colorPrimary:\"purple\",colorSecondary:\"violet\",colorError:\"orange\"}),o(o({},f),{},{colorPrimary:\"orange\",colorSecondary:\"brown\",cardHeaderPrimaryGradientColors:[\"orange\",\"yellow\"],cardHeaderSecondaryGradientColors:[\"brown\",\"orange\"]}),o(o({},f),{},{colorPrimary:\"turquoise\",colorSecondary:\"orangeRed\",cardHeaderPrimaryGradientColors:[\"turquoise\",\"cyan\"]}),o(o({},f),{},{colorPrimary:\"purple\",colorSecondary:\"magenta\",colorNeutral:\"#f6d1de\",colorError:\"red\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"purple\",\"#c8a2c8\"],cardHeaderSecondaryGradientColors:[\"magenta\",\"pink\"]}),o(o({},f),{},{colorPrimary:\"#087C9F\",colorSecondary:\"#C62828\",colorError:\"red\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"#087C9F\",\"#00a9a9\"],cardHeaderSecondaryGradientColors:[\"#C62828\",\"red\"]}),o(o({},f),{},{colorPrimary:\"#087C9F\",colorSecondary:\"#C62828\",colorError:\"red\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"#087C9F\",\"#00a9a9\"],cardHeaderSecondaryGradientColors:[\"blue\",\"lightblue\"]}),o(o({},f),{},{colorPrimary:\"red\",colorSecondary:\"purple\",colorError:\"red\",colorSuccess:\"green\",cardHeaderPrimaryGradientColors:[\"yellow\",\"red\"],cardHeaderSecondaryGradientColors:[\"blue\",\"lightblue\"],turnStatusColors:{COMPLETED:\"black\",CANCELLED:\"pink\",ABSENT:\"violet\"}})],u=n(\"YUnZ\");function i(r){return u(r).hex()}c.forEach((function(r,e){c[e]=o(o({},c[e]),{},{colorPrimary:i(r.colorPrimary),colorSecondary:i(r.colorSecondary),colorNeutral:i(r.colorNeutral),colorError:i(r.colorError),colorError2:i(r.colorError2),colorSuccess:i(r.colorSuccess),cardHeaderPrimaryGradientColors:[i(r.cardHeaderPrimaryGradientColors[0]),i(r.cardHeaderPrimaryGradientColors[1])],cardHeaderSecondaryGradientColors:[i(r.cardHeaderSecondaryGradientColors[0]),i(r.cardHeaderSecondaryGradientColors[1])]})})),e.a=c},YUnZ:function(r,e,n){r.exports=function(){\"use strict\";for(var r=function(r,e,n){return void 0===e&&(e=0),void 0===n&&(n=1),r<e?e:r>n?n:r},e=r,n=function(r){r._clipped=!1,r._unclipped=r.slice(0);for(var n=0;n<=3;n++)n<3?((r[n]<0||r[n]>255)&&(r._clipped=!0),r[n]=e(r[n],0,255)):3===n&&(r[n]=e(r[n],0,1));return r},t={},a=0,o=[\"Boolean\",\"Number\",\"String\",\"Function\",\"Array\",\"Date\",\"RegExp\",\"Undefined\",\"Null\"];a<o.length;a+=1){var f=o[a];t[\"[object \"+f+\"]\"]=f.toLowerCase()}var c=function(r){return t[Object.prototype.toString.call(r)]||\"object\"},u=c,i=function(r,e){return void 0===e&&(e=null),r.length>=3?Array.prototype.slice.call(r):\"object\"==u(r[0])&&e?e.split(\"\").filter((function(e){return void 0!==r[0][e]})).map((function(e){return r[0][e]})):r[0]},l=c,d=function(r){if(r.length<2)return null;var e=r.length-1;return\"string\"==l(r[e])?r[e].toLowerCase():null},s=Math.PI,h={clip_rgb:n,limit:r,type:c,unpack:i,last:d,PI:s,TWOPI:2*s,PITHIRD:s/3,DEG2RAD:s/180,RAD2DEG:180/s},b={format:{},autodetect:[]},p=h.last,g=h.clip_rgb,v=h.type,y=b,m=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=this;if(\"object\"===v(r[0])&&r[0].constructor&&r[0].constructor===this.constructor)return r[0];var t=p(r),a=!1;if(!t){a=!0,y.sorted||(y.autodetect=y.autodetect.sort((function(r,e){return e.p-r.p})),y.sorted=!0);for(var o=0,f=y.autodetect;o<f.length;o+=1){var c=f[o];if(t=c.test.apply(c,r))break}}if(!y.format[t])throw new Error(\"unknown format: \"+r);var u=y.format[t].apply(null,a?r:r.slice(0,-1));n._rgb=g(u),3===n._rgb.length&&n._rgb.push(1)};m.prototype.toString=function(){return\"function\"==v(this.hex)?this.hex():\"[\"+this._rgb.join(\",\")+\"]\"};var w=m,k=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(k.Color,[null].concat(r)))};k.Color=w,k.version=\"2.4.2\";var M=k,N=h.unpack,_=Math.max,P=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=N(r,\"rgb\"),t=n[0],a=n[1],o=n[2],f=1-_(t/=255,_(a/=255,o/=255)),c=f<1?1/(1-f):0;return[(1-t-f)*c,(1-a-f)*c,(1-o-f)*c,f]},E=h.unpack,C=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=(r=E(r,\"cmyk\"))[0],t=r[1],a=r[2],o=r[3],f=r.length>4?r[4]:1;return 1===o?[0,0,0,f]:[n>=1?0:255*(1-n)*(1-o),t>=1?0:255*(1-t)*(1-o),a>=1?0:255*(1-a)*(1-o),f]},S=M,O=w,G=b,A=h.unpack,x=h.type,j=P;O.prototype.cmyk=function(){return j(this._rgb)},S.cmyk=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(O,[null].concat(r,[\"cmyk\"])))},G.format.cmyk=C,G.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=A(r,\"cmyk\"),\"array\"===x(r)&&4===r.length)return\"cmyk\"}});var F=h.unpack,H=h.last,L=function(r){return Math.round(100*r)/100},D=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=F(r,\"hsla\"),t=H(r)||\"lsa\";return n[0]=L(n[0]||0),n[1]=L(100*n[1])+\"%\",n[2]=L(100*n[2])+\"%\",\"hsla\"===t||n.length>3&&n[3]<1?(n[3]=n.length>3?n[3]:1,t=\"hsla\"):n.length=3,t+\"(\"+n.join(\",\")+\")\"},q=h.unpack,R=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=(r=q(r,\"rgba\"))[0],t=r[1],a=r[2];n/=255,t/=255,a/=255;var o,f,c=Math.min(n,t,a),u=Math.max(n,t,a),i=(u+c)/2;return u===c?(o=0,f=Number.NaN):o=i<.5?(u-c)/(u+c):(u-c)/(2-u-c),n==u?f=(t-a)/(u-c):t==u?f=2+(a-n)/(u-c):a==u&&(f=4+(n-t)/(u-c)),(f*=60)<0&&(f+=360),r.length>3&&void 0!==r[3]?[f,o,i,r[3]]:[f,o,i]},B=h.unpack,I=h.last,Y=D,T=R,$=Math.round,z=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=B(r,\"rgba\"),t=I(r)||\"rgb\";return\"hsl\"==t.substr(0,3)?Y(T(n),t):(n[0]=$(n[0]),n[1]=$(n[1]),n[2]=$(n[2]),(\"rgba\"===t||n.length>3&&n[3]<1)&&(n[3]=n.length>3?n[3]:1,t=\"rgba\"),t+\"(\"+n.slice(0,\"rgb\"===t?3:4).join(\",\")+\")\")},U=h.unpack,X=Math.round,Z=function(){for(var r,e=[],n=arguments.length;n--;)e[n]=arguments[n];var t,a,o,f=(e=U(e,\"hsl\"))[0],c=e[1],u=e[2];if(0===c)t=a=o=255*u;else{var i=[0,0,0],l=[0,0,0],d=u<.5?u*(1+c):u+c-u*c,s=2*u-d,h=f/360;i[0]=h+1/3,i[1]=h,i[2]=h-1/3;for(var b=0;b<3;b++)i[b]<0&&(i[b]+=1),i[b]>1&&(i[b]-=1),6*i[b]<1?l[b]=s+6*(d-s)*i[b]:2*i[b]<1?l[b]=d:3*i[b]<2?l[b]=s+(d-s)*(2/3-i[b])*6:l[b]=s;t=(r=[X(255*l[0]),X(255*l[1]),X(255*l[2])])[0],a=r[1],o=r[2]}return e.length>3?[t,a,o,e[3]]:[t,a,o,1]},V=Z,W=b,K=/^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/,J=/^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,Q=/^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/,rr=/^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,er=/^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/,nr=/^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,tr=Math.round,ar=function(r){var e;if(r=r.toLowerCase().trim(),W.format.named)try{return W.format.named(r)}catch(b){}if(e=r.match(K)){for(var n=e.slice(1,4),t=0;t<3;t++)n[t]=+n[t];return n[3]=1,n}if(e=r.match(J)){for(var a=e.slice(1,5),o=0;o<4;o++)a[o]=+a[o];return a}if(e=r.match(Q)){for(var f=e.slice(1,4),c=0;c<3;c++)f[c]=tr(2.55*f[c]);return f[3]=1,f}if(e=r.match(rr)){for(var u=e.slice(1,5),i=0;i<3;i++)u[i]=tr(2.55*u[i]);return u[3]=+u[3],u}if(e=r.match(er)){var l=e.slice(1,4);l[1]*=.01,l[2]*=.01;var d=V(l);return d[3]=1,d}if(e=r.match(nr)){var s=e.slice(1,4);s[1]*=.01,s[2]*=.01;var h=V(s);return h[3]=+e[4],h}};ar.test=function(r){return K.test(r)||J.test(r)||Q.test(r)||rr.test(r)||er.test(r)||nr.test(r)};var or=ar,fr=M,cr=w,ur=b,ir=h.type,lr=z,dr=or;cr.prototype.css=function(r){return lr(this._rgb,r)},fr.css=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(cr,[null].concat(r,[\"css\"])))},ur.format.css=dr,ur.autodetect.push({p:5,test:function(r){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];if(!e.length&&\"string\"===ir(r)&&dr.test(r))return\"css\"}});var sr=w,hr=M,br=b,pr=h.unpack;br.format.gl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=pr(r,\"rgba\");return n[0]*=255,n[1]*=255,n[2]*=255,n},hr.gl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(sr,[null].concat(r,[\"gl\"])))},sr.prototype.gl=function(){var r=this._rgb;return[r[0]/255,r[1]/255,r[2]/255,r[3]]};var gr=h.unpack,vr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n,t=gr(r,\"rgb\"),a=t[0],o=t[1],f=t[2],c=Math.min(a,o,f),u=Math.max(a,o,f),i=u-c,l=100*i/255,d=c/(255-i)*100;return 0===i?n=Number.NaN:(a===u&&(n=(o-f)/i),o===u&&(n=2+(f-a)/i),f===u&&(n=4+(a-o)/i),(n*=60)<0&&(n+=360)),[n,l,d]},yr=h.unpack,mr=Math.floor,wr=function(){for(var r,e,n,t,a,o,f=[],c=arguments.length;c--;)f[c]=arguments[c];var u,i,l,d=(f=yr(f,\"hcg\"))[0],s=f[1],h=f[2];h*=255;var b=255*s;if(0===s)u=i=l=h;else{360===d&&(d=0),d>360&&(d-=360),d<0&&(d+=360);var p=mr(d/=60),g=d-p,v=h*(1-s),y=v+b*(1-g),m=v+b*g,w=v+b;switch(p){case 0:u=(r=[w,m,v])[0],i=r[1],l=r[2];break;case 1:u=(e=[y,w,v])[0],i=e[1],l=e[2];break;case 2:u=(n=[v,w,m])[0],i=n[1],l=n[2];break;case 3:u=(t=[v,y,w])[0],i=t[1],l=t[2];break;case 4:u=(a=[m,v,w])[0],i=a[1],l=a[2];break;case 5:u=(o=[w,v,y])[0],i=o[1],l=o[2]}}return[u,i,l,f.length>3?f[3]:1]},kr=h.unpack,Mr=h.type,Nr=M,_r=w,Pr=b,Er=vr;_r.prototype.hcg=function(){return Er(this._rgb)},Nr.hcg=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(_r,[null].concat(r,[\"hcg\"])))},Pr.format.hcg=wr,Pr.autodetect.push({p:1,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=kr(r,\"hcg\"),\"array\"===Mr(r)&&3===r.length)return\"hcg\"}});var Cr=h.unpack,Sr=h.last,Or=Math.round,Gr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=Cr(r,\"rgba\"),t=n[0],a=n[1],o=n[2],f=n[3],c=Sr(r)||\"auto\";void 0===f&&(f=1),\"auto\"===c&&(c=f<1?\"rgba\":\"rgb\");var u=\"000000\"+((t=Or(t))<<16|(a=Or(a))<<8|(o=Or(o))).toString(16);u=u.substr(u.length-6);var i=\"0\"+Or(255*f).toString(16);switch(i=i.substr(i.length-2),c.toLowerCase()){case\"rgba\":return\"#\"+u+i;case\"argb\":return\"#\"+i+u;default:return\"#\"+u}},Ar=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,xr=/^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/,jr=function(r){if(r.match(Ar)){4!==r.length&&7!==r.length||(r=r.substr(1)),3===r.length&&(r=(r=r.split(\"\"))[0]+r[0]+r[1]+r[1]+r[2]+r[2]);var e=parseInt(r,16);return[e>>16,e>>8&255,255&e,1]}if(r.match(xr)){5!==r.length&&9!==r.length||(r=r.substr(1)),4===r.length&&(r=(r=r.split(\"\"))[0]+r[0]+r[1]+r[1]+r[2]+r[2]+r[3]+r[3]);var n=parseInt(r,16);return[n>>24&255,n>>16&255,n>>8&255,Math.round((255&n)/255*100)/100]}throw new Error(\"unknown hex color: \"+r)},Fr=M,Hr=w,Lr=h.type,Dr=b,qr=Gr;Hr.prototype.hex=function(r){return qr(this._rgb,r)},Fr.hex=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(Hr,[null].concat(r,[\"hex\"])))},Dr.format.hex=jr,Dr.autodetect.push({p:4,test:function(r){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];if(!e.length&&\"string\"===Lr(r)&&[3,4,5,6,7,8,9].indexOf(r.length)>=0)return\"hex\"}});var Rr=h.unpack,Br=h.TWOPI,Ir=Math.min,Yr=Math.sqrt,Tr=Math.acos,$r=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n,t=Rr(r,\"rgb\"),a=t[0],o=t[1],f=t[2],c=Ir(a/=255,o/=255,f/=255),u=(a+o+f)/3,i=u>0?1-c/u:0;return 0===i?n=NaN:(n=(a-o+(a-f))/2,n/=Yr((a-o)*(a-o)+(a-f)*(o-f)),n=Tr(n),f>o&&(n=Br-n),n/=Br),[360*n,i,u]},zr=h.unpack,Ur=h.limit,Xr=h.TWOPI,Zr=h.PITHIRD,Vr=Math.cos,Wr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n,t,a,o=(r=zr(r,\"hsi\"))[0],f=r[1],c=r[2];return isNaN(o)&&(o=0),isNaN(f)&&(f=0),o>360&&(o-=360),o<0&&(o+=360),(o/=360)<1/3?t=1-((a=(1-f)/3)+(n=(1+f*Vr(Xr*o)/Vr(Zr-Xr*o))/3)):o<2/3?a=1-((n=(1-f)/3)+(t=(1+f*Vr(Xr*(o-=1/3))/Vr(Zr-Xr*o))/3)):n=1-((t=(1-f)/3)+(a=(1+f*Vr(Xr*(o-=2/3))/Vr(Zr-Xr*o))/3)),[255*(n=Ur(c*n*3)),255*(t=Ur(c*t*3)),255*(a=Ur(c*a*3)),r.length>3?r[3]:1]},Kr=h.unpack,Jr=h.type,Qr=M,re=w,ee=b,ne=$r;re.prototype.hsi=function(){return ne(this._rgb)},Qr.hsi=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(re,[null].concat(r,[\"hsi\"])))},ee.format.hsi=Wr,ee.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=Kr(r,\"hsi\"),\"array\"===Jr(r)&&3===r.length)return\"hsi\"}});var te=h.unpack,ae=h.type,oe=M,fe=w,ce=b,ue=R;fe.prototype.hsl=function(){return ue(this._rgb)},oe.hsl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(fe,[null].concat(r,[\"hsl\"])))},ce.format.hsl=Z,ce.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=te(r,\"hsl\"),\"array\"===ae(r)&&3===r.length)return\"hsl\"}});var ie=h.unpack,le=Math.min,de=Math.max,se=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n,t,a,o=(r=ie(r,\"rgb\"))[0],f=r[1],c=r[2],u=le(o,f,c),i=de(o,f,c),l=i-u;return a=i/255,0===i?(n=Number.NaN,t=0):(t=l/i,o===i&&(n=(f-c)/l),f===i&&(n=2+(c-o)/l),c===i&&(n=4+(o-f)/l),(n*=60)<0&&(n+=360)),[n,t,a]},he=h.unpack,be=Math.floor,pe=function(){for(var r,e,n,t,a,o,f=[],c=arguments.length;c--;)f[c]=arguments[c];var u,i,l,d=(f=he(f,\"hsv\"))[0],s=f[1],h=f[2];if(h*=255,0===s)u=i=l=h;else{360===d&&(d=0),d>360&&(d-=360),d<0&&(d+=360);var b=be(d/=60),p=d-b,g=h*(1-s),v=h*(1-s*p),y=h*(1-s*(1-p));switch(b){case 0:u=(r=[h,y,g])[0],i=r[1],l=r[2];break;case 1:u=(e=[v,h,g])[0],i=e[1],l=e[2];break;case 2:u=(n=[g,h,y])[0],i=n[1],l=n[2];break;case 3:u=(t=[g,v,h])[0],i=t[1],l=t[2];break;case 4:u=(a=[y,g,h])[0],i=a[1],l=a[2];break;case 5:u=(o=[h,g,v])[0],i=o[1],l=o[2]}}return[u,i,l,f.length>3?f[3]:1]},ge=h.unpack,ve=h.type,ye=M,me=w,we=b,ke=se;me.prototype.hsv=function(){return ke(this._rgb)},ye.hsv=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(me,[null].concat(r,[\"hsv\"])))},we.format.hsv=pe,we.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=ge(r,\"hsv\"),\"array\"===ve(r)&&3===r.length)return\"hsv\"}});var Me={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},Ne=Me,_e=h.unpack,Pe=Math.pow,Ee=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=_e(r,\"rgb\"),t=n[0],a=n[1],o=n[2],f=Oe(t,a,o),c=f[0],u=f[1],i=116*u-16;return[i<0?0:i,500*(c-u),200*(u-f[2])]},Ce=function(r){return(r/=255)<=.04045?r/12.92:Pe((r+.055)/1.055,2.4)},Se=function(r){return r>Ne.t3?Pe(r,1/3):r/Ne.t2+Ne.t0},Oe=function(r,e,n){return r=Ce(r),e=Ce(e),n=Ce(n),[Se((.4124564*r+.3575761*e+.1804375*n)/Ne.Xn),Se((.2126729*r+.7151522*e+.072175*n)/Ne.Yn),Se((.0193339*r+.119192*e+.9503041*n)/Ne.Zn)]},Ge=Ee,Ae=Me,xe=h.unpack,je=Math.pow,Fe=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n,t,a,o=(r=xe(r,\"lab\"))[0],f=r[1],c=r[2];return t=(o+16)/116,n=isNaN(f)?t:t+f/500,a=isNaN(c)?t:t-c/200,t=Ae.Yn*Le(t),n=Ae.Xn*Le(n),a=Ae.Zn*Le(a),[He(3.2404542*n-1.5371385*t-.4985314*a),He(-.969266*n+1.8760108*t+.041556*a),He(.0556434*n-.2040259*t+1.0572252*a),r.length>3?r[3]:1]},He=function(r){return 255*(r<=.00304?12.92*r:1.055*je(r,1/2.4)-.055)},Le=function(r){return r>Ae.t1?r*r*r:Ae.t2*(r-Ae.t0)},De=Fe,qe=h.unpack,Re=h.type,Be=M,Ie=w,Ye=b,Te=Ge;Ie.prototype.lab=function(){return Te(this._rgb)},Be.lab=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(Ie,[null].concat(r,[\"lab\"])))},Ye.format.lab=De,Ye.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=qe(r,\"lab\"),\"array\"===Re(r)&&3===r.length)return\"lab\"}});var $e=h.unpack,ze=h.RAD2DEG,Ue=Math.sqrt,Xe=Math.atan2,Ze=Math.round,Ve=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=$e(r,\"lab\"),t=n[0],a=n[1],o=n[2],f=Ue(a*a+o*o),c=(Xe(o,a)*ze+360)%360;return 0===Ze(1e4*f)&&(c=Number.NaN),[t,f,c]},We=h.unpack,Ke=Ge,Je=Ve,Qe=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=We(r,\"rgb\"),t=n[0],a=n[1],o=n[2],f=Ke(t,a,o),c=f[0],u=f[1],i=f[2];return Je(c,u,i)},rn=h.unpack,en=h.DEG2RAD,nn=Math.sin,tn=Math.cos,an=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=rn(r,\"lch\"),t=n[0],a=n[1],o=n[2];return isNaN(o)&&(o=0),[t,tn(o*=en)*a,nn(o)*a]},on=h.unpack,fn=an,cn=De,un=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=(r=on(r,\"lch\"))[0],t=r[1],a=r[2],o=fn(n,t,a),f=o[0],c=o[1],u=o[2],i=cn(f,c,u);return[i[0],i[1],i[2],r.length>3?r[3]:1]},ln=h.unpack,dn=un,sn=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=ln(r,\"hcl\").reverse();return dn.apply(void 0,n)},hn=h.unpack,bn=h.type,pn=M,gn=w,vn=b,yn=Qe;gn.prototype.lch=function(){return yn(this._rgb)},gn.prototype.hcl=function(){return yn(this._rgb).reverse()},pn.lch=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(gn,[null].concat(r,[\"lch\"])))},pn.hcl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(gn,[null].concat(r,[\"hcl\"])))},vn.format.lch=un,vn.format.hcl=sn,[\"lch\",\"hcl\"].forEach((function(r){return vn.autodetect.push({p:2,test:function(){for(var e=[],n=arguments.length;n--;)e[n]=arguments[n];if(e=hn(e,r),\"array\"===bn(e)&&3===e.length)return r}})}));var mn={aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflower:\"#6495ed\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",laserlemon:\"#ffff54\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrod:\"#fafad2\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgreen:\"#90ee90\",lightgrey:\"#d3d3d3\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",maroon2:\"#7f0000\",maroon3:\"#b03060\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370db\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#db7093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",purple2:\"#7f007f\",purple3:\"#a020f0\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"},wn=w,kn=b,Mn=h.type,Nn=mn,_n=jr,Pn=Gr;wn.prototype.name=function(){for(var r=Pn(this._rgb,\"rgb\"),e=0,n=Object.keys(Nn);e<n.length;e+=1){var t=n[e];if(Nn[t]===r)return t.toLowerCase()}return r},kn.format.named=function(r){if(r=r.toLowerCase(),Nn[r])return _n(Nn[r]);throw new Error(\"unknown color name: \"+r)},kn.autodetect.push({p:5,test:function(r){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];if(!e.length&&\"string\"===Mn(r)&&Nn[r.toLowerCase()])return\"named\"}});var En=h.unpack,Cn=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=En(r,\"rgb\");return(n[0]<<16)+(n[1]<<8)+n[2]},Sn=h.type,On=function(r){if(\"number\"==Sn(r)&&r>=0&&r<=16777215)return[r>>16,r>>8&255,255&r,1];throw new Error(\"unknown num color: \"+r)},Gn=M,An=w,xn=b,jn=h.type,Fn=Cn;An.prototype.num=function(){return Fn(this._rgb)},Gn.num=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(An,[null].concat(r,[\"num\"])))},xn.format.num=On,xn.autodetect.push({p:5,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(1===r.length&&\"number\"===jn(r[0])&&r[0]>=0&&r[0]<=16777215)return\"num\"}});var Hn=M,Ln=w,Dn=b,qn=h.unpack,Rn=h.type,Bn=Math.round;Ln.prototype.rgb=function(r){return void 0===r&&(r=!0),!1===r?this._rgb.slice(0,3):this._rgb.slice(0,3).map(Bn)},Ln.prototype.rgba=function(r){return void 0===r&&(r=!0),this._rgb.slice(0,4).map((function(e,n){return n<3?!1===r?e:Bn(e):e}))},Hn.rgb=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(Ln,[null].concat(r,[\"rgb\"])))},Dn.format.rgb=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=qn(r,\"rgba\");return void 0===n[3]&&(n[3]=1),n},Dn.autodetect.push({p:3,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=qn(r,\"rgba\"),\"array\"===Rn(r)&&(3===r.length||4===r.length&&\"number\"==Rn(r[3])&&r[3]>=0&&r[3]<=1))return\"rgb\"}});var In=Math.log,Yn=function(r){var e,n,t,a=r/100;return a<66?(e=255,n=a<6?0:-155.25485562709179-.44596950469579133*(n=a-2)+104.49216199393888*In(n),t=a<20?0:.8274096064007395*(t=a-10)-254.76935184120902+115.67994401066147*In(t)):(e=351.97690566805693+.114206453784165*(e=a-55)-40.25366309332127*In(e),n=325.4494125711974+.07943456536662342*(n=a-50)-28.0852963507957*In(n),t=255),[e,n,t,1]},Tn=Yn,$n=h.unpack,zn=Math.round,Un=M,Xn=w,Zn=b,Vn=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];for(var n,t=$n(r,\"rgb\"),a=t[0],o=t[2],f=1e3,c=4e4,u=.4;c-f>u;){var i=Tn(n=.5*(c+f));i[2]/i[0]>=o/a?c=n:f=n}return zn(n)};Xn.prototype.temp=Xn.prototype.kelvin=Xn.prototype.temperature=function(){return Vn(this._rgb)},Un.temp=Un.kelvin=Un.temperature=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(Xn,[null].concat(r,[\"temp\"])))},Zn.format.temp=Zn.format.kelvin=Zn.format.temperature=Yn;var Wn=h.unpack,Kn=Math.cbrt,Jn=Math.pow,Qn=Math.sign,rt=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=Wn(r,\"rgb\"),t=n[0],a=n[1],o=n[2],f=[et(t/255),et(a/255),et(o/255)],c=f[0],u=f[1],i=f[2],l=Kn(.4122214708*c+.5363325363*u+.0514459929*i),d=Kn(.2119034982*c+.6806995451*u+.1073969566*i),s=Kn(.0883024619*c+.2817188376*u+.6299787005*i);return[.2104542553*l+.793617785*d-.0040720468*s,1.9779984951*l-2.428592205*d+.4505937099*s,.0259040371*l+.7827717662*d-.808675766*s]};function et(r){var e=Math.abs(r);return e<.04045?r/12.92:(Qn(r)||1)*Jn((e+.055)/1.055,2.4)}var nt=h.unpack,tt=Math.pow,at=Math.sign,ot=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=(r=nt(r,\"lab\"))[0],t=r[1],a=r[2],o=tt(n+.3963377774*t+.2158037573*a,3),f=tt(n-.1055613458*t-.0638541728*a,3),c=tt(n-.0894841775*t-1.291485548*a,3);return[255*ft(4.0767416621*o-3.3077115913*f+.2309699292*c),255*ft(-1.2684380046*o+2.6097574011*f-.3413193965*c),255*ft(-.0041960863*o-.7034186147*f+1.707614701*c),r.length>3?r[3]:1]};function ft(r){var e=Math.abs(r);return e>.0031308?(at(r)||1)*(1.055*tt(e,1/2.4)-.055):12.92*r}var ct=h.unpack,ut=h.type,it=M,lt=w,dt=b,st=rt;lt.prototype.oklab=function(){return st(this._rgb)},it.oklab=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(lt,[null].concat(r,[\"oklab\"])))},dt.format.oklab=ot,dt.autodetect.push({p:3,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=ct(r,\"oklab\"),\"array\"===ut(r)&&3===r.length)return\"oklab\"}});var ht=h.unpack,bt=rt,pt=Ve,gt=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=ht(r,\"rgb\"),t=n[0],a=n[1],o=n[2],f=bt(t,a,o),c=f[0],u=f[1],i=f[2];return pt(c,u,i)},vt=h.unpack,yt=an,mt=ot,wt=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var n=(r=vt(r,\"lch\"))[0],t=r[1],a=r[2],o=yt(n,t,a),f=o[0],c=o[1],u=o[2],i=mt(f,c,u);return[i[0],i[1],i[2],r.length>3?r[3]:1]},kt=h.unpack,Mt=h.type,Nt=M,_t=w,Pt=b,Et=gt;_t.prototype.oklch=function(){return Et(this._rgb)},Nt.oklch=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(_t,[null].concat(r,[\"oklch\"])))},Pt.format.oklch=wt,Pt.autodetect.push({p:3,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=kt(r,\"oklch\"),\"array\"===Mt(r)&&3===r.length)return\"oklch\"}});var Ct=w,St=h.type;Ct.prototype.alpha=function(r,e){return void 0===e&&(e=!1),void 0!==r&&\"number\"===St(r)?e?(this._rgb[3]=r,this):new Ct([this._rgb[0],this._rgb[1],this._rgb[2],r],\"rgb\"):this._rgb[3]},w.prototype.clipped=function(){return this._rgb._clipped||!1};var Ot=w,Gt=Me;Ot.prototype.darken=function(r){void 0===r&&(r=1);var e=this,n=e.lab();return n[0]-=Gt.Kn*r,new Ot(n,\"lab\").alpha(e.alpha(),!0)},Ot.prototype.brighten=function(r){return void 0===r&&(r=1),this.darken(-r)},Ot.prototype.darker=Ot.prototype.darken,Ot.prototype.brighter=Ot.prototype.brighten,w.prototype.get=function(r){var e=r.split(\".\"),n=e[0],t=e[1],a=this[n]();if(t){var o=n.indexOf(t)-(\"ok\"===n.substr(0,2)?2:0);if(o>-1)return a[o];throw new Error(\"unknown channel \"+t+\" in mode \"+n)}return a};var At=w,xt=h.type,jt=Math.pow,Ft=1e-7,Ht=20;At.prototype.luminance=function(r){if(void 0!==r&&\"number\"===xt(r)){if(0===r)return new At([0,0,0,this._rgb[3]],\"rgb\");if(1===r)return new At([255,255,255,this._rgb[3]],\"rgb\");var e=this.luminance(),n=\"rgb\",t=Ht,a=function(e,o){var f=e.interpolate(o,.5,n),c=f.luminance();return Math.abs(r-c)<Ft||!t--?f:c>r?a(e,f):a(f,o)},o=(e>r?a(new At([0,0,0]),this):a(this,new At([255,255,255]))).rgb();return new At(o.concat([this._rgb[3]]))}return Lt.apply(void 0,this._rgb.slice(0,3))};var Lt=function(r,e,n){return.2126*(r=Dt(r))+.7152*(e=Dt(e))+.0722*(n=Dt(n))},Dt=function(r){return(r/=255)<=.03928?r/12.92:jt((r+.055)/1.055,2.4)},qt={},Rt=w,Bt=h.type,It=qt,Yt=function(r,e,n){void 0===n&&(n=.5);for(var t=[],a=arguments.length-3;a-- >0;)t[a]=arguments[a+3];var o=t[0]||\"lrgb\";if(It[o]||t.length||(o=Object.keys(It)[0]),!It[o])throw new Error(\"interpolation mode \"+o+\" is not defined\");return\"object\"!==Bt(r)&&(r=new Rt(r)),\"object\"!==Bt(e)&&(e=new Rt(e)),It[o](r,e,n).alpha(r.alpha()+n*(e.alpha()-r.alpha()))},Tt=w,$t=Yt;Tt.prototype.mix=Tt.prototype.interpolate=function(r,e){void 0===e&&(e=.5);for(var n=[],t=arguments.length-2;t-- >0;)n[t]=arguments[t+2];return $t.apply(void 0,[this,r,e].concat(n))};var zt=w;zt.prototype.premultiply=function(r){void 0===r&&(r=!1);var e=this._rgb,n=e[3];return r?(this._rgb=[e[0]*n,e[1]*n,e[2]*n,n],this):new zt([e[0]*n,e[1]*n,e[2]*n,n],\"rgb\")};var Ut=w,Xt=Me;Ut.prototype.saturate=function(r){void 0===r&&(r=1);var e=this,n=e.lch();return n[1]+=Xt.Kn*r,n[1]<0&&(n[1]=0),new Ut(n,\"lch\").alpha(e.alpha(),!0)},Ut.prototype.desaturate=function(r){return void 0===r&&(r=1),this.saturate(-r)};var Zt=w,Vt=h.type;Zt.prototype.set=function(r,e,n){void 0===n&&(n=!1);var t=r.split(\".\"),a=t[0],o=t[1],f=this[a]();if(o){var c=a.indexOf(o)-(\"ok\"===a.substr(0,2)?2:0);if(c>-1){if(\"string\"==Vt(e))switch(e.charAt(0)){case\"+\":case\"-\":f[c]+=+e;break;case\"*\":f[c]*=+e.substr(1);break;case\"/\":f[c]/=+e.substr(1);break;default:f[c]=+e}else{if(\"number\"!==Vt(e))throw new Error(\"unsupported value for Color.set\");f[c]=e}var u=new Zt(f,a);return n?(this._rgb=u._rgb,this):u}throw new Error(\"unknown channel \"+o+\" in mode \"+a)}return f};var Wt=w,Kt=function(r,e,n){var t=r._rgb,a=e._rgb;return new Wt(t[0]+n*(a[0]-t[0]),t[1]+n*(a[1]-t[1]),t[2]+n*(a[2]-t[2]),\"rgb\")};qt.rgb=Kt;var Jt=w,Qt=Math.sqrt,ra=Math.pow,ea=function(r,e,n){var t=r._rgb,a=t[0],o=t[1],f=t[2],c=e._rgb,u=c[0],i=c[1],l=c[2];return new Jt(Qt(ra(a,2)*(1-n)+ra(u,2)*n),Qt(ra(o,2)*(1-n)+ra(i,2)*n),Qt(ra(f,2)*(1-n)+ra(l,2)*n),\"rgb\")};qt.lrgb=ea;var na=w,ta=function(r,e,n){var t=r.lab(),a=e.lab();return new na(t[0]+n*(a[0]-t[0]),t[1]+n*(a[1]-t[1]),t[2]+n*(a[2]-t[2]),\"lab\")};qt.lab=ta;var aa=w,oa=function(r,e,n,t){var a,o,f,c,u,i,l,d,s,h,b,p,g;return\"hsl\"===t?(f=r.hsl(),c=e.hsl()):\"hsv\"===t?(f=r.hsv(),c=e.hsv()):\"hcg\"===t?(f=r.hcg(),c=e.hcg()):\"hsi\"===t?(f=r.hsi(),c=e.hsi()):\"lch\"===t||\"hcl\"===t?(t=\"hcl\",f=r.hcl(),c=e.hcl()):\"oklch\"===t&&(f=r.oklch().reverse(),c=e.oklch().reverse()),\"h\"!==t.substr(0,1)&&\"oklch\"!==t||(u=(a=f)[0],l=a[1],s=a[2],i=(o=c)[0],d=o[1],h=o[2]),isNaN(u)||isNaN(i)?isNaN(u)?isNaN(i)?p=Number.NaN:(p=i,1!=s&&0!=s||\"hsv\"==t||(b=d)):(p=u,1!=h&&0!=h||\"hsv\"==t||(b=l)):p=u+n*(i>u&&i-u>180?i-(u+360):i<u&&u-i>180?i+360-u:i-u),void 0===b&&(b=l+n*(d-l)),g=s+n*(h-s),new aa(\"oklch\"===t?[g,b,p]:[p,b,g],t)},fa=oa,ca=function(r,e,n){return fa(r,e,n,\"lch\")};qt.lch=ca,qt.hcl=ca;var ua=w,ia=function(r,e,n){var t=r.num(),a=e.num();return new ua(t+n*(a-t),\"num\")};qt.num=ia;var la=oa,da=function(r,e,n){return la(r,e,n,\"hcg\")};qt.hcg=da;var sa=oa,ha=function(r,e,n){return sa(r,e,n,\"hsi\")};qt.hsi=ha;var ba=oa,pa=function(r,e,n){return ba(r,e,n,\"hsl\")};qt.hsl=pa;var ga=oa,va=function(r,e,n){return ga(r,e,n,\"hsv\")};qt.hsv=va;var ya=w,ma=function(r,e,n){var t=r.oklab(),a=e.oklab();return new ya(t[0]+n*(a[0]-t[0]),t[1]+n*(a[1]-t[1]),t[2]+n*(a[2]-t[2]),\"oklab\")};qt.oklab=ma;var wa=oa,ka=function(r,e,n){return wa(r,e,n,\"oklch\")};qt.oklch=ka;var Ma=w,Na=h.clip_rgb,_a=Math.pow,Pa=Math.sqrt,Ea=Math.PI,Ca=Math.cos,Sa=Math.sin,Oa=Math.atan2,Ga=function(r,e,n){void 0===e&&(e=\"lrgb\"),void 0===n&&(n=null);var t=r.length;n||(n=Array.from(new Array(t)).map((function(){return 1})));var a=t/n.reduce((function(r,e){return r+e}));if(n.forEach((function(r,e){n[e]*=a})),r=r.map((function(r){return new Ma(r)})),\"lrgb\"===e)return Aa(r,n);for(var o=r.shift(),f=o.get(e),c=[],u=0,i=0,l=0;l<f.length;l++)if(f[l]=(f[l]||0)*n[0],c.push(isNaN(f[l])?0:n[0]),\"h\"===e.charAt(l)&&!isNaN(f[l])){var d=f[l]/180*Ea;u+=Ca(d)*n[0],i+=Sa(d)*n[0]}var s=o.alpha()*n[0];r.forEach((function(r,t){var a=r.get(e);s+=r.alpha()*n[t+1];for(var o=0;o<f.length;o++)if(!isNaN(a[o]))if(c[o]+=n[t+1],\"h\"===e.charAt(o)){var l=a[o]/180*Ea;u+=Ca(l)*n[t+1],i+=Sa(l)*n[t+1]}else f[o]+=a[o]*n[t+1]}));for(var h=0;h<f.length;h++)if(\"h\"===e.charAt(h)){for(var b=Oa(i/c[h],u/c[h])/Ea*180;b<0;)b+=360;for(;b>=360;)b-=360;f[h]=b}else f[h]=f[h]/c[h];return s/=t,new Ma(f,e).alpha(s>.99999?1:s,!0)},Aa=function(r,e){for(var n=r.length,t=[0,0,0,0],a=0;a<r.length;a++){var o=r[a],f=e[a]/n,c=o._rgb;t[0]+=_a(c[0],2)*f,t[1]+=_a(c[1],2)*f,t[2]+=_a(c[2],2)*f,t[3]+=c[3]*f}return t[0]=Pa(t[0]),t[1]=Pa(t[1]),t[2]=Pa(t[2]),t[3]>.9999999&&(t[3]=1),new Ma(Na(t))},xa=M,ja=h.type,Fa=Math.pow,Ha=function(r){var e=\"rgb\",n=xa(\"#ccc\"),t=0,a=[0,1],o=[],f=[0,0],c=!1,u=[],i=!1,l=0,d=1,s=!1,h={},b=!0,p=1,g=function(r){if((r=r||[\"#fff\",\"#000\"])&&\"string\"===ja(r)&&xa.brewer&&xa.brewer[r.toLowerCase()]&&(r=xa.brewer[r.toLowerCase()]),\"array\"===ja(r)){1===r.length&&(r=[r[0],r[0]]),r=r.slice(0);for(var e=0;e<r.length;e++)r[e]=xa(r[e]);o.length=0;for(var n=0;n<r.length;n++)o.push(n/(r.length-1))}return k(),u=r},v=function(r){if(null!=c){for(var e=c.length-1,n=0;n<e&&r>=c[n];)n++;return n-1}return 0},y=function(r){return r},m=function(r){return r},w=function(r,t){var a,i;if(null==t&&(t=!1),isNaN(r)||null===r)return n;i=t?r:c&&c.length>2?v(r)/(c.length-2):d!==l?(r-l)/(d-l):1,i=m(i),t||(i=y(i)),1!==p&&(i=Fa(i,p)),i=f[0]+i*(1-f[0]-f[1]),i=Math.min(1,Math.max(0,i));var s=Math.floor(1e4*i);if(b&&h[s])a=h[s];else{if(\"array\"===ja(u))for(var g=0;g<o.length;g++){var w=o[g];if(i<=w){a=u[g];break}if(i>=w&&g===o.length-1){a=u[g];break}if(i>w&&i<o[g+1]){i=(i-w)/(o[g+1]-w),a=xa.interpolate(u[g],u[g+1],i,e);break}}else\"function\"===ja(u)&&(a=u(i));b&&(h[s]=a)}return a},k=function(){return h={}};g(r);var M=function(r){var e=xa(w(r));return i&&e[i]?e[i]():e};return M.classes=function(r){if(null!=r){if(\"array\"===ja(r))c=r,a=[r[0],r[r.length-1]];else{var e=xa.analyze(a);c=0===r?[e.min,e.max]:xa.limits(e,\"e\",r)}return M}return c},M.domain=function(r){if(!arguments.length)return a;l=r[0],d=r[r.length-1],o=[];var e=u.length;if(r.length===e&&l!==d)for(var n=0,t=Array.from(r);n<t.length;n+=1){var f=t[n];o.push((f-l)/(d-l))}else{for(var c=0;c<e;c++)o.push(c/(e-1));if(r.length>2){var i=r.map((function(e,n){return n/(r.length-1)})),s=r.map((function(r){return(r-l)/(d-l)}));s.every((function(r,e){return i[e]===r}))||(m=function(r){if(r<=0||r>=1)return r;for(var e=0;r>=s[e+1];)e++;var n=(r-s[e])/(s[e+1]-s[e]);return i[e]+n*(i[e+1]-i[e])})}}return a=[l,d],M},M.mode=function(r){return arguments.length?(e=r,k(),M):e},M.range=function(r,e){return g(r),M},M.out=function(r){return i=r,M},M.spread=function(r){return arguments.length?(t=r,M):t},M.correctLightness=function(r){return null==r&&(r=!0),s=r,k(),y=s?function(r){for(var e=w(0,!0).lab()[0],n=w(1,!0).lab()[0],t=e>n,a=w(r,!0).lab()[0],o=e+(n-e)*r,f=a-o,c=0,u=1,i=20;Math.abs(f)>.01&&i-- >0;)t&&(f*=-1),f<0?(c=r,r+=.5*(u-r)):(u=r,r+=.5*(c-r)),a=w(r,!0).lab()[0],f=a-o;return r}:function(r){return r},M},M.padding=function(r){return null!=r?(\"number\"===ja(r)&&(r=[r,r]),f=r,M):f},M.colors=function(e,n){arguments.length<2&&(n=\"hex\");var t=[];if(0===arguments.length)t=u.slice(0);else if(1===e)t=[M(.5)];else if(e>1){var o=a[0],f=a[1]-o;t=La(0,e,!1).map((function(r){return M(o+r/(e-1)*f)}))}else{r=[];var i=[];if(c&&c.length>2)for(var l=1,d=c.length,s=1<=d;s?l<d:l>d;s?l++:l--)i.push(.5*(c[l-1]+c[l]));else i=a;t=i.map((function(r){return M(r)}))}return xa[n]&&(t=t.map((function(r){return r[n]()}))),t},M.cache=function(r){return null!=r?(b=r,M):b},M.gamma=function(r){return null!=r?(p=r,M):p},M.nodata=function(r){return null!=r?(n=xa(r),M):n},M};function La(r,e,n){for(var t=[],a=r<e,o=n?a?e+1:e-1:e,f=r;a?f<o:f>o;a?f++:f--)t.push(f);return t}var Da=w,qa=Ha,Ra=function(r){for(var e=[1,1],n=1;n<r;n++){for(var t=[1],a=1;a<=e.length;a++)t[a]=(e[a]||0)+e[a-1];e=t}return e},Ba=function(r){var e,n,t,a,o,f,c;if(2===(r=r.map((function(r){return new Da(r)}))).length)e=r.map((function(r){return r.lab()})),o=e[0],f=e[1],a=function(r){var e=[0,1,2].map((function(e){return o[e]+r*(f[e]-o[e])}));return new Da(e,\"lab\")};else if(3===r.length)n=r.map((function(r){return r.lab()})),o=n[0],f=n[1],c=n[2],a=function(r){var e=[0,1,2].map((function(e){return(1-r)*(1-r)*o[e]+2*(1-r)*r*f[e]+r*r*c[e]}));return new Da(e,\"lab\")};else if(4===r.length){var u;t=r.map((function(r){return r.lab()})),o=t[0],f=t[1],c=t[2],u=t[3],a=function(r){var e=[0,1,2].map((function(e){return(1-r)*(1-r)*(1-r)*o[e]+3*(1-r)*(1-r)*r*f[e]+3*(1-r)*r*r*c[e]+r*r*r*u[e]}));return new Da(e,\"lab\")}}else{if(!(r.length>=5))throw new RangeError(\"No point in running bezier with only one color.\");var i,l,d;i=r.map((function(r){return r.lab()})),d=r.length-1,l=Ra(d),a=function(r){var e=1-r,n=[0,1,2].map((function(n){return i.reduce((function(t,a,o){return t+l[o]*Math.pow(e,d-o)*Math.pow(r,o)*a[n]}),0)}));return new Da(n,\"lab\")}}return a},Ia=function(r){var e=Ba(r);return e.scale=function(){return qa(e)},e},Ya=M,Ta=function(r,e,n){if(!Ta[n])throw new Error(\"unknown blend mode \"+n);return Ta[n](r,e)},$a=function(r){return function(e,n){var t=Ya(n).rgb(),a=Ya(e).rgb();return Ya.rgb(r(t,a))}},za=function(r){return function(e,n){var t=[];return t[0]=r(e[0],n[0]),t[1]=r(e[1],n[1]),t[2]=r(e[2],n[2]),t}},Ua=function(r){return r},Xa=function(r,e){return r*e/255},Za=function(r,e){return r>e?e:r},Va=function(r,e){return r>e?r:e},Wa=function(r,e){return 255*(1-(1-r/255)*(1-e/255))},Ka=function(r,e){return e<128?2*r*e/255:255*(1-2*(1-r/255)*(1-e/255))},Ja=function(r,e){return 255*(1-(1-e/255)/(r/255))},Qa=function(r,e){return 255===r||(r=e/255*255/(1-r/255))>255?255:r};Ta.normal=$a(za(Ua)),Ta.multiply=$a(za(Xa)),Ta.screen=$a(za(Wa)),Ta.overlay=$a(za(Ka)),Ta.darken=$a(za(Za)),Ta.lighten=$a(za(Va)),Ta.dodge=$a(za(Qa)),Ta.burn=$a(za(Ja));for(var ro=Ta,eo=h.type,no=h.clip_rgb,to=h.TWOPI,ao=Math.pow,oo=Math.sin,fo=Math.cos,co=M,uo=function(r,e,n,t,a){void 0===r&&(r=300),void 0===e&&(e=-1.5),void 0===n&&(n=1),void 0===t&&(t=1),void 0===a&&(a=[0,1]);var o,f=0;\"array\"===eo(a)?o=a[1]-a[0]:(o=0,a=[a,a]);var c=function(c){var u=to*((r+120)/360+e*c),i=ao(a[0]+o*c,t),l=(0!==f?n[0]+c*f:n)*i*(1-i)/2,d=fo(u),s=oo(u);return co(no([255*(i+l*(-.14861*d+1.78277*s)),255*(i+l*(-.29227*d-.90649*s)),255*(i+l*(1.97294*d)),1]))};return c.start=function(e){return null==e?r:(r=e,c)},c.rotations=function(r){return null==r?e:(e=r,c)},c.gamma=function(r){return null==r?t:(t=r,c)},c.hue=function(r){return null==r?n:(\"array\"===eo(n=r)?0===(f=n[1]-n[0])&&(n=n[1]):f=0,c)},c.lightness=function(r){return null==r?a:(\"array\"===eo(r)?(a=r,o=r[1]-r[0]):(a=[r,r],o=0),c)},c.scale=function(){return co.scale(c)},c.hue(n),c},io=w,lo=\"0123456789abcdef\",so=Math.floor,ho=Math.random,bo=function(){for(var r=\"#\",e=0;e<6;e++)r+=lo.charAt(so(16*ho()));return new io(r,\"hex\")},po=c,go=Math.log,vo=Math.pow,yo=Math.floor,mo=Math.abs,wo=function(r,e){void 0===e&&(e=null);var n={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0};return\"object\"===po(r)&&(r=Object.values(r)),r.forEach((function(r){e&&\"object\"===po(r)&&(r=r[e]),void 0===r||null===r||isNaN(r)||(n.values.push(r),n.sum+=r,r<n.min&&(n.min=r),r>n.max&&(n.max=r),n.count+=1)})),n.domain=[n.min,n.max],n.limits=function(r,e){return ko(n,r,e)},n},ko=function(r,e,n){void 0===e&&(e=\"equal\"),void 0===n&&(n=7),\"array\"==po(r)&&(r=wo(r));var t=r.min,a=r.max,o=r.values.sort((function(r,e){return r-e}));if(1===n)return[t,a];var f=[];if(\"c\"===e.substr(0,1)&&(f.push(t),f.push(a)),\"e\"===e.substr(0,1)){f.push(t);for(var c=1;c<n;c++)f.push(t+c/n*(a-t));f.push(a)}else if(\"l\"===e.substr(0,1)){if(t<=0)throw new Error(\"Logarithmic scales are only possible for values > 0\");var u=Math.LOG10E*go(t),i=Math.LOG10E*go(a);f.push(t);for(var l=1;l<n;l++)f.push(vo(10,u+l/n*(i-u)));f.push(a)}else if(\"q\"===e.substr(0,1)){f.push(t);for(var d=1;d<n;d++){var s=(o.length-1)*d/n,h=yo(s);if(h===s)f.push(o[h]);else{var b=s-h;f.push(o[h]*(1-b)+o[h+1]*b)}}f.push(a)}else if(\"k\"===e.substr(0,1)){var p,g=o.length,v=new Array(g),y=new Array(n),m=!0,w=0,k=null;(k=[]).push(t);for(var M=1;M<n;M++)k.push(t+M/n*(a-t));for(k.push(a);m;){for(var N=0;N<n;N++)y[N]=0;for(var _=0;_<g;_++)for(var P=o[_],E=Number.MAX_VALUE,C=void 0,S=0;S<n;S++){var O=mo(k[S]-P);O<E&&(E=O,C=S),y[C]++,v[_]=C}for(var G=new Array(n),A=0;A<n;A++)G[A]=null;for(var x=0;x<g;x++)null===G[p=v[x]]?G[p]=o[x]:G[p]+=o[x];for(var j=0;j<n;j++)G[j]*=1/y[j];m=!1;for(var F=0;F<n;F++)if(G[F]!==k[F]){m=!0;break}k=G,++w>200&&(m=!1)}for(var H={},L=0;L<n;L++)H[L]=[];for(var D=0;D<g;D++)H[p=v[D]].push(o[D]);for(var q=[],R=0;R<n;R++)q.push(H[R][0]),q.push(H[R][H[R].length-1]);q=q.sort((function(r,e){return r-e})),f.push(q[0]);for(var B=1;B<q.length;B+=2){var I=q[B];isNaN(I)||-1!==f.indexOf(I)||f.push(I)}}return f},Mo={analyze:wo,limits:ko},No=w,_o=function(r,e){r=new No(r),e=new No(e);var n=r.luminance(),t=e.luminance();return n>t?(n+.05)/(t+.05):(t+.05)/(n+.05)},Po=w,Eo=Math.sqrt,Co=Math.pow,So=Math.min,Oo=Math.max,Go=Math.atan2,Ao=Math.abs,xo=Math.cos,jo=Math.sin,Fo=Math.exp,Ho=Math.PI,Lo=function(r,e,n,t,a){void 0===n&&(n=1),void 0===t&&(t=1),void 0===a&&(a=1);var o=function(r){return 360*r/(2*Ho)},f=function(r){return 2*Ho*r/360};r=new Po(r),e=new Po(e);var c=Array.from(r.lab()),u=c[0],i=c[1],l=c[2],d=Array.from(e.lab()),s=d[0],h=d[1],b=d[2],p=(u+s)/2,g=(Eo(Co(i,2)+Co(l,2))+Eo(Co(h,2)+Co(b,2)))/2,v=.5*(1-Eo(Co(g,7)/(Co(g,7)+Co(25,7)))),y=i*(1+v),m=h*(1+v),w=Eo(Co(y,2)+Co(l,2)),k=Eo(Co(m,2)+Co(b,2)),M=(w+k)/2,N=o(Go(l,y)),_=o(Go(b,m)),P=N>=0?N:N+360,E=_>=0?_:_+360,C=Ao(P-E)>180?(P+E+360)/2:(P+E)/2,S=1-.17*xo(f(C-30))+.24*xo(f(2*C))+.32*xo(f(3*C+6))-.2*xo(f(4*C-63)),O=E-P;O=Ao(O)<=180?O:E<=P?O+360:O-360,O=2*Eo(w*k)*jo(f(O)/2);var G=s-u,A=k-w,x=1+.015*Co(p-50,2)/Eo(20+Co(p-50,2)),j=1+.045*M,F=1+.015*M*S,H=30*Fo(-Co((C-275)/25,2)),L=-2*Eo(Co(M,7)/(Co(M,7)+Co(25,7)))*jo(2*f(H)),D=Eo(Co(G/(n*x),2)+Co(A/(t*j),2)+Co(O/(a*F),2)+L*(A/(t*j))*(O/(a*F)));return Oo(0,So(100,D))},Do=w,qo=function(r,e,n){void 0===n&&(n=\"lab\"),r=new Do(r),e=new Do(e);var t=r.get(n),a=e.get(n),o=0;for(var f in t){var c=(t[f]||0)-(a[f]||0);o+=c*c}return Math.sqrt(o)},Ro=w,Bo=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];try{return new(Function.prototype.bind.apply(Ro,[null].concat(r))),!0}catch(n){return!1}},Io=M,Yo=Ha,To={cool:function(){return Yo([Io.hsl(180,1,.9),Io.hsl(250,.7,.4)])},hot:function(){return Yo([\"#000\",\"#f00\",\"#ff0\",\"#fff\"]).mode(\"rgb\")}},$o={OrRd:[\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"],PuBu:[\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"],BuPu:[\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"],Oranges:[\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"],BuGn:[\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlOrBr:[\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"],YlGn:[\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"],Reds:[\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"],RdPu:[\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"],Greens:[\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlGnBu:[\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],Purples:[\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"],GnBu:[\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"],Greys:[\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"],YlOrRd:[\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"],PuRd:[\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"],Blues:[\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"],PuBuGn:[\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"],Viridis:[\"#440154\",\"#482777\",\"#3f4a8a\",\"#31678e\",\"#26838f\",\"#1f9d8a\",\"#6cce5a\",\"#b6de2b\",\"#fee825\"],Spectral:[\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],RdYlGn:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],RdBu:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],PiYG:[\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],PRGn:[\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],RdYlBu:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],BrBG:[\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],RdGy:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],PuOr:[\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],Set2:[\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"],Accent:[\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"],Set1:[\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"],Set3:[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],Dark2:[\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"],Paired:[\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"],Pastel2:[\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"],Pastel1:[\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]},zo=0,Uo=Object.keys($o);zo<Uo.length;zo+=1){var Xo=Uo[zo];$o[Xo.toLowerCase()]=$o[Xo]}var Zo=$o,Vo=M;return Vo.average=Ga,Vo.bezier=Ia,Vo.blend=ro,Vo.cubehelix=uo,Vo.mix=Vo.interpolate=Yt,Vo.random=bo,Vo.scale=Ha,Vo.analyze=Mo.analyze,Vo.contrast=_o,Vo.deltaE=Lo,Vo.distance=qo,Vo.limits=Mo.limits,Vo.valid=Bo,Vo.scales=To,Vo.colors=mn,Vo.brewer=Zo,Vo}()}}]);","map":{"version":3,"sources":["static/chunks/0629c767be149045eb89ce07395b533608886ff0.c7ed2a5114598b932e39.js"],"names":["window","push","3mUM","module","__webpack_exports__","__webpack_require__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","DEFAULT","colorPrimary","colorSecondary","colorNeutral","colorError","colorError2","colorSuccess","cardHeaderPrimaryGradientColors","cardHeaderSecondaryGradientColors","turnStatusColors","COMPLETED","CANCELLED","ABSENT","THEMES","chroma","colorToHex","color","hex","elem","index","YUnZ","exports","limit$2","x","min","max","limit$1","clip_rgb$3","rgb","_clipped","_unclipped","slice","classToType","i$1","list$1","name","toLowerCase","type$p","obj","prototype","toString","call","type$o","unpack$B","args","keyOrder","Array","split","k","undefined","map","type$n","last$4","l","PI$2","Math","PI","utils","clip_rgb","limit","type","unpack","last","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$h","format","autodetect","last$3","clip_rgb$2","type$m","_input","Color$D","len","me","this","constructor","mode","sorted","sort","a","b","p","list","chk","test","Error","_rgb","join","Color_1","chroma$k","Function","bind","Color","concat","version","chroma_1","unpack$A","max$2","rgb2cmyk_1","ref","r","g","f","unpack$z","cmyk2rgb_1","c","m","y","alpha","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","cmyk","unpack$x","last$2","rnd","round","hsl2css_1","hsla","unpack$w","rgb2hsl_1","s","h","Number","NaN","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css_1","rgba","substr","unpack$u","round$5","hsl2rgb_1","assign","t3","t2","t1","h_","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","e","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","input$d","unpack$t","gl","unpack$s","rgb2hcg_1","delta","_g","unpack$r","floor$3","floor","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","hcg","unpack$p","round$3","rgb2hex_1","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","u","parseInt","u$1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","indexOf","unpack$o","TWOPI$2","min$2","sqrt$4","sqrt","acos","rgb2hsi_1","min_","unpack$n","TWOPI$1","cos$4","cos","hsi2rgb_1","isNaN","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsv$1","max_","unpack$j","floor$2","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$h","pow$a","pow","rgb2lab$2","ref$1","rgb2xyz","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$g","pow$9","lab2rgb$1","z","lab_xyz","xyz_rgb","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","lab","unpack$e","sqrt$3","atan2$2","atan2","round$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch_1","b_","unpack$c","sin$3","sin","cos$3","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb_1","L","unpack$a","lch2rgb","hcl2rgb_1","hcl","reverse","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","lch","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color$s","input$5","type$c","w3cx11","hex2rgb","rgb2hex","n","unpack$8","rgb2num_1","type$b","num2rgb_1","num","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","log","temperature2rgb_1","kelvin","temp","temperature2rgb","unpack$6","chroma$7","Color$p","input$2","rgb2temperature","minTemp","maxTemp","eps","temperature","unpack$5","cbrt","pow$8","sign$1","sign","rgb2oklab_1","rgb2lrgb","lr","lg","lb","abs","unpack$4","pow$7","oklab2rgb_1","lrgb2rgb","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","oklab","unpack$2","rgb2oklab","lab2lch","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb_1","type$7","chroma$5","Color$n","input","rgb2oklch","oklch","Color$m","type$6","mutate","clipped","Color$k","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","get","mc","channel","src","Color$i","type$5","pow$6","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","mix","Color$f","premultiply","Color$e","LAB_CONSTANTS","saturate","desaturate","Color$d","type$3","set","value","charAt","out","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","Color$7","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","binom_row","row","newrow","j","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","sum","el","bezier_1","scale","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","lighten","screen","overlay","burn","dodge","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random","random_1","code","pow$1","abs$1","data","MAX_VALUE","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","exp","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","Color$1","distance","sum_sq","valid","chroma$1","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","factory"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,GAAG,CAEpEC,OACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACqB,IAAIC,EAAyED,EAAoB,QAGtH,SAASE,EAAQC,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAAaC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAAgBP,EAAKT,KAAKiB,MAAMR,EAAMG,GAAY,OAAOH,EAE9U,SAASS,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKd,EAAQI,OAAOa,IAAS,GAAMC,SAAQ,SAAUC,GAAOf,OAAOL,EAAwF,EAA/FK,CAAkGS,EAAQM,EAAKF,EAAOE,OAAsBf,OAAOgB,0BAA6BhB,OAAOiB,iBAAiBR,EAAQT,OAAOgB,0BAA0BH,IAAmBjB,EAAQI,OAAOa,IAASC,SAAQ,SAAUC,GAAOf,OAAOkB,eAAeT,EAAQM,EAAKf,OAAOK,yBAAyBQ,EAAQE,OAAe,OAAON,EAE/lB,IAAIU,EAAU,CACZC,aAAc,UACdC,eAAgB,OAChBC,aAAc,OACdC,WAAY,UACZC,YAAa,UACbC,aAAc,QACdC,gCAAiC,CAAC,SAAU,UAC5CC,kCAAmC,CAAC,UAAW,QAC/CC,iBAAkB,CAChBC,UAAW,QACXC,UAAW,SACXC,OAAQ,QAGRC,EAAS,CAACxB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAC1DC,aAAc,UACdC,eAAgB,UAChBC,aAAc,UACdG,aAAc,QACdC,gCAAiC,CAAC,UAAW,WAC7CC,kCAAmC,CAAC,UAAW,aAC7CnB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,SACdC,eAAgB,SAChBE,WAAY,WACVf,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,SACdC,eAAgB,QAChBK,gCAAiC,CAAC,SAAU,UAC5CC,kCAAmC,CAAC,QAAS,YAC3CnB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,YACdC,eAAgB,YAChBK,gCAAiC,CAAC,YAAa,UAC7ClB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,SACdC,eAAgB,UAChBC,aAAc,UACdC,WAAY,MACZE,aAAc,QACdC,gCAAiC,CAAC,SAAU,WAC5CC,kCAAmC,CAAC,UAAW,UAC7CnB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,UACdC,eAAgB,UAChBE,WAAY,MACZE,aAAc,QACdC,gCAAiC,CAAC,UAAW,WAC7CC,kCAAmC,CAAC,UAAW,SAC7CnB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,UACdC,eAAgB,UAChBE,WAAY,MACZE,aAAc,QACdC,gCAAiC,CAAC,UAAW,WAC7CC,kCAAmC,CAAC,OAAQ,eAC1CnB,EAAcA,EAAc,GAAIW,GAAU,GAAI,CAChDC,aAAc,MACdC,eAAgB,SAChBE,WAAY,MACZE,aAAc,QACdC,gCAAiC,CAAC,SAAU,OAC5CC,kCAAmC,CAAC,OAAQ,aAC5CC,iBAAkB,CAChBC,UAAW,QACXC,UAAW,OACXC,OAAQ,aAIRE,EAASvC,EAAoB,QAEjC,SAASwC,EAAWC,GAElB,OADeF,EAAOE,GACNC,MAGlBJ,EAAOlB,SAAQ,SAAUuB,EAAMC,GAC7BN,EAAOM,GAAS9B,EAAcA,EAAc,GAAIwB,EAAOM,IAAS,GAAI,CAClElB,aAAcc,EAAWG,EAAKjB,cAC9BC,eAAgBa,EAAWG,EAAKhB,gBAChCC,aAAcY,EAAWG,EAAKf,cAC9BC,WAAYW,EAAWG,EAAKd,YAC5BC,YAAaU,EAAWG,EAAKb,aAC7BC,aAAcS,EAAWG,EAAKZ,cAC9BC,gCAAiC,CAACQ,EAAWG,EAAKX,gCAAgC,IAAKQ,EAAWG,EAAKX,gCAAgC,KACvIC,kCAAmC,CAACO,EAAWG,EAAKV,kCAAkC,IAAKO,EAAWG,EAAKV,kCAAkC,UAGpHlC,EAAuB,EAAI,GAIlD8C,KACA,SAAU/C,EAAQgD,EAAS9C,GA4DrBF,EAAOgD,QAEV,WAAe,aA2BpB,IAzBA,IAAIC,EAAU,SAAUC,EAAGC,EAAKC,GAI5B,YAHa,IAARD,IAAiBA,EAAI,QACb,IAARC,IAAiBA,EAAI,GAEnBF,EAAIC,EAAMA,EAAMD,EAAIE,EAAMA,EAAMF,GAGvCG,EAAUJ,EAEVK,EAAa,SAAUC,GACvBA,EAAIC,UAAW,EACfD,EAAIE,WAAaF,EAAIG,MAAM,GAC3B,IAAK,IAAIxC,EAAE,EAAGA,GAAG,EAAGA,IACZA,EAAI,IACAqC,EAAIrC,GAAK,GAAKqC,EAAIrC,GAAK,OAAOqC,EAAIC,UAAW,GACjDD,EAAIrC,GAAKmC,EAAQE,EAAIrC,GAAI,EAAG,MACf,IAANA,IACPqC,EAAIrC,GAAKmC,EAAQE,EAAIrC,GAAI,EAAG,IAGpC,OAAOqC,GAIPI,EAAc,GACTC,EAAM,EAAGC,EAAS,CAAC,UAAW,SAAU,SAAU,WAAY,QAAS,OAAQ,SAAU,YAAa,QAASD,EAAMC,EAAOzC,OAAQwC,GAAO,EAAG,CACnJ,IAAIE,EAAOD,EAAOD,GAElBD,EAAa,WAAaG,EAAO,KAAQA,EAAKC,cAElD,IAAIC,EAAS,SAASC,GAClB,OAAON,EAAYnD,OAAO0D,UAAUC,SAASC,KAAKH,KAAS,UAG3DI,EAASL,EAETM,EAAW,SAAUC,EAAMC,GAI3B,YAHkB,IAAbA,IAAsBA,EAAS,MAGhCD,EAAKnD,QAAU,EAAYqD,MAAMP,UAAUR,MAAMU,KAAKG,GAGtC,UAAnBF,EAAOE,EAAK,KAAmBC,EAC3BA,EAASE,MAAM,IACpB/D,QAAO,SAAUgE,GAAK,YAAsBC,IAAfL,EAAK,GAAGI,MACrCE,KAAI,SAAUF,GAAK,OAAOJ,EAAK,GAAGI,MAI3BJ,EAAK,IAGZO,EAASd,EAETe,EAAS,SAAUR,GACnB,GAAIA,EAAKnD,OAAS,EAAK,OAAO,KAC9B,IAAI4D,EAAIT,EAAKnD,OAAO,EACpB,MAAuB,UAAnB0D,EAAOP,EAAKS,IAA0BT,EAAKS,GAAGjB,cAC3C,MAGPkB,EAAOC,KAAKC,GAEZC,EAAQ,CACXC,SAAU/B,EACVgC,MAAOrC,EACPsC,KAAMvB,EACNwB,OAAQlB,EACRmB,KAAMV,EACNI,GAAIF,EACJS,MAAY,EAALT,EACPU,QAASV,EAAK,EACdW,QAASX,EAAO,IAChBY,QAAS,IAAMZ,GAGZa,EAAU,CACbC,OAAQ,GACRC,WAAY,IAGTC,EAASb,EAAMK,KACfS,EAAad,EAAMC,SACnBc,EAASf,EAAMG,KACfa,EAASN,EAETO,EAAU,WAEV,IADA,IAAI9B,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAIC,EAAKC,KACT,GAAwB,WAApBL,EAAO5B,EAAK,KACZA,EAAK,GAAGkC,aACRlC,EAAK,GAAGkC,cAAgBD,KAAKC,YAE7B,OAAOlC,EAAK,GAIhB,IAAImC,EAAOT,EAAO1B,GACdyB,GAAa,EAEjB,IAAKU,EAAM,CACPV,GAAa,EACRI,EAAOO,SACRP,EAAOJ,WAAaI,EAAOJ,WAAWY,MAAK,SAAUC,EAAEC,GAAK,OAAOA,EAAEC,EAAIF,EAAEE,KAC3EX,EAAOO,QAAS,GAGpB,IAAK,IAAIzF,EAAI,EAAG8F,EAAOZ,EAAOJ,WAAY9E,EAAI8F,EAAK5F,OAAQF,GAAK,EAAG,CAC/D,IAAI+F,EAAMD,EAAK9F,GAGf,GADAwF,EAAOO,EAAIC,KAAKnG,MAAMkG,EAAK1C,GACf,OAIpB,IAAI6B,EAAOL,OAAOW,GAId,MAAM,IAAIS,MAAM,mBAAmB5C,GAHnC,IAAIhB,EAAM6C,EAAOL,OAAOW,GAAM3F,MAAM,KAAMiF,EAAazB,EAAOA,EAAKb,MAAM,GAAG,IAC5E6C,EAAGa,KAAOlB,EAAW3C,GAMF,IAAnBgD,EAAGa,KAAKhG,QAAgBmF,EAAGa,KAAKtH,KAAK,IAG7CuG,EAAQnC,UAAUC,SAAW,WACzB,MAAwB,YAApBgC,EAAOK,KAAK5D,KAA6B4D,KAAK5D,MAC1C,IAAO4D,KAAKY,KAAKC,KAAK,KAAQ,KAG1C,IAAIC,EAAUjB,EAEVkB,EAAW,WAEd,IADA,IAAIhD,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOwG,EAASG,MAAO,CAAE,MAAOC,OAAQpD,MAG7EgD,EAASG,MAAQJ,EACjBC,EAASK,QAAU,QAEnB,IAAIC,EAAWN,EAEXO,EAAW1C,EAAMI,OACjBuC,EAAQ7C,KAAK9B,IAqBb4E,EAnBa,WAEb,IADA,IAAIzD,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAMH,EAASvD,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GAIRtD,EAAI,EAAIoD,EAHZG,GAAQ,IAGYH,EAFpBI,GAAQ,IACRrB,GAAQ,MAEJsB,EAAIzD,EAAI,EAAI,GAAK,EAAEA,GAAK,EAI5B,MAAO,EAHE,EAAEuD,EAAEvD,GAAKyD,GACT,EAAED,EAAExD,GAAKyD,GACT,EAAEtB,EAAEnC,GAAKyD,EACJzD,IAKd0D,EAAWjD,EAAMI,OAqBjB8C,EAnBW,WAEX,IADA,IAAI/D,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAAIiC,GADJhE,EAAO8D,EAAS9D,EAAM,SACT,GACTiE,EAAIjE,EAAK,GACTkE,EAAIlE,EAAK,GACTI,EAAIJ,EAAK,GACTmE,EAAQnE,EAAKnD,OAAS,EAAImD,EAAK,GAAK,EACxC,OAAU,IAANI,EAAkB,CAAC,EAAE,EAAE,EAAE+D,GACtB,CACHH,GAAK,EAAI,EAAI,KAAO,EAAEA,IAAM,EAAE5D,GAC9B6D,GAAK,EAAI,EAAI,KAAO,EAAEA,IAAM,EAAE7D,GAC9B8D,GAAK,EAAI,EAAI,KAAO,EAAEA,IAAM,EAAE9D,GAC9B+D,IAMJC,EAAWd,EACXe,EAAUtB,EACVuB,EAAU/C,EACVgD,EAAW1D,EAAMI,OACjBuD,EAAS3D,EAAMG,KAEfyD,EAAWhB,EAEfY,EAAQ1E,UAAU+E,KAAO,WACrB,OAAOD,EAASxC,KAAKY,OAGzBuB,EAASM,KAAO,WAEZ,IADA,IAAI1E,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAO6H,EAAS,CAAE,MAAOjB,OAAQpD,EAAM,CAAC,YAGhFsE,EAAQ9C,OAAOkD,KAAOX,EAEtBO,EAAQ7C,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOuE,EAASvE,EAAM,QACD,UAAjBwE,EAAOxE,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,UAKnB,IAAI8H,EAAW9D,EAAMI,OACjB2D,EAAS/D,EAAMK,KACf2D,EAAM,SAAUvC,GAAK,OAAO3B,KAAKmE,MAAQ,IAAFxC,GAAO,KA4B9CyC,EAlBY,WAEZ,IADA,IAAI/E,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAIiD,EAAOL,EAAS3E,EAAM,QACtBmC,EAAOyC,EAAO5E,IAAS,MAU3B,OATAgF,EAAK,GAAKH,EAAIG,EAAK,IAAM,GACzBA,EAAK,GAAKH,EAAY,IAARG,EAAK,IAAU,IAC7BA,EAAK,GAAKH,EAAY,IAARG,EAAK,IAAU,IAChB,SAAT7C,GAAoB6C,EAAKnI,OAAS,GAAKmI,EAAK,GAAG,GAC/CA,EAAK,GAAKA,EAAKnI,OAAS,EAAImI,EAAK,GAAK,EACtC7C,EAAO,QAEP6C,EAAKnI,OAAS,EAEVsF,EAAO,IAAO6C,EAAKlC,KAAK,KAAQ,KAKxCmC,EAAWpE,EAAMI,OA8CjBiE,EApCY,WAEZ,IADA,IAAIlF,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAAI4B,GADJ3D,EAAOiF,EAASjF,EAAM,SACT,GACT4D,EAAI5D,EAAK,GACTuC,EAAIvC,EAAK,GAEb2D,GAAK,IACLC,GAAK,IACLrB,GAAK,IAEL,IAII4C,EAAGC,EAJHxG,EAAM+B,KAAK/B,IAAI+E,EAAGC,EAAGrB,GACrB1D,EAAM8B,KAAK9B,IAAI8E,EAAGC,EAAGrB,GAErB9B,GAAK5B,EAAMD,GAAO,EAgBtB,OAbIC,IAAQD,GACRuG,EAAI,EACJC,EAAIC,OAAOC,KAEXH,EAAI1E,EAAI,IAAO5B,EAAMD,IAAQC,EAAMD,IAAQC,EAAMD,IAAQ,EAAIC,EAAMD,GAGnE+E,GAAK9E,EAAOuG,GAAKxB,EAAIrB,IAAM1D,EAAMD,GAC5BgF,GAAK/E,EAAOuG,EAAI,GAAK7C,EAAIoB,IAAM9E,EAAMD,GACrC2D,GAAK1D,IAAOuG,EAAI,GAAKzB,EAAIC,IAAM/E,EAAMD,KAE9CwG,GAAK,IACG,IAAKA,GAAK,KACdpF,EAAKnD,OAAO,QAAewD,IAAVL,EAAK,GAAyB,CAACoF,EAAED,EAAE1E,EAAET,EAAK,IACxD,CAACoF,EAAED,EAAE1E,IAKZ8E,EAAW1E,EAAMI,OACjBuE,EAAS3E,EAAMK,KACfuE,EAAUV,EACVW,EAAYR,EACZS,EAAUhF,KAAKmE,MA6Bfc,EAnBY,WAEZ,IADA,IAAI5F,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI8D,EAAON,EAASvF,EAAM,QACtBmC,EAAOqD,EAAOxF,IAAS,MAC3B,MAAwB,OAApBmC,EAAK2D,OAAO,EAAE,GACPL,EAAQC,EAAUG,GAAO1D,IAEpC0D,EAAK,GAAKF,EAAQE,EAAK,IACvBA,EAAK,GAAKF,EAAQE,EAAK,IACvBA,EAAK,GAAKF,EAAQE,EAAK,KACV,SAAT1D,GAAoB0D,EAAKhJ,OAAS,GAAKgJ,EAAK,GAAG,KAC/CA,EAAK,GAAKA,EAAKhJ,OAAS,EAAIgJ,EAAK,GAAK,EACtC1D,EAAO,QAEHA,EAAO,IAAO0D,EAAK1G,MAAM,EAAS,QAAPgD,EAAa,EAAE,GAAGW,KAAK,KAAQ,MAKlEiD,EAAWlF,EAAMI,OACjB+E,EAAUrF,KAAKmE,MA4CfmB,EA1CY,WAIZ,IAHA,IAAIC,EAEAlG,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAGI4B,EAAEC,EAAErB,EAHJ6C,GADJpF,EAAO+F,EAAS/F,EAAM,QACT,GACTmF,EAAInF,EAAK,GACTS,EAAIT,EAAK,GAEb,GAAU,IAANmF,EACAxB,EAAIC,EAAIrB,EAAM,IAAF9B,MACT,CACH,IAAI0F,EAAK,CAAC,EAAE,EAAE,GACVnC,EAAI,CAAC,EAAE,EAAE,GACToC,EAAK3F,EAAI,GAAMA,GAAK,EAAE0E,GAAK1E,EAAE0E,EAAE1E,EAAE0E,EACjCkB,EAAK,EAAI5F,EAAI2F,EACbE,EAAKlB,EAAI,IACbe,EAAG,GAAKG,EAAK,EAAE,EACfH,EAAG,GAAKG,EACRH,EAAG,GAAKG,EAAK,EAAE,EACf,IAAK,IAAI3J,EAAE,EAAGA,EAAE,EAAGA,IACXwJ,EAAGxJ,GAAK,IAAKwJ,EAAGxJ,IAAM,GACtBwJ,EAAGxJ,GAAK,IAAKwJ,EAAGxJ,IAAM,GACtB,EAAIwJ,EAAGxJ,GAAK,EACVqH,EAAErH,GAAK0J,EAAiB,GAAXD,EAAKC,GAAUF,EAAGxJ,GAC5B,EAAIwJ,EAAGxJ,GAAK,EACfqH,EAAErH,GAAKyJ,EACJ,EAAID,EAAGxJ,GAAK,EACfqH,EAAErH,GAAK0J,GAAMD,EAAKC,IAAQ,EAAI,EAAKF,EAAGxJ,IAAM,EAE5CqH,EAAErH,GAAK0J,EAEkD1C,GAAlEuC,EAAS,CAACF,EAAa,IAALhC,EAAE,IAAQgC,EAAa,IAALhC,EAAE,IAAQgC,EAAa,IAALhC,EAAE,MAAqB,GAAIJ,EAAIsC,EAAO,GAAI3D,EAAI2D,EAAO,GAEhH,OAAIlG,EAAKnD,OAAS,EAEP,CAAC8G,EAAEC,EAAErB,EAAEvC,EAAK,IAEhB,CAAC2D,EAAEC,EAAErB,EAAE,IAKdgE,EAAUN,EACVO,EAAUjF,EAEVkF,EAAS,kDACTC,EAAU,wEACVC,EAAa,mFACbC,GAAc,yGACdC,GAAS,kFACTC,GAAU,wGAEVC,GAAUpG,KAAKmE,MAEfkC,GAAY,SAAUC,GAEtB,IAAIhD,EAEJ,GAHAgD,EAAMA,EAAIzH,cAAc0H,OAGpBV,EAAQhF,OAAO2F,MACf,IACI,OAAOX,EAAQhF,OAAO2F,MAAMF,GAC9B,MAAOG,IAMb,GAAKnD,EAAIgD,EAAII,MAAMZ,GAAU,CAEzB,IADA,IAAIzH,EAAMiF,EAAE9E,MAAM,EAAE,GACXxC,EAAE,EAAGA,EAAE,EAAGA,IACfqC,EAAIrC,IAAMqC,EAAIrC,GAGlB,OADAqC,EAAI,GAAK,EACFA,EAIX,GAAKiF,EAAIgD,EAAII,MAAMX,GAAW,CAE1B,IADA,IAAIY,EAAQrD,EAAE9E,MAAM,EAAE,GACbE,EAAI,EAAGA,EAAI,EAAGA,IACnBiI,EAAMjI,IAAQiI,EAAMjI,GAExB,OAAOiI,EAIX,GAAKrD,EAAIgD,EAAII,MAAMV,GAAc,CAE7B,IADA,IAAIY,EAAQtD,EAAE9E,MAAM,EAAE,GACbqI,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAMC,GAAOT,GAAqB,KAAbQ,EAAMC,IAG/B,OADAD,EAAM,GAAK,EACJA,EAIX,GAAKtD,EAAIgD,EAAII,MAAMT,IAAe,CAE9B,IADA,IAAIa,EAAQxD,EAAE9E,MAAM,EAAE,GACbuI,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAMC,GAAOX,GAAqB,KAAbU,EAAMC,IAG/B,OADAD,EAAM,IAAMA,EAAM,GACXA,EAIX,GAAKxD,EAAIgD,EAAII,MAAMR,IAAU,CACzB,IAAIc,EAAM1D,EAAE9E,MAAM,EAAE,GACpBwI,EAAI,IAAM,IACVA,EAAI,IAAM,IACV,IAAIC,EAAQrB,EAAQoB,GAEpB,OADAC,EAAM,GAAK,EACJA,EAIX,GAAK3D,EAAIgD,EAAII,MAAMP,IAAW,CAC1B,IAAIe,EAAQ5D,EAAE9E,MAAM,EAAE,GACtB0I,EAAM,IAAM,IACZA,EAAM,IAAM,IACZ,IAAIC,EAAQvB,EAAQsB,GAEpB,OADAC,EAAM,IAAM7D,EAAE,GACP6D,IAIfd,GAAUrE,KAAO,SAAUwC,GACvB,OAAOsB,EAAO9D,KAAKwC,IACfuB,EAAQ/D,KAAKwC,IACbwB,EAAWhE,KAAKwC,IAChByB,GAAYjE,KAAKwC,IACjB0B,GAAOlE,KAAKwC,IACZ2B,GAAQnE,KAAKwC,IAGrB,IAAI4C,GAAYf,GAEZgB,GAAW1E,EACX2E,GAAUlF,EACVmF,GAAU3G,EACV4G,GAAStH,EAAMG,KAEfoH,GAAUxC,EACVyC,GAAUN,GAEdE,GAAQtI,UAAUsH,IAAM,SAAS9E,GAC7B,OAAOiG,GAAQnG,KAAKY,KAAMV,IAG9B6F,GAASf,IAAM,WAEX,IADA,IAAIjH,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOyL,GAAS,CAAE,MAAO7E,OAAQpD,EAAM,CAAC,WAGhFkI,GAAQ1G,OAAOyF,IAAMoB,GAErBH,GAAQzG,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,SAAUyC,GAEZ,IADA,IAAIkD,EAAO,GAAIvG,EAAMnF,UAAUC,OAAS,EAChCkF,KAAQ,GAAIuG,EAAMvG,GAAQnF,UAAWmF,EAAM,GAEnD,IAAKuG,EAAKzL,QAAwB,WAAdsL,GAAO/C,IAAmBiD,GAAQ1F,KAAKyC,GACvD,MAAO,SAKnB,IAAImD,GAAUxF,EACVyF,GAAWlF,EACXmF,GAAUlH,EACVmH,GAAW7H,EAAMI,OAErBwH,GAAQjH,OAAOmH,GAAK,WAEhB,IADA,IAAI3I,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI/C,EAAM0J,GAAS1I,EAAM,QAIzB,OAHAhB,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IACHA,GAGXwJ,GAASG,GAAK,WAEV,IADA,IAAI3I,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAO+L,GAAS,CAAE,MAAOnF,OAAQpD,EAAM,CAAC,UAGhFuI,GAAQ5I,UAAUgJ,GAAK,WACnB,IAAI3J,EAAMiD,KAAKY,KACf,MAAO,CAAC7D,EAAI,GAAG,IAAKA,EAAI,GAAG,IAAKA,EAAI,GAAG,IAAKA,EAAI,KAGpD,IAAI4J,GAAW/H,EAAMI,OA4BjB4H,GA1BY,WAEZ,IADA,IAAI7I,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IASIqD,EATA1B,EAAMkF,GAAS5I,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACR9E,EAAM+B,KAAK/B,IAAI+E,EAAGC,EAAGrB,GACrB1D,EAAM8B,KAAK9B,IAAI8E,EAAGC,EAAGrB,GACrBuG,EAAQjK,EAAMD,EACdoF,EAAY,IAAR8E,EAAc,IAClBC,EAAKnK,GAAO,IAAMkK,GAAS,IAW/B,OATc,IAAVA,EACA1D,EAAIC,OAAOC,KAEP3B,IAAM9E,IAAOuG,GAAKxB,EAAIrB,GAAKuG,GAC3BlF,IAAM/E,IAAOuG,EAAI,GAAG7C,EAAIoB,GAAKmF,GAC7BvG,IAAM1D,IAAOuG,EAAI,GAAGzB,EAAIC,GAAKkF,IACjC1D,GAAK,IACG,IAAKA,GAAK,MAEf,CAACA,EAAGpB,EAAG+E,IAKdC,GAAWnI,EAAMI,OACjBgI,GAAUtI,KAAKuI,MA+CfC,GArCU,WAIV,IAHA,IAAIjD,EAAQkD,EAAUC,EAAUC,EAAUC,EAAUC,EAEhDxJ,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAGI4B,EAAEC,EAAErB,EAHJ6C,GADJpF,EAAOgJ,GAAShJ,EAAM,QACT,GACTgE,EAAIhE,EAAK,GACT+I,EAAK/I,EAAK,GAEd+I,GAAU,IACV,IAAIU,EAAS,IAAJzF,EACT,GAAU,IAANA,EACAL,EAAIC,EAAIrB,EAAIwG,MACT,CACO,MAAN3D,IAAaA,EAAI,GACjBA,EAAI,MAAOA,GAAK,KAChBA,EAAI,IAAKA,GAAK,KAElB,IAAIzI,EAAIsM,GADR7D,GAAK,IAEDvB,EAAIuB,EAAIzI,EACR6F,EAAIuG,GAAM,EAAI/E,GACd0F,EAAIlH,EAAIiH,GAAM,EAAI5F,GAClB8F,EAAInH,EAAIiH,EAAK5F,EACb+F,EAAIpH,EAAIiH,EACZ,OAAQ9M,GACJ,KAAK,EAAwBgH,GAApBuC,EAAS,CAAC0D,EAAGD,EAAGnH,IAAe,GAAIoB,EAAIsC,EAAO,GAAI3D,EAAI2D,EAAO,GAAK,MAC3E,KAAK,EAA0BvC,GAAtByF,EAAW,CAACM,EAAGE,EAAGpH,IAAiB,GAAIoB,EAAIwF,EAAS,GAAI7G,EAAI6G,EAAS,GAAK,MACnF,KAAK,EAA0BzF,GAAtB0F,EAAW,CAAC7G,EAAGoH,EAAGD,IAAiB,GAAI/F,EAAIyF,EAAS,GAAI9G,EAAI8G,EAAS,GAAK,MACnF,KAAK,EAA0B1F,GAAtB2F,EAAW,CAAC9G,EAAGkH,EAAGE,IAAiB,GAAIhG,EAAI0F,EAAS,GAAI/G,EAAI+G,EAAS,GAAK,MACnF,KAAK,EAA0B3F,GAAtB4F,EAAW,CAACI,EAAGnH,EAAGoH,IAAiB,GAAIhG,EAAI2F,EAAS,GAAIhH,EAAIgH,EAAS,GAAK,MACnF,KAAK,EAA0B5F,GAAtB6F,EAAW,CAACI,EAAGpH,EAAGkH,IAAiB,GAAI9F,EAAI4F,EAAS,GAAIjH,EAAIiH,EAAS,IAGtF,MAAO,CAAC7F,EAAGC,EAAGrB,EAAGvC,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAK7C6J,GAAWhJ,EAAMI,OACjB6I,GAASjJ,EAAMG,KACf+I,GAAWzG,EACX0G,GAAUjH,EACVkH,GAAU1I,EAEV2I,GAAUrB,GAEdmB,GAAQrK,UAAUwK,IAAM,WACpB,OAAOD,GAAQjI,KAAKY,OAGxBkH,GAASI,IAAM,WAEX,IADA,IAAInK,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOwN,GAAS,CAAE,MAAO5G,OAAQpD,EAAM,CAAC,WAGhFiK,GAAQzI,OAAO2I,IAAMhB,GAErBc,GAAQxI,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAO6J,GAAS7J,EAAM,OACD,UAAjB8J,GAAO9J,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,SAKnB,IAAIuN,GAAWvJ,EAAMI,OACjBC,GAAOL,EAAMK,KACbmJ,GAAU1J,KAAKmE,MA+BfwF,GA7BY,WAEZ,IADA,IAAItK,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAM0G,GAASpK,EAAM,QACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACRpB,EAAIoB,EAAI,GACRvB,EAAOjB,GAAKlB,IAAS,YACfK,IAANiC,IAAmBA,EAAI,GACd,SAATH,IACAA,EAAOG,EAAI,EAAI,OAAS,OAK5B,IACIiI,EAAM,WAJV5G,EAAI0G,GAAQ1G,KAGC,IAFbC,EAAIyG,GAAQzG,KAEW,GADvBrB,EAAI8H,GAAQ9H,KAEW3C,SAAS,IAChC2K,EAAMA,EAAIzE,OAAOyE,EAAI1N,OAAS,GAC9B,IAAI2N,EAAM,IAAMH,GAAY,IAAJ/H,GAAS1C,SAAS,IAE1C,OADA4K,EAAMA,EAAI1E,OAAO0E,EAAI3N,OAAS,GACtBsF,EAAK3C,eACT,IAAK,OAAQ,MAAQ,IAAM+K,EAAMC,EACjC,IAAK,OAAQ,MAAQ,IAAMA,EAAMD,EACjC,QAAS,MAAQ,IAAMA,IAM3BE,GAAS,sCACTC,GAAU,sCA8CVC,GA5CY,SAAUtM,GACtB,GAAIA,EAAIgJ,MAAMoD,IAAS,CAEA,IAAfpM,EAAIxB,QAA+B,IAAfwB,EAAIxB,SACxBwB,EAAMA,EAAIyH,OAAO,IAGF,IAAfzH,EAAIxB,SAEJwB,GADAA,EAAMA,EAAI8B,MAAM,KACN,GAAG9B,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,IAEjD,IAAIuM,EAAIC,SAASxM,EAAK,IAItB,MAAO,CAHCuM,GAAK,GACLA,GAAK,EAAI,IACL,IAAJA,EACM,GAIlB,GAAIvM,EAAIgJ,MAAMqD,IAAU,CACD,IAAfrM,EAAIxB,QAA+B,IAAfwB,EAAIxB,SAExBwB,EAAMA,EAAIyH,OAAO,IAGF,IAAfzH,EAAIxB,SAEJwB,GADAA,EAAMA,EAAI8B,MAAM,KACN,GAAG9B,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,GAAGA,EAAI,IAE/D,IAAIyM,EAAMD,SAASxM,EAAK,IAKxB,MAAO,CAJGyM,GAAO,GAAK,IACZA,GAAO,GAAK,IACZA,GAAO,EAAI,IACbnK,KAAKmE,OAAa,IAANgG,GAAc,IAAO,KAAO,KAQpD,MAAM,IAAIlI,MAAO,sBAAwBvE,IAKzC0M,GAAWzH,EACX0H,GAAUjI,EACVkI,GAASpK,EAAMG,KACfkK,GAAU3J,EAEV4J,GAAYb,GAEhBU,GAAQrL,UAAUtB,IAAM,SAAS8D,GAC7B,OAAOgJ,GAAUlJ,KAAKY,KAAMV,IAGhC4I,GAAS1M,IAAM,WAEX,IADA,IAAI2B,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOwO,GAAS,CAAE,MAAO5H,OAAQpD,EAAM,CAAC,WAGhFkL,GAAQ1J,OAAOnD,IAAMsM,GACrBO,GAAQzJ,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,SAAUyC,GAEZ,IADA,IAAIkD,EAAO,GAAIvG,EAAMnF,UAAUC,OAAS,EAChCkF,KAAQ,GAAIuG,EAAMvG,GAAQnF,UAAWmF,EAAM,GAEnD,IAAKuG,EAAKzL,QAAwB,WAAdoO,GAAO7F,IAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGgG,QAAQhG,EAAEvI,SAAW,EAC/E,MAAO,SAKnB,IAAIwO,GAAWxK,EAAMI,OACjBqK,GAAUzK,EAAMM,MAChBoK,GAAQ5K,KAAK/B,IACb4M,GAAS7K,KAAK8K,KACdC,GAAO/K,KAAK+K,KAmCZC,GAjCY,WAEZ,IADA,IAAI3L,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAMzC,IAOIqD,EAPA1B,EAAM2H,GAASrL,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GAKRkI,EAAOL,GAJX5H,GAAK,IACLC,GAAK,IACLrB,GAAK,KAGD5F,GAAKgH,EAAEC,EAAErB,GAAK,EACd4C,EAAIxI,EAAI,EAAI,EAAIiP,EAAKjP,EAAI,EAY7B,OAXU,IAANwI,EACAC,EAAIE,KAEJF,GAAMzB,EAAEC,GAAID,EAAEpB,IAAM,EACpB6C,GAAKoG,IAAQ7H,EAAEC,IAAID,EAAEC,IAAMD,EAAEpB,IAAIqB,EAAErB,IACnC6C,EAAIsG,GAAKtG,GACL7C,EAAIqB,IACJwB,EAAIkG,GAAUlG,GAElBA,GAAKkG,IAEF,CAAG,IAAFlG,EAAMD,EAAExI,IAKhBkP,GAAWhL,EAAMI,OACjBF,GAAQF,EAAME,MACd+K,GAAUjL,EAAMM,MAChBC,GAAUP,EAAMO,QAChB2K,GAAQpL,KAAKqL,IAgDbC,GAzCU,WAEV,IADA,IAAIjM,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAOzC,IAGI4B,EAAEC,EAAErB,EAHJ6C,GADJpF,EAAO6L,GAAS7L,EAAM,QACT,GACTmF,EAAInF,EAAK,GACTrD,EAAIqD,EAAK,GA2Bb,OAxBIkM,MAAM9G,KAAMA,EAAI,GAChB8G,MAAM/G,KAAMA,EAAI,GAEhBC,EAAI,MAAOA,GAAK,KAChBA,EAAI,IAAKA,GAAK,MAClBA,GAAK,KACG,EAAE,EAGNxB,EAAI,IAFJrB,GAAK,EAAE4C,GAAG,IACVxB,GAAK,EAAEwB,EAAE4G,GAAMD,GAAQ1G,GAAG2G,GAAM3K,GAAQ0K,GAAQ1G,IAAI,IAE7CA,EAAI,EAAE,EAIb7C,EAAI,IAFJoB,GAAK,EAAEwB,GAAG,IACVvB,GAAK,EAAEuB,EAAE4G,GAAMD,IAFf1G,GAAK,EAAE,IAEmB2G,GAAM3K,GAAQ0K,GAAQ1G,IAAI,IAMpDzB,EAAI,IAFJC,GAAK,EAAEuB,GAAG,IACV5C,GAAK,EAAE4C,EAAE4G,GAAMD,IAFf1G,GAAK,EAAE,IAEmB2G,GAAM3K,GAAQ0K,GAAQ1G,IAAI,IAMjD,CAAG,KAHVzB,EAAI5C,GAAMpE,EAAEgH,EAAE,IAGG,KAFjBC,EAAI7C,GAAMpE,EAAEiH,EAAE,IAEU,KADxBrB,EAAIxB,GAAMpE,EAAE4F,EAAE,IACevC,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAKzDmM,GAAWtL,EAAMI,OACjBmL,GAASvL,EAAMG,KACfqL,GAAW/I,EACXgJ,GAAUvJ,EACVwJ,GAAUhL,EAEViL,GAAUb,GAEdW,GAAQ3M,UAAU8M,IAAM,WACpB,OAAOD,GAAQvK,KAAKY,OAGxBwJ,GAASI,IAAM,WAEX,IADA,IAAIzM,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAO8P,GAAS,CAAE,MAAOlJ,OAAQpD,EAAM,CAAC,WAGhFuM,GAAQ/K,OAAOiL,IAAMR,GAErBM,GAAQ9K,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOmM,GAASnM,EAAM,OACD,UAAjBoM,GAAOpM,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,SAKnB,IAAI6P,GAAW7L,EAAMI,OACjB0L,GAAS9L,EAAMG,KACf4L,GAAWtJ,EACXuJ,GAAU9J,EACV+J,GAAUvL,EAEVwL,GAAY7H,EAEhB2H,GAAQlN,UAAUgI,IAAM,WACpB,OAAOoF,GAAU9K,KAAKY,OAG1B+J,GAASjF,IAAM,WAEX,IADA,IAAI3H,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOqQ,GAAS,CAAE,MAAOzJ,OAAQpD,EAAM,CAAC,WAGhF8M,GAAQtL,OAAOmG,IAAM1B,EAErB6G,GAAQrL,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAO0M,GAAS1M,EAAM,OACD,UAAjB2M,GAAO3M,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,SAKnB,IAAImQ,GAAWnM,EAAMI,OACjBgM,GAAQtM,KAAK/B,IACbsO,GAAQvM,KAAK9B,IAmCbsO,GA3BU,WAEV,IADA,IAAInN,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAMIqD,EAAED,EAAEyE,EANJjG,GADJ3D,EAAOgN,GAAShN,EAAM,QACT,GACT4D,EAAI5D,EAAK,GACTuC,EAAIvC,EAAK,GACT4L,EAAOqB,GAAMtJ,EAAGC,EAAGrB,GACnB6K,EAAOF,GAAMvJ,EAAGC,EAAGrB,GACnBuG,EAAQsE,EAAOxB,EAcnB,OAZAhC,EAAIwD,EAAO,IACE,IAATA,GACAhI,EAAIC,OAAOC,IACXH,EAAI,IAEJA,EAAI2D,EAAQsE,EACRzJ,IAAMyJ,IAAQhI,GAAKxB,EAAIrB,GAAKuG,GAC5BlF,IAAMwJ,IAAQhI,EAAI,GAAG7C,EAAIoB,GAAKmF,GAC9BvG,IAAM6K,IAAQhI,EAAI,GAAGzB,EAAIC,GAAKkF,IAClC1D,GAAK,IACG,IAAKA,GAAK,MAEf,CAACA,EAAGD,EAAGyE,IAKdyD,GAAWxM,EAAMI,OACjBqM,GAAU3M,KAAKuI,MAuCfqE,GArCU,WAIV,IAHA,IAAIrH,EAAQkD,EAAUC,EAAUC,EAAUC,EAAUC,EAEhDxJ,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAGI4B,EAAEC,EAAErB,EAHJ6C,GADJpF,EAAOqN,GAASrN,EAAM,QACT,GACTmF,EAAInF,EAAK,GACT4J,EAAI5J,EAAK,GAGb,GADA4J,GAAK,IACK,IAANzE,EACAxB,EAAIC,EAAIrB,EAAIqH,MACT,CACO,MAANxE,IAAaA,EAAI,GACjBA,EAAI,MAAOA,GAAK,KAChBA,EAAI,IAAKA,GAAK,KAGlB,IAAIzI,EAAI2Q,GAFRlI,GAAK,IAGDvB,EAAIuB,EAAIzI,EACR6F,EAAIoH,GAAK,EAAIzE,GACbuE,EAAIE,GAAK,EAAIzE,EAAItB,GACjB8F,EAAIC,GAAK,EAAIzE,GAAK,EAAItB,IAE1B,OAAQlH,GACJ,KAAK,EAAwBgH,GAApBuC,EAAS,CAAC0D,EAAGD,EAAGnH,IAAe,GAAIoB,EAAIsC,EAAO,GAAI3D,EAAI2D,EAAO,GAAK,MAC3E,KAAK,EAA0BvC,GAAtByF,EAAW,CAACM,EAAGE,EAAGpH,IAAiB,GAAIoB,EAAIwF,EAAS,GAAI7G,EAAI6G,EAAS,GAAK,MACnF,KAAK,EAA0BzF,GAAtB0F,EAAW,CAAC7G,EAAGoH,EAAGD,IAAiB,GAAI/F,EAAIyF,EAAS,GAAI9G,EAAI8G,EAAS,GAAK,MACnF,KAAK,EAA0B1F,GAAtB2F,EAAW,CAAC9G,EAAGkH,EAAGE,IAAiB,GAAIhG,EAAI0F,EAAS,GAAI/G,EAAI+G,EAAS,GAAK,MACnF,KAAK,EAA0B3F,GAAtB4F,EAAW,CAACI,EAAGnH,EAAGoH,IAAiB,GAAIhG,EAAI2F,EAAS,GAAIhH,EAAIgH,EAAS,GAAK,MACnF,KAAK,EAA0B5F,GAAtB6F,EAAW,CAACI,EAAGpH,EAAGkH,IAAiB,GAAI9F,EAAI4F,EAAS,GAAIjH,EAAIiH,EAAS,IAGtF,MAAO,CAAC7F,EAAEC,EAAErB,EAAEvC,EAAKnD,OAAS,EAAEmD,EAAK,GAAG,IAKtCwN,GAAW3M,EAAMI,OACjBwM,GAAS5M,EAAMG,KACf0M,GAAWpK,EACXqK,GAAU5K,EACV6K,GAAUrM,EAEVsM,GAAUV,GAEdQ,GAAQhO,UAAUmO,IAAM,WACpB,OAAOD,GAAQ5L,KAAKY,OAGxB6K,GAASI,IAAM,WAEX,IADA,IAAI9N,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOmR,GAAS,CAAE,MAAOvK,OAAQpD,EAAM,CAAC,WAGhF4N,GAAQpM,OAAOsM,IAAMP,GAErBK,GAAQnM,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOwN,GAASxN,EAAM,OACD,UAAjByN,GAAOzN,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,SAKnB,IAAIkR,GAAe,CAEfC,GAAI,GAGJC,GAAI,OACJC,GAAI,EACJC,GAAI,QAEJC,GAAI,WACJ/H,GAAI,WACJD,GAAI,UACJD,GAAI,YAGJkI,GAAkBN,GAClBO,GAAWzN,EAAMI,OACjBsN,GAAQ5N,KAAK6N,IAEbC,GAAY,WAEZ,IADA,IAAIzO,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAM4K,GAAStO,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACRgL,EAAQC,GAAQhL,EAAEC,EAAErB,GACpB5D,EAAI+P,EAAM,GACVxK,EAAIwK,EAAM,GAEVjO,EAAI,IAAMyD,EAAI,GAClB,MAAO,CAACzD,EAAI,EAAI,EAAIA,EAAG,KAAO9B,EAAIuF,GAAI,KAAOA,EAFrCwK,EAAM,MAKdE,GAAU,SAAUjL,GACpB,OAAKA,GAAK,MAAQ,OAAkBA,EAAI,MACjC4K,IAAO5K,EAAI,MAAS,MAAO,MAGlCkL,GAAU,SAAUlF,GACpB,OAAIA,EAAI0E,GAAgBlI,GAAaoI,GAAM5E,EAAG,EAAI,GAC3CA,EAAI0E,GAAgBjI,GAAKiI,GAAgBD,IAGhDO,GAAU,SAAUhL,EAAEC,EAAErB,GAOxB,OANAoB,EAAIiL,GAAQjL,GACZC,EAAIgL,GAAQhL,GACZrB,EAAIqM,GAAQrM,GAIL,CAHCsM,IAAS,SAAYlL,EAAI,SAAYC,EAAI,SAAYrB,GAAK8L,GAAgBJ,IAC1EY,IAAS,SAAYlL,EAAI,SAAYC,EAAI,QAAYrB,GAAK8L,GAAgBH,IAC1EW,IAAS,SAAYlL,EAAI,QAAYC,EAAI,SAAYrB,GAAK8L,GAAgBF,MAIlFW,GAAYL,GAEZM,GAAkBhB,GAClBiB,GAAWnO,EAAMI,OACjBgO,GAAQtO,KAAK6N,IAObU,GAAY,WAEZ,IADA,IAAIlP,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAGIpD,EAAEuF,EAAEiL,EAHJ1O,GADJT,EAAOgP,GAAShP,EAAM,QACT,GACTsC,EAAItC,EAAK,GACTuC,EAAIvC,EAAK,GAeb,OAZAkE,GAAKzD,EAAI,IAAM,IACf9B,EAAIuN,MAAM5J,GAAK4B,EAAIA,EAAI5B,EAAI,IAC3B6M,EAAIjD,MAAM3J,GAAK2B,EAAIA,EAAI3B,EAAI,IAE3B2B,EAAI6K,GAAgBb,GAAKkB,GAAQlL,GACjCvF,EAAIoQ,GAAgBd,GAAKmB,GAAQzQ,GACjCwQ,EAAIJ,GAAgBZ,GAAKiB,GAAQD,GAM1B,CAJHE,GAAQ,UAAY1Q,EAAI,UAAYuF,EAAI,SAAYiL,GACpDE,IAAS,QAAY1Q,EAAI,UAAYuF,EAAI,QAAYiL,GACpDE,GAAQ,SAAY1Q,EAAI,SAAYuF,EAAI,UAAYiL,GAE1CnP,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAG3CqP,GAAU,SAAU1L,GACpB,OAAO,KAAOA,GAAK,OAAU,MAAQA,EAAI,MAAQsL,GAAMtL,EAAG,EAAI,KAAO,OAGrEyL,GAAU,SAAUzF,GACpB,OAAOA,EAAIoF,GAAgB1I,GAAKsD,EAAIA,EAAIA,EAAIoF,GAAgB3I,IAAMuD,EAAIoF,GAAgBX,KAGtFkB,GAAYJ,GAEZK,GAAW1O,EAAMI,OACjBuO,GAAS3O,EAAMG,KACfyO,GAAWnM,EACXoM,GAAU3M,EACV4M,GAAUpO,EAEVqO,GAAYd,GAEhBY,GAAQ/P,UAAUkQ,IAAM,WACpB,OAAOD,GAAU3N,KAAKY,OAG1B4M,GAASI,IAAM,WAEX,IADA,IAAI7P,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOkT,GAAS,CAAE,MAAOtM,OAAQpD,EAAM,CAAC,WAGhF2P,GAAQnO,OAAOqO,IAAMP,GAErBK,GAAQlO,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOuP,GAASvP,EAAM,OACD,UAAjBwP,GAAOxP,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,SAKnB,IAAIiT,GAAWjP,EAAMI,OACjBK,GAAUT,EAAMS,QAChByO,GAASpP,KAAK8K,KACduE,GAAUrP,KAAKsP,MACfC,GAAUvP,KAAKmE,MAgBfqL,GAdY,WAEZ,IADA,IAAInQ,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAMoM,GAAS9P,EAAM,OACrBS,EAAIiD,EAAI,GACRpB,EAAIoB,EAAI,GACRnB,EAAImB,EAAI,GACRM,EAAI+L,GAAOzN,EAAIA,EAAIC,EAAIA,GACvB6C,GAAK4K,GAAQzN,EAAGD,GAAKhB,GAAU,KAAO,IAE1C,OADyB,IAArB4O,GAAU,IAAFlM,KAAkBoB,EAAIC,OAAOC,KAClC,CAAC7E,EAAGuD,EAAGoB,IAKdgL,GAAWvP,EAAMI,OACjBoP,GAAUvB,GACVwB,GAAYH,GAiBZI,GAfY,WAEZ,IADA,IAAIvQ,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAM0M,GAASpQ,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACRgL,EAAQ2B,GAAQ1M,EAAEC,EAAErB,GACpB9B,EAAIiO,EAAM,GACVpM,EAAIoM,EAAM,GACV8B,EAAK9B,EAAM,GACf,OAAO4B,GAAU7P,EAAE6B,EAAEkO,IAKrBC,GAAW5P,EAAMI,OACjBI,GAAUR,EAAMQ,QAChBqP,GAAQ/P,KAAKgQ,IACbC,GAAQjQ,KAAKqL,IAsBb6E,GApBY,WAEZ,IADA,IAAI7Q,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GASzC,IAAI2B,EAAM+M,GAASzQ,EAAM,OACrBS,EAAIiD,EAAI,GACRM,EAAIN,EAAI,GACR0B,EAAI1B,EAAI,GAGZ,OAFIwI,MAAM9G,KAAMA,EAAI,GAEb,CAAC3E,EAAGmQ,GADXxL,GAAQ/D,IACc2C,EAAG0M,GAAMtL,GAAKpB,IAKpC8M,GAAWjQ,EAAMI,OACjB8P,GAAYF,GACZG,GAAU1B,GAqBV2B,GAnBY,WAEZ,IADA,IAAIjR,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAAItB,GADJT,EAAO8Q,GAAS9Q,EAAM,QACT,GACTgE,EAAIhE,EAAK,GACToF,EAAIpF,EAAK,GACT0D,EAAMqN,GAAWtQ,EAAEuD,EAAEoB,GACrB8L,EAAIxN,EAAI,GACRpB,EAAIoB,EAAI,GACR8M,EAAK9M,EAAI,GACTgL,EAAQsC,GAASE,EAAE5O,EAAEkO,GAIzB,MAAO,CAHC9B,EAAM,GACNA,EAAM,GACNA,EAAM,GACG1O,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAK7CmR,GAAWtQ,EAAMI,OACjBmQ,GAAUH,GAUVI,GARU,WAEV,IADA,IAAIrR,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAIuP,EAAMH,GAASnR,EAAM,OAAOuR,UAChC,OAAOH,GAAQ5U,WAAM,EAAQ8U,IAK7BE,GAAW3Q,EAAMI,OACjBwQ,GAAS5Q,EAAMG,KACf0Q,GAAWpO,EACXqO,GAAU5O,EACV6O,GAAUrQ,EAEVsQ,GAAUtB,GAEdoB,GAAQhS,UAAUmS,IAAM,WAAa,OAAOD,GAAQ5P,KAAKY,OACzD8O,GAAQhS,UAAU2R,IAAM,WAAa,OAAOO,GAAQ5P,KAAKY,MAAM0O,WAE/DG,GAASI,IAAM,WAEX,IADA,IAAI9R,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOmV,GAAS,CAAE,MAAOvO,OAAQpD,EAAM,CAAC,WAEhF0R,GAASJ,IAAM,WAEX,IADA,IAAItR,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOmV,GAAS,CAAE,MAAOvO,OAAQpD,EAAM,CAAC,WAGhF4R,GAAQpQ,OAAOsQ,IAAMb,GACrBW,GAAQpQ,OAAO8P,IAAMD,GAErB,CAAC,MAAM,OAAOtU,SAAQ,SAAUkH,GAAK,OAAO2N,GAAQnQ,WAAWlG,KAAK,CAChEiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOwR,GAASxR,EAAMiE,GACD,UAAjBwN,GAAOzR,IAAqC,IAAhBA,EAAKnD,OACjC,OAAOoH,QAWnB,IA8JI8N,GA9JW,CACXC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,WAAY,UACZC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,KAAM,UACNC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,eAAgB,UAChBC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAKbC,GAAU5Y,EACV6Y,GAAUra,EACVsa,GAAShb,EAAMG,KAEf8a,GAAS/J,GACTgK,GAAUpR,GACVqR,GAAU1R,GAEdqR,GAAQhc,UAAUJ,KAAO,WAErB,IADA,IAAIlB,EAAM2d,GAAQ/Z,KAAKY,KAAM,OACpBlG,EAAI,EAAG8F,EAAOxG,OAAOD,KAAK8f,IAASnf,EAAI8F,EAAK5F,OAAQF,GAAK,EAAG,CACjE,IAAIsf,EAAIxZ,EAAK9F,GAEb,GAAImf,GAAOG,KAAO5d,EAAO,OAAO4d,EAAEzc,cAEtC,OAAOnB,GAGXud,GAAQpa,OAAO2F,MAAQ,SAAU5H,GAE7B,GADAA,EAAOA,EAAKC,cACRsc,GAAOvc,GAAS,OAAOwc,GAAQD,GAAOvc,IAC1C,MAAM,IAAIqD,MAAM,uBAAuBrD,IAG3Cqc,GAAQna,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,SAAUyC,GAEZ,IADA,IAAIkD,EAAO,GAAIvG,EAAMnF,UAAUC,OAAS,EAChCkF,KAAQ,GAAIuG,EAAMvG,GAAQnF,UAAWmF,EAAM,GAEnD,IAAKuG,EAAKzL,QAAwB,WAAdgf,GAAOzW,IAAmB0W,GAAO1W,EAAE5F,eACnD,MAAO,WAKnB,IAAI0c,GAAWrb,EAAMI,OAajBkb,GAXY,WAEZ,IADA,IAAInc,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAMwY,GAASlc,EAAM,OAIzB,OAHQ0D,EAAI,IAGC,KAFLA,EAAI,IAEa,GADjBA,EAAI,IAMZ0Y,GAASvb,EAAMG,KAYfqb,GAVU,SAAUC,GACpB,GAAmB,UAAfF,GAAOE,IAAoBA,GAAO,GAAKA,GAAO,SAI9C,MAAO,CAHCA,GAAO,GACNA,GAAO,EAAK,IACP,IAANA,EACM,GAElB,MAAM,IAAI1Z,MAAM,sBAAsB0Z,IAKtCC,GAAWjZ,EACXkZ,GAAUzZ,EACV0Z,GAAUlb,EACVmb,GAAS7b,EAAMG,KAEf2b,GAAUR,GAEdK,GAAQ7c,UAAU2c,IAAM,WACpB,OAAOK,GAAQ1a,KAAKY,OAGxB0Z,GAASD,IAAM,WAEX,IADA,IAAItc,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOggB,GAAS,CAAE,MAAOpZ,OAAQpD,EAAM,CAAC,WAGhFyc,GAAQjb,OAAO8a,IAAMD,GAErBI,GAAQhb,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,GAAoB,IAAhB/B,EAAKnD,QAAoC,WAApB6f,GAAO1c,EAAK,KAAoBA,EAAK,IAAM,GAAKA,EAAK,IAAM,SAChF,MAAO,SAKnB,IAAI4c,GAAWtZ,EACXuZ,GAAU9Z,EACV+Z,GAAUvb,EACVwb,GAAWlc,EAAMI,OACjB+b,GAASnc,EAAMG,KACfic,GAAUtc,KAAKmE,MAEnB+X,GAAQld,UAAUX,IAAM,SAAS6F,GAG7B,YAFa,IAARA,IAAiBA,GAAI,IAEd,IAARA,EAAwB5C,KAAKY,KAAK1D,MAAM,EAAE,GACvC8C,KAAKY,KAAK1D,MAAM,EAAE,GAAGmB,IAAI2c,KAGpCJ,GAAQld,UAAUkG,KAAO,SAAShB,GAG9B,YAFa,IAARA,IAAiBA,GAAI,GAEnB5C,KAAKY,KAAK1D,MAAM,EAAE,GAAGmB,KAAI,SAAUsJ,EAAEjN,GACxC,OAAOA,EAAE,GAAa,IAARkI,EAAgB+E,EAAIqT,GAAQrT,GAAMA,MAIxDgT,GAAS5d,IAAM,WAEX,IADA,IAAIgB,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOqgB,GAAS,CAAE,MAAOzZ,OAAQpD,EAAM,CAAC,WAGhF8c,GAAQtb,OAAOxC,IAAM,WAEjB,IADA,IAAIgB,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI8D,EAAOkX,GAAS/c,EAAM,QAE1B,YADgBK,IAAZwF,EAAK,KAAoBA,EAAK,GAAK,GAChCA,GAGXiX,GAAQrb,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAO+c,GAAS/c,EAAM,QACD,UAAjBgd,GAAOhd,KAAsC,IAAhBA,EAAKnD,QAClB,IAAhBmD,EAAKnD,QAAmC,UAAnBmgB,GAAOhd,EAAK,KAAmBA,EAAK,IAAM,GAAKA,EAAK,IAAM,GAC/E,MAAO,SAUnB,IAAIkd,GAAQvc,KAAKwc,IAiBbC,GAfoB,SAAUC,GAC9B,IACI1Z,EAAEC,EAAErB,EADJ+a,EAAOD,EAAS,IAWpB,OATIC,EAAO,IACP3Z,EAAI,IACJC,EAAI0Z,EAAO,EAAI,GAAK,mBAAqB,oBAAuB1Z,EAAI0Z,EAAK,GAAK,mBAAqBJ,GAAMtZ,GACzGrB,EAAI+a,EAAO,GAAK,EAA0B,mBAAsB/a,EAAI+a,EAAK,IAApD,mBAA0D,mBAAqBJ,GAAM3a,KAE1GoB,EAAI,mBAAqB,kBAAqBA,EAAI2Z,EAAK,IAAM,kBAAoBJ,GAAMvZ,GACvFC,EAAI,kBAAoB,oBAAuBA,EAAI0Z,EAAK,IAAM,iBAAmBJ,GAAMtZ,GACvFrB,EAAI,KAED,CAACoB,EAAEC,EAAErB,EAAE,IAUdgb,GAAkBH,GAClBI,GAAW3c,EAAMI,OACjB6D,GAAQnE,KAAKmE,MA0Bb2Y,GAAWna,EACXoa,GAAU3a,EACV4a,GAAUpc,EAEVqc,GA5BoB,WAEpB,IADA,IAAI5d,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAQzC,IANA,IAKIub,EALAte,EAAMwe,GAASxd,EAAM,OACrB2D,EAAI3E,EAAI,GAAIuD,EAAIvD,EAAI,GACpB6e,EAAU,IACVC,EAAU,IACVC,EAAM,GAEHD,EAAUD,EAAUE,GAAK,CAE5B,IAAIzW,EAAQiW,GADZD,EAA6B,IAArBQ,EAAUD,IAEbvW,EAAM,GAAKA,EAAM,IAAQ/E,EAAIoB,EAC9Bma,EAAUR,EAEVO,EAAUP,EAGlB,OAAOxY,GAAMwY,IAWjBI,GAAQ/d,UAAU2d,KAClBI,GAAQ/d,UAAU0d,OAClBK,GAAQ/d,UAAUqe,YAAc,WAC5B,OAAOJ,GAAgB3b,KAAKY,OAGhC4a,GAASH,KACTG,GAASJ,OACTI,GAASO,YAAc,WAEnB,IADA,IAAIhe,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOkhB,GAAS,CAAE,MAAOta,OAAQpD,EAAM,CAAC,YAGhF2d,GAAQnc,OAAO8b,KACfK,GAAQnc,OAAO6b,OACfM,GAAQnc,OAAOwc,YAAcZ,GAE7B,IAAIa,GAAWpd,EAAMI,OACjBid,GAAOvd,KAAKud,KACZC,GAAQxd,KAAK6N,IACb4P,GAASzd,KAAK0d,KA2BdC,GAzBc,WAEd,IADA,IAAIte,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAIzC,IAAI2B,EAAMua,GAASje,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACRgL,EAAQ,CAAC6P,GAAS5a,EAAI,KAAM4a,GAAS3a,EAAI,KAAM2a,GAAShc,EAAI,MAC5Dic,EAAK9P,EAAM,GACX+P,EAAK/P,EAAM,GACXgQ,EAAKhQ,EAAM,GACXjO,EAAIyd,GAAK,YAAeM,EAAK,YAAeC,EAAK,YAAeC,GAChEza,EAAIia,GAAK,YAAeM,EAAK,YAAeC,EAAK,YAAeC,GAChEvZ,EAAI+Y,GAAK,YAAeM,EAAK,YAAeC,EAAK,YAAeC,GAEpE,MAAO,CACH,YAAeje,EAAI,WAAcwD,EAAI,YAAekB,EACpD,aAAe1E,EAAI,YAAcwD,EAAI,YAAekB,EACpD,YAAe1E,EAAI,YAAewD,EAAI,WAAckB,IAM5D,SAASoZ,GAASva,GACd,IAAI2a,EAAMhe,KAAKge,IAAI3a,GACnB,OAAI2a,EAAM,OACC3a,EAAI,OAEPoa,GAAOpa,IAAM,GAAKma,IAAOQ,EAAM,MAAS,MAAO,KAG3D,IAAIC,GAAW/d,EAAMI,OACjB4d,GAAQle,KAAK6N,IACb6P,GAAO1d,KAAK0d,KA4BZS,GArBc,WAEd,IADA,IAAI9e,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAAImP,GADJlR,EAAO4e,GAAS5e,EAAM,QACT,GACTsC,EAAItC,EAAK,GACTuC,EAAIvC,EAAK,GAETS,EAAIoe,GAAM3N,EAAI,YAAe5O,EAAI,YAAeC,EAAG,GACnD0B,EAAI4a,GAAM3N,EAAI,YAAe5O,EAAI,YAAeC,EAAG,GACnD4C,EAAI0Z,GAAM3N,EAAI,YAAe5O,EAAI,YAAcC,EAAG,GAEtD,MAAO,CACH,IAAMwc,GAAS,aAAgBte,EAAI,aAAewD,EAAI,YAAekB,GACrE,IAAM4Z,IAAU,aAAete,EAAI,aAAewD,EAAI,YAAekB,GACrE,IAAM4Z,IAAU,YAAete,EAAI,YAAewD,EAAI,YAAckB,GACpEnF,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAMpC,SAAS+e,GAAS/a,GACd,IAAI2a,EAAMhe,KAAKge,IAAI3a,GACnB,OAAI2a,EAAM,UACEN,GAAKra,IAAM,IAAM,MAAQ6a,GAAMF,EAAK,EAAI,KAAO,MAEhD,MAAJ3a,EAGX,IAAIgb,GAAWne,EAAMI,OACjBge,GAASpe,EAAMG,KACfke,GAAW5b,EACX6b,GAAUpc,EACVqc,GAAU7d,EAEV8d,GAAcf,GAElBa,GAAQxf,UAAU2f,MAAQ,WACtB,OAAOD,GAAYpd,KAAKY,OAG5Bqc,GAASI,MAAQ,WAEb,IADA,IAAItf,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAO2iB,GAAS,CAAE,MAAO/b,OAAQpD,EAAM,CAAC,aAGhFof,GAAQ5d,OAAO8d,MAAQR,GAEvBM,GAAQ3d,WAAWlG,KAAK,CACpBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOgf,GAAShf,EAAM,SACD,UAAjBif,GAAOjf,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,WAKnB,IAAI0iB,GAAW1e,EAAMI,OACjBue,GAAYlB,GACZmB,GAAUtP,GAiBVuP,GAfc,WAEd,IADA,IAAI1f,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAAI2B,EAAM6b,GAASvf,EAAM,OACrB2D,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRnB,EAAImB,EAAI,GACRgL,EAAQ8Q,GAAU7b,EAAGC,EAAGrB,GACxB9B,EAAIiO,EAAM,GACVpM,EAAIoM,EAAM,GACV8B,EAAK9B,EAAM,GACf,OAAO+Q,GAAQhf,EAAG6B,EAAGkO,IAKrBmP,GAAW9e,EAAMI,OACjB2e,GAAU/O,GACVgP,GAAYf,GAqBZgB,GAnBY,WAEZ,IADA,IAAI9f,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,IAAItB,GADJT,EAAO2f,GAAS3f,EAAM,QACT,GACTgE,EAAIhE,EAAK,GACToF,EAAIpF,EAAK,GACT0D,EAAMkc,GAAQnf,EAAGuD,EAAGoB,GACpB8L,EAAIxN,EAAI,GACRpB,EAAIoB,EAAI,GACR8M,EAAK9M,EAAI,GACTgL,EAAQmR,GAAU3O,EAAG5O,EAAGkO,GAI5B,MAAO,CAHC9B,EAAM,GACNA,EAAM,GACNA,EAAM,GACG1O,EAAKnD,OAAS,EAAImD,EAAK,GAAK,IAK7CiB,GAASJ,EAAMI,OACf8e,GAASlf,EAAMG,KACfgf,GAAW1c,EACX2c,GAAUld,EACVmd,GAAQ3e,EAER4e,GAAYT,GAEhBO,GAAQtgB,UAAUygB,MAAQ,WACtB,OAAOD,GAAUle,KAAKY,OAG1Bmd,GAASI,MAAQ,WAEb,IADA,IAAIpgB,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,OAAO,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAOyjB,GAAS,CAAE,MAAO7c,OAAQpD,EAAM,CAAC,aAGhFkgB,GAAM1e,OAAO4e,MAAQN,GAErBI,GAAMze,WAAWlG,KAAK,CAClBiH,EAAG,EACHG,KAAM,WAEF,IADA,IAAI3C,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAGzC,GADA/B,EAAOiB,GAAOjB,EAAM,SACC,UAAjB+f,GAAO/f,IAAqC,IAAhBA,EAAKnD,OACjC,MAAO,WAKnB,IAAIwjB,GAAUtd,EACVud,GAASzf,EAAMG,KAEnBqf,GAAQ1gB,UAAUwE,MAAQ,SAAS7B,EAAGie,GAGlC,YAFgB,IAAXA,IAAoBA,GAAO,QAEtBlgB,IAANiC,GAAiC,WAAdge,GAAOhe,GACtBie,GACAte,KAAKY,KAAK,GAAKP,EACRL,MAEJ,IAAIoe,GAAQ,CAACpe,KAAKY,KAAK,GAAIZ,KAAKY,KAAK,GAAIZ,KAAKY,KAAK,GAAIP,GAAI,OAE/DL,KAAKY,KAAK,IAGPE,EAENpD,UAAU6gB,QAAU,WACxB,OAAOve,KAAKY,KAAK5D,WAAY,GAGjC,IAAIwhB,GAAU1d,EACV2d,GAAkB3S,GAEtB0S,GAAQ9gB,UAAUghB,OAAS,SAASC,QACnB,IAAXA,IAAoBA,EAAO,GAEhC,IAAI5e,EAAKC,KACL4N,EAAM7N,EAAG6N,MAEb,OADAA,EAAI,IAAM6Q,GAAgB1S,GAAK4S,EACxB,IAAIH,GAAQ5Q,EAAK,OAAO1L,MAAMnC,EAAGmC,SAAS,IAGlDsc,GAAQ9gB,UAAUkhB,SAAW,SAASD,GAGrC,YAFgB,IAAXA,IAAoBA,EAAO,GAEzB3e,KAAK0e,QAAQC,IAGrBH,GAAQ9gB,UAAUmhB,OAASL,GAAQ9gB,UAAUghB,OAC7CF,GAAQ9gB,UAAUohB,SAAWN,GAAQ9gB,UAAUkhB,SAEjC9d,EAENpD,UAAUqhB,IAAM,SAAUC,GAC9B,IAAIvd,EAAMud,EAAG9gB,MAAM,KACfgC,EAAOuB,EAAI,GACXwd,EAAUxd,EAAI,GACdyd,EAAMlf,KAAKE,KACf,GAAI+e,EAAS,CACT,IAAIvkB,EAAIwF,EAAKiJ,QAAQ8V,IAAkC,OAAtB/e,EAAK2D,OAAO,EAAG,GAAc,EAAI,GAClE,GAAInJ,GAAK,EAAK,OAAOwkB,EAAIxkB,GACzB,MAAM,IAAIiG,MAAO,mBAAqBse,EAAU,YAAc/e,GAE9D,OAAOgf,GAIf,IAAIC,GAAUre,EACVse,GAASxgB,EAAMG,KACfsgB,GAAQ3gB,KAAK6N,IAEb+S,GAAM,KACNC,GAAW,GAEfJ,GAAQzhB,UAAU8hB,UAAY,SAASC,GACnC,QAAYrhB,IAARqhB,GAAqC,WAAhBL,GAAOK,GAAmB,CAC/C,GAAY,IAARA,EAEA,OAAO,IAAIN,GAAQ,CAAC,EAAE,EAAE,EAAEnf,KAAKY,KAAK,IAAK,OAE7C,GAAY,IAAR6e,EAEA,OAAO,IAAIN,GAAQ,CAAC,IAAI,IAAI,IAAInf,KAAKY,KAAK,IAAK,OAGnD,IAAI8e,EAAU1f,KAAKwf,YACftf,EAAO,MACPyf,EAAWJ,GAEX7e,EAAO,SAAUkf,EAAKC,GACtB,IAAIC,EAAMF,EAAIG,YAAYF,EAAM,GAAK3f,GACjC8f,EAAKF,EAAIN,YACb,OAAI9gB,KAAKge,IAAI+C,EAAMO,GAAMV,KAAQK,IAEtBG,EAEJE,EAAKP,EAAM/e,EAAKkf,EAAKE,GAAOpf,EAAKof,EAAKD,IAG7C9iB,GAAO2iB,EAAUD,EAAM/e,EAAK,IAAIye,GAAQ,CAAC,EAAE,EAAE,IAAKnf,MAAQU,EAAKV,KAAM,IAAImf,GAAQ,CAAC,IAAI,IAAI,QAAQpiB,MACtG,OAAO,IAAIoiB,GAAQpiB,EAAIoE,OAAQ,CAACnB,KAAKY,KAAK,MAE9C,OAAOqf,GAAc1lB,WAAM,EAASyF,KAAS,KAAE9C,MAAM,EAAE,KAI3D,IAAI+iB,GAAgB,SAAUve,EAAEC,EAAErB,GAM9B,MAAO,OAHPoB,EAAIwe,GAAYxe,IAGI,OAFpBC,EAAIue,GAAYve,IAEiB,OADjCrB,EAAI4f,GAAY5f,KAIhB4f,GAAc,SAAUxjB,GAExB,OADAA,GAAK,MACO,OAAUA,EAAE,MAAQ2iB,IAAO3iB,EAAE,MAAO,MAAO,MAGvDyjB,GAAiB,GAEjBC,GAAUtf,EACVuf,GAASzhB,EAAMG,KACfuhB,GAAeH,GAEfI,GAAQ,SAAUC,EAAMC,EAAM7e,QACnB,IAANA,IAAeA,EAAE,IAEtB,IADA,IAAIyE,EAAO,GAAIvG,EAAMnF,UAAUC,OAAS,EAChCkF,KAAQ,GAAIuG,EAAMvG,GAAQnF,UAAWmF,EAAM,GAEnD,IAAII,EAAOmG,EAAK,IAAM,OAKtB,GAJKia,GAAapgB,IAAUmG,EAAKzL,SAE7BsF,EAAOlG,OAAOD,KAAKumB,IAAc,KAEhCA,GAAapgB,GACd,MAAM,IAAIS,MAAO,sBAAwBT,EAAO,mBAIpD,MAFqB,WAAjBmgB,GAAOG,KAAsBA,EAAO,IAAIJ,GAAQI,IAC/B,WAAjBH,GAAOI,KAAsBA,EAAO,IAAIL,GAAQK,IAC7CH,GAAapgB,GAAMsgB,EAAMC,EAAM7e,GACjCM,MAAMse,EAAKte,QAAUN,GAAK6e,EAAKve,QAAUse,EAAKte,WAGnDwe,GAAU5f,EACV6f,GAAMJ,GAEVG,GAAQhjB,UAAUijB,IAClBD,GAAQhjB,UAAUqiB,YAAc,SAASU,EAAM7e,QACnC,IAANA,IAAeA,EAAE,IAEtB,IADA,IAAIyE,EAAO,GAAIvG,EAAMnF,UAAUC,OAAS,EAChCkF,KAAQ,GAAIuG,EAAMvG,GAAQnF,UAAWmF,EAAM,GAEnD,OAAO6gB,GAAIpmB,WAAM,EAAQ,CAAEyF,KAAMygB,EAAM7e,GAAIT,OAAQkF,KAGpD,IAAIua,GAAU9f,EAEd8f,GAAQljB,UAAUmjB,YAAc,SAASvC,QACxB,IAAXA,IAAoBA,GAAO,GAEhC,IAAIvhB,EAAMiD,KAAKY,KACXP,EAAItD,EAAI,GACZ,OAAIuhB,GACHte,KAAKY,KAAO,CAAC7D,EAAI,GAAGsD,EAAGtD,EAAI,GAAGsD,EAAGtD,EAAI,GAAGsD,EAAGA,GACpCL,MAEA,IAAI4gB,GAAQ,CAAC7jB,EAAI,GAAGsD,EAAGtD,EAAI,GAAGsD,EAAGtD,EAAI,GAAGsD,EAAGA,GAAI,QAIxD,IAAIygB,GAAUhgB,EACVigB,GAAgBjV,GAEpBgV,GAAQpjB,UAAUsjB,SAAW,SAASrC,QACrB,IAAXA,IAAoBA,EAAO,GAEhC,IAAI5e,EAAKC,KACL6P,EAAM9P,EAAG8P,MAGb,OAFAA,EAAI,IAAMkR,GAAchV,GAAK4S,EACzB9O,EAAI,GAAK,IAAKA,EAAI,GAAK,GACpB,IAAIiR,GAAQjR,EAAK,OAAO3N,MAAMnC,EAAGmC,SAAS,IAGlD4e,GAAQpjB,UAAUujB,WAAa,SAAStC,GAGvC,YAFgB,IAAXA,IAAoBA,EAAO,GAEzB3e,KAAKghB,UAAUrC,IAGvB,IAAIuC,GAAUpgB,EACVqgB,GAASviB,EAAMG,KAEnBmiB,GAAQxjB,UAAU0jB,IAAM,SAAUpC,EAAIqC,EAAO/C,QACzB,IAAXA,IAAoBA,GAAS,GAElC,IAAI7c,EAAMud,EAAG9gB,MAAM,KACfgC,EAAOuB,EAAI,GACXwd,EAAUxd,EAAI,GACdyd,EAAMlf,KAAKE,KACf,GAAI+e,EAAS,CACT,IAAIvkB,EAAIwF,EAAKiJ,QAAQ8V,IAAkC,OAAtB/e,EAAK2D,OAAO,EAAG,GAAc,EAAI,GAClE,GAAInJ,GAAK,EAAG,CACR,GAAqB,UAAjBymB,GAAOE,GACP,OAAQA,EAAMC,OAAO,IACjB,IAAK,IAGL,IAAK,IACDpC,EAAIxkB,KAAO2mB,EACX,MACJ,IAAK,IACDnC,EAAIxkB,KAAO2mB,EAAMxd,OAAO,GACxB,MACJ,IAAK,IACDqb,EAAIxkB,KAAO2mB,EAAMxd,OAAO,GACxB,MACJ,QACIqb,EAAIxkB,IAAM2mB,MAEf,CAAA,GAAsB,WAAlBF,GAAOE,GAGd,MAAM,IAAI1gB,MAAM,mCAFhBue,EAAIxkB,GAAK2mB,EAIb,IAAIE,EAAM,IAAIL,GAAQhC,EAAKhf,GAC3B,OAAIoe,GACAte,KAAKY,KAAO2gB,EAAI3gB,KACTZ,MAEJuhB,EAEX,MAAM,IAAI5gB,MAAO,mBAAqBse,EAAU,YAAc/e,GAE9D,OAAOgf,GAIf,IAAIsC,GAAU1gB,EAEV/D,GAAM,SAAUyjB,EAAMC,EAAM7e,GAC5B,IAAI6f,EAAOjB,EAAK5f,KACZ8gB,EAAOjB,EAAK7f,KAChB,OAAO,IAAI4gB,GACPC,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5B,QAKRtB,GAAepjB,IAAMA,GAErB,IAAI4kB,GAAU7gB,EACV8gB,GAASljB,KAAK8K,KACdqY,GAAQnjB,KAAK6N,IAEbuV,GAAO,SAAUtB,EAAMC,EAAM7e,GAC7B,IAAIH,EAAM+e,EAAK5f,KACXmhB,EAAKtgB,EAAI,GACTugB,EAAKvgB,EAAI,GACTwgB,EAAKxgB,EAAI,GACTgL,EAAQgU,EAAK7f,KACbshB,EAAKzV,EAAM,GACX0V,EAAK1V,EAAM,GACX2V,EAAK3V,EAAM,GACf,OAAO,IAAIkV,GACPC,GAAOC,GAAME,EAAG,IAAM,EAAEngB,GAAKigB,GAAMK,EAAG,GAAKtgB,GAC3CggB,GAAOC,GAAMG,EAAG,IAAM,EAAEpgB,GAAKigB,GAAMM,EAAG,GAAKvgB,GAC3CggB,GAAOC,GAAMI,EAAG,IAAM,EAAErgB,GAAKigB,GAAMO,EAAG,GAAKxgB,GAC3C,QAKRue,GAAe2B,KAAOA,GAEtB,IAAIO,GAAUvhB,EAEV8M,GAAM,SAAU4S,EAAMC,EAAM7e,GAC5B,IAAI6f,EAAOjB,EAAK5S,MACZ8T,EAAOjB,EAAK7S,MAChB,OAAO,IAAIyU,GACPZ,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAGD,EAAK,IAC5B,QAKRtB,GAAevS,IAAMA,GAErB,IAAI0U,GAAUxhB,EAEVyhB,GAAO,SAAU/B,EAAMC,EAAM7e,EAAGI,GAChC,IAAIiC,EAAQkD,EAERsa,EAAMC,EAsBNc,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAM9BC,EAAKC,EAAKC,EAwBd,MAnDU,QAANhhB,GACAyf,EAAOjB,EAAK9a,MACZgc,EAAOjB,EAAK/a,OACC,QAAN1D,GACPyf,EAAOjB,EAAK3U,MACZ6V,EAAOjB,EAAK5U,OACC,QAAN7J,GACPyf,EAAOjB,EAAKtY,MACZwZ,EAAOjB,EAAKvY,OACC,QAANlG,GACPyf,EAAOjB,EAAKhW,MACZkX,EAAOjB,EAAKjW,OACC,QAANxI,GAAqB,QAANA,GACtBA,EAAI,MACJyf,EAAOjB,EAAKnR,MACZqS,EAAOjB,EAAKpR,OACC,UAANrN,IACPyf,EAAOjB,EAAKrC,QAAQ7O,UACpBoS,EAAOjB,EAAKtC,QAAQ7O,WAID,MAAnBtN,EAAE6B,OAAO,EAAG,IAAoB,UAAN7B,IACVwgB,GAAfve,EAASwd,GAAoB,GAAIiB,EAAOze,EAAO,GAAI2e,EAAO3e,EAAO,GAChDwe,GAAjBtb,EAAWua,GAAsB,GAAIiB,EAAOxb,EAAS,GAAI0b,EAAO1b,EAAS,IAKzE8C,MAAMuY,IAAUvY,MAAMwY,GAUfxY,MAAMuY,GAGNvY,MAAMwY,GAIdM,EAAM3f,OAAOC,KAHb0f,EAAMN,EACO,GAARG,GAAqB,GAARA,GAAmB,OAAL5gB,IAAc8gB,EAAMH,KAJpDI,EAAMP,EACO,GAARK,GAAqB,GAARA,GAAmB,OAAL7gB,IAAc8gB,EAAMJ,IAHpDK,EAAMP,EAAO5gB,GAPT6gB,EAAOD,GAAQC,EAAOD,EAAO,IACxBC,GAAQD,EAAO,KACbC,EAAOD,GAAQA,EAAOC,EAAO,IAC/BA,EAAO,IAAMD,EAEbC,EAAOD,QAaRpkB,IAAR0kB,IAAqBA,EAAMJ,EAAO9gB,GAAK+gB,EAAOD,IAClDM,EAAMJ,EAAOhhB,GAAKihB,EAAOD,GACF,IAAIN,GAAd,UAANtgB,EAA4B,CAACghB,EAAKF,EAAKC,GAAuB,CAACA,EAAKD,EAAKE,GAA5BhhB,IAGpDihB,GAAoBV,GAEpB1S,GAAM,SAAU2Q,EAAMC,EAAM7e,GAC/B,OAAOqhB,GAAkBzC,EAAMC,EAAM7e,EAAG,QAIzCue,GAAetQ,IAAMA,GACrBsQ,GAAe9Q,IAAMQ,GAErB,IAAIqT,GAAUpiB,EAEVuZ,GAAM,SAAUmG,EAAMC,EAAM7e,GAC5B,IAAIuhB,EAAK3C,EAAKnG,MACV+I,EAAK3C,EAAKpG,MACd,OAAO,IAAI6I,GAAQC,EAAKvhB,GAAKwhB,EAAGD,GAAK,QAIzChD,GAAe9F,IAAMA,GAErB,IAAIgJ,GAAoBd,GAEpBra,GAAM,SAAUsY,EAAMC,EAAM7e,GAC/B,OAAOyhB,GAAkB7C,EAAMC,EAAM7e,EAAG,QAIzCue,GAAejY,IAAMA,GAErB,IAAIob,GAAoBf,GAEpB/X,GAAM,SAAUgW,EAAMC,EAAM7e,GAC/B,OAAO0hB,GAAkB9C,EAAMC,EAAM7e,EAAG,QAIzCue,GAAe3V,IAAMA,GAErB,IAAI+Y,GAAoBhB,GAEpB7c,GAAM,SAAU8a,EAAMC,EAAM7e,GAC/B,OAAO2hB,GAAkB/C,EAAMC,EAAM7e,EAAG,QAIzCue,GAAeza,IAAMA,GAErB,IAAI8d,GAAoBjB,GAEpB1W,GAAM,SAAU2U,EAAMC,EAAM7e,GAC/B,OAAO4hB,GAAkBhD,EAAMC,EAAM7e,EAAG,QAIzCue,GAAetU,IAAMA,GAErB,IAAI4X,GAAU3iB,EAEVuc,GAAQ,SAAUmD,EAAMC,EAAM7e,GAC9B,IAAI6f,EAAOjB,EAAKnD,QACZqE,EAAOjB,EAAKpD,QAChB,OAAO,IAAIoG,GACPhC,EAAK,GAAK7f,GAAK8f,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAKD,EAAK,IAC9BA,EAAK,GAAK7f,GAAK8f,EAAK,GAAKD,EAAK,IAC9B,UAKRtB,GAAe9C,MAAQA,GAEvB,IAAIqG,GAAkBnB,GAElBpE,GAAQ,SAAUqC,EAAMC,EAAM7e,GAC9B,OAAO8hB,GAAgBlD,EAAMC,EAAM7e,EAAG,UAI1Cue,GAAehC,MAAQA,GAEvB,IAAIwF,GAAU7iB,EACV8iB,GAAahlB,EAAMC,SACnBglB,GAAQnlB,KAAK6N,IACbuX,GAASplB,KAAK8K,KACdua,GAAOrlB,KAAKC,GACZqlB,GAAQtlB,KAAKqL,IACbka,GAAQvlB,KAAKgQ,IACbwV,GAAUxlB,KAAKsP,MAEfmW,GAAU,SAAUC,EAAQlkB,EAAMmkB,QACpB,IAATnkB,IAAkBA,EAAK,aACX,IAAZmkB,IAAqBA,EAAQ,MAElC,IAAI7lB,EAAI4lB,EAAOxpB,OACVypB,IAAWA,EAAUpmB,MAAMqmB,KAAK,IAAIrmB,MAAMO,IAAIH,KAAI,WAAc,OAAO,MAE5E,IAAIF,EAAIK,EAAI6lB,EAAQE,QAAO,SAASlkB,EAAGC,GAAK,OAAOD,EAAIC,KAIvD,GAHA+jB,EAAQvpB,SAAQ,SAAU0pB,EAAE9pB,GAAK2pB,EAAQ3pB,IAAMyD,KAE/CimB,EAASA,EAAO/lB,KAAI,SAAU0D,GAAK,OAAO,IAAI4hB,GAAQ5hB,MACzC,SAAT7B,EACA,OAAOukB,GAAcL,EAAQC,GAQjC,IANA,IAAIK,EAAQN,EAAOO,QACfC,EAAMF,EAAM3F,IAAI7e,GAChB2kB,EAAM,GACNC,EAAK,EACLC,EAAK,EAEArqB,EAAE,EAAGA,EAAEkqB,EAAIhqB,OAAQF,IAGxB,GAFAkqB,EAAIlqB,IAAMkqB,EAAIlqB,IAAM,GAAK2pB,EAAQ,GACjCQ,EAAIvrB,KAAK2Q,MAAM2a,EAAIlqB,IAAM,EAAI2pB,EAAQ,IACd,MAAnBnkB,EAAKohB,OAAO5mB,KAAeuP,MAAM2a,EAAIlqB,IAAK,CAC1C,IAAIsqB,EAAIJ,EAAIlqB,GAAK,IAAMqpB,GACvBe,GAAMd,GAAMgB,GAAKX,EAAQ,GACzBU,GAAMd,GAAMe,GAAKX,EAAQ,GAIjC,IAAIniB,EAAQwiB,EAAMxiB,QAAUmiB,EAAQ,GACpCD,EAAOtpB,SAAQ,SAAUiH,EAAEkjB,GACvB,IAAIC,EAAOnjB,EAAEgd,IAAI7e,GACjBgC,GAASH,EAAEG,QAAUmiB,EAAQY,EAAG,GAChC,IAAK,IAAIvqB,EAAE,EAAGA,EAAEkqB,EAAIhqB,OAAQF,IACxB,IAAKuP,MAAMib,EAAKxqB,IAEZ,GADAmqB,EAAInqB,IAAM2pB,EAAQY,EAAG,GACE,MAAnB/kB,EAAKohB,OAAO5mB,GAAY,CACxB,IAAIsqB,EAAIE,EAAKxqB,GAAK,IAAMqpB,GACxBe,GAAMd,GAAMgB,GAAKX,EAAQY,EAAG,GAC5BF,GAAMd,GAAMe,GAAKX,EAAQY,EAAG,QAE5BL,EAAIlqB,IAAMwqB,EAAKxqB,GAAK2pB,EAAQY,EAAG,MAM/C,IAAK,IAAI7nB,EAAI,EAAGA,EAAIwnB,EAAIhqB,OAAQwC,IAC5B,GAAyB,MAArB8C,EAAKohB,OAAOlkB,GAAc,CAE1B,IADA,IAAI+nB,EAAMjB,GAAQa,EAAKF,EAAIznB,GAAM0nB,EAAKD,EAAIznB,IAAQ2mB,GAAO,IAClDoB,EAAM,GAAKA,GAAO,IACzB,KAAOA,GAAO,KAAOA,GAAO,IAC5BP,EAAIxnB,GAAO+nB,OAEXP,EAAIxnB,GAAOwnB,EAAIxnB,GAAKynB,EAAIznB,GAIhC,OADA8E,GAAS1D,EACF,IAAKmlB,GAAQiB,EAAK1kB,GAAOgC,MAAMA,EAAQ,OAAU,EAAIA,GAAO,IAInEuiB,GAAgB,SAAUL,EAAQC,GAGlC,IAFA,IAAI7lB,EAAI4lB,EAAOxpB,OACXgqB,EAAM,CAAC,EAAE,EAAE,EAAE,GACRlqB,EAAE,EAAGA,EAAI0pB,EAAOxpB,OAAQF,IAAK,CAClC,IAAI0qB,EAAMhB,EAAO1pB,GACbkH,EAAIyiB,EAAQ3pB,GAAK8D,EACjBzB,EAAMqoB,EAAIxkB,KACdgkB,EAAI,IAAMf,GAAM9mB,EAAI,GAAG,GAAK6E,EAC5BgjB,EAAI,IAAMf,GAAM9mB,EAAI,GAAG,GAAK6E,EAC5BgjB,EAAI,IAAMf,GAAM9mB,EAAI,GAAG,GAAK6E,EAC5BgjB,EAAI,IAAM7nB,EAAI,GAAK6E,EAMvB,OAJAgjB,EAAI,GAAKd,GAAOc,EAAI,IACpBA,EAAI,GAAKd,GAAOc,EAAI,IACpBA,EAAI,GAAKd,GAAOc,EAAI,IAChBA,EAAI,GAAK,WAAaA,EAAI,GAAK,GAC5B,IAAIjB,GAAQC,GAAWgB,KAO9BS,GAAWhkB,EACXikB,GAAS1mB,EAAMG,KAEfwmB,GAAQ7mB,KAAK6N,IAEbiZ,GAAU,SAASpB,GAGnB,IAAIqB,EAAQ,MACRC,EAASL,GAAS,QAClBM,EAAU,EAEVC,EAAU,CAAC,EAAG,GACdC,EAAO,GACPC,EAAW,CAAC,EAAE,GACdC,GAAW,EACXC,EAAU,GACVC,GAAO,EACPC,EAAO,EACPC,EAAO,EACPC,GAAoB,EACpBC,EAAc,GACdC,GAAY,EACZC,EAAS,EAITC,EAAY,SAASpC,GAMrB,IALAA,EAASA,GAAU,CAAC,OAAQ,UACK,WAAnBkB,GAAOlB,IAAwBiB,GAASoB,QAClDpB,GAASoB,OAAOrC,EAAO7mB,iBACvB6mB,EAASiB,GAASoB,OAAOrC,EAAO7mB,gBAEb,UAAnB+nB,GAAOlB,GAAqB,CAEN,IAAlBA,EAAOxpB,SACPwpB,EAAS,CAACA,EAAO,GAAIA,EAAO,KAGhCA,EAASA,EAAOlnB,MAAM,GAEtB,IAAK,IAAI6E,EAAE,EAAGA,EAAEqiB,EAAOxpB,OAAQmH,IAC3BqiB,EAAOriB,GAAKsjB,GAASjB,EAAOriB,IAGhC8jB,EAAKjrB,OAAS,EACd,IAAK,IAAI8rB,EAAI,EAAGA,EAAItC,EAAOxpB,OAAQ8rB,IAC/Bb,EAAKvsB,KAAKotB,GAAKtC,EAAOxpB,OAAO,IAIrC,OADA+rB,IACOX,EAAU5B,GAGjBwC,EAAW,SAASvF,GACpB,GAAgB,MAAZ0E,EAAkB,CAGlB,IAFA,IAAI/L,EAAI+L,EAASnrB,OAAO,EACpBF,EAAI,EACDA,EAAIsf,GAAKqH,GAAS0E,EAASrrB,IAC9BA,IAEJ,OAAOA,EAAE,EAEb,OAAO,GAGPmsB,EAAgB,SAAUnf,GAAK,OAAOA,GACtCof,EAAa,SAAUpf,GAAK,OAAOA,GAcnCqf,EAAW,SAASC,EAAKC,GACzB,IAAI7B,EAAK1d,EAET,GADiB,MAAbuf,IAAqBA,GAAY,GACjChd,MAAM+c,IAAiB,OAARA,EAAiB,OAAOtB,EAavChe,EAZCuf,EAYGD,EAXAjB,GAAaA,EAASnrB,OAAS,EAEvBgsB,EAASI,IACRjB,EAASnrB,OAAO,GAClBurB,IAASD,GAEXc,EAAMd,IAASC,EAAOD,GAEvB,EAOZxe,EAAIof,EAAWpf,GAEVuf,IACDvf,EAAImf,EAAcnf,IAGP,IAAX6e,IAAgB7e,EAAI6d,GAAM7d,EAAG6e,IAEjC7e,EAAIoe,EAAS,GAAMpe,GAAK,EAAIoe,EAAS,GAAKA,EAAS,IAEnDpe,EAAIhJ,KAAK/B,IAAI,EAAG+B,KAAK9B,IAAI,EAAG8K,IAE5B,IAAIvJ,EAAIO,KAAKuI,MAAU,IAAJS,GAEnB,GAAI4e,GAAaD,EAAYloB,GACzBinB,EAAMiB,EAAYloB,OACf,CACH,GAAwB,UAApBmnB,GAAOU,GAEP,IAAK,IAAItrB,EAAE,EAAGA,EAAEmrB,EAAKjrB,OAAQF,IAAK,CAC9B,IAAI6F,EAAIslB,EAAKnrB,GACb,GAAIgN,GAAKnH,EAAG,CACR6kB,EAAMY,EAAQtrB,GACd,MAEJ,GAAKgN,GAAKnH,GAAO7F,IAAOmrB,EAAKjrB,OAAO,EAAK,CACrCwqB,EAAMY,EAAQtrB,GACd,MAEJ,GAAIgN,EAAInH,GAAKmH,EAAIme,EAAKnrB,EAAE,GAAI,CACxBgN,GAAKA,EAAEnH,IAAIslB,EAAKnrB,EAAE,GAAG6F,GACrB6kB,EAAMC,GAAStF,YAAYiG,EAAQtrB,GAAIsrB,EAAQtrB,EAAE,GAAIgN,EAAG+d,GACxD,WAGmB,aAApBH,GAAOU,KACdZ,EAAMY,EAAQte,IAEd4e,IAAaD,EAAYloB,GAAKinB,GAEtC,OAAOA,GAGPuB,EAAa,WAAc,OAAON,EAAc,IAEpDG,EAAUpC,GAIV,IAAIxiB,EAAI,SAAS+F,GACb,IAAI5F,EAAIsjB,GAAS0B,EAASpf,IAC1B,OAAIse,GAAQlkB,EAAEkkB,GAAgBlkB,EAAEkkB,KAAyBlkB,GAwM7D,OArMAH,EAAEslB,QAAU,SAASA,GACjB,GAAe,MAAXA,EAAiB,CACjB,GAAwB,UAApB5B,GAAO4B,GACPnB,EAAWmB,EACXtB,EAAU,CAACsB,EAAQ,GAAIA,EAAQA,EAAQtsB,OAAO,QAC3C,CACH,IAAIusB,EAAI9B,GAAS+B,QAAQxB,GAErBG,EADY,IAAZmB,EACW,CAACC,EAAExqB,IAAKwqB,EAAEvqB,KAEVyoB,GAASgC,OAAOF,EAAG,IAAKD,GAG3C,OAAOtlB,EAEX,OAAOmkB,GAIXnkB,EAAE0lB,OAAS,SAASA,GAChB,IAAK3sB,UAAUC,OACX,OAAOgrB,EAEXM,EAAOoB,EAAO,GACdnB,EAAOmB,EAAOA,EAAO1sB,OAAO,GAC5BirB,EAAO,GACP,IAAI1nB,EAAI6nB,EAAQprB,OAChB,GAAK0sB,EAAO1sB,SAAWuD,GAAO+nB,IAASC,EAEnC,IAAK,IAAIzrB,EAAI,EAAG8F,EAAOvC,MAAMqmB,KAAKgD,GAAS5sB,EAAI8F,EAAK5F,OAAQF,GAAK,EAAG,CAChE,IAAIysB,EAAI3mB,EAAK9F,GAEfmrB,EAAKvsB,MAAM6tB,EAAEjB,IAASC,EAAKD,QAE1B,CACH,IAAK,IAAInkB,EAAE,EAAGA,EAAE5D,EAAG4D,IACf8jB,EAAKvsB,KAAKyI,GAAG5D,EAAE,IAEnB,GAAImpB,EAAO1sB,OAAS,EAAG,CAEnB,IAAI2sB,EAAOD,EAAOjpB,KAAI,SAAU8oB,EAAEzsB,GAAK,OAAOA,GAAG4sB,EAAO1sB,OAAO,MAC3D4sB,EAAUF,EAAOjpB,KAAI,SAAU8oB,GAAK,OAAQA,EAAIjB,IAASC,EAAOD,MAC/DsB,EAAQC,OAAM,SAAUT,EAAKtsB,GAAK,OAAO6sB,EAAK7sB,KAAOssB,OACtDF,EAAa,SAAUpf,GACnB,GAAIA,GAAK,GAAKA,GAAK,EAAK,OAAOA,EAE/B,IADA,IAAIhN,EAAI,EACDgN,GAAK8f,EAAQ9sB,EAAE,IAAMA,IAC5B,IAAIkH,GAAK8F,EAAI8f,EAAQ9sB,KAAO8sB,EAAQ9sB,EAAE,GAAK8sB,EAAQ9sB,IAEnD,OADU6sB,EAAK7sB,GAAKkH,GAAK2lB,EAAK7sB,EAAE,GAAK6sB,EAAK7sB,OAQ1D,OADAkrB,EAAU,CAACM,EAAMC,GACVvkB,GAGXA,EAAE1B,KAAO,SAASwnB,GACd,OAAK/sB,UAAUC,QAGf6qB,EAAQiC,EACRf,IACO/kB,GAJI6jB,GAOf7jB,EAAE+lB,MAAQ,SAASvD,EAAQyB,GAEvB,OADAW,EAAUpC,GACHxiB,GAGXA,EAAE2f,IAAM,SAASqG,GAEb,OADA3B,EAAO2B,EACAhmB,GAGXA,EAAEimB,OAAS,SAASb,GAChB,OAAKrsB,UAAUC,QAGf+qB,EAAUqB,EACHplB,GAHI+jB,GAMf/jB,EAAEkmB,iBAAmB,SAASngB,GAkC1B,OAjCS,MAALA,IAAaA,GAAI,GACrBye,EAAoBze,EACpBgf,IAEIE,EADAT,EACgB,SAAS1e,GAUrB,IATA,IAAIqgB,EAAKhB,EAAS,GAAG,GAAMnZ,MAAM,GAC7Boa,EAAKjB,EAAS,GAAG,GAAMnZ,MAAM,GAC7Bqa,EAAMF,EAAKC,EACXE,EAAWnB,EAASrf,GAAG,GAAMkG,MAAM,GACnCua,EAAUJ,GAAOC,EAAKD,GAAMrgB,EAC5B0gB,EAASF,EAAWC,EACpBhc,EAAK,EACL/H,EAAK,EACLub,EAAW,GACPjhB,KAAKge,IAAI0L,GAAU,KAAUzI,KAAa,GAEtCsI,IAAOG,IAAW,GAClBA,EAAS,GACTjc,EAAKzE,EACLA,GAAgB,IAAVtD,EAAKsD,KAEXtD,EAAKsD,EACLA,GAAgB,IAAVyE,EAAKzE,IAEfwgB,EAAWnB,EAASrf,GAAG,GAAMkG,MAAM,GAC5Bwa,EAASF,EAAWC,EAGnC,OAAOzgB,GAGK,SAAUA,GAAK,OAAOA,GAEnC9F,GAGXA,EAAEymB,QAAU,SAAS9nB,GACjB,OAAS,MAALA,GACkB,WAAd+kB,GAAO/kB,KACPA,EAAI,CAACA,EAAEA,IAEXulB,EAAWvlB,EACJqB,GAEAkkB,GAIflkB,EAAEwiB,OAAS,SAASkE,EAAW/G,GAEvB5mB,UAAUC,OAAS,IAAK2mB,EAAM,OAClC,IAAIgH,EAAS,GAEb,GAAyB,IAArB5tB,UAAUC,OACV2tB,EAASvC,EAAQ9oB,MAAM,QAEpB,GAAkB,IAAdorB,EACPC,EAAS,CAAC3mB,EAAE,UAET,GAAI0mB,EAAY,EAAG,CACtB,IAAIE,EAAK5C,EAAQ,GACb6C,EAAK7C,EAAQ,GAAK4C,EACtBD,EAASG,GAAU,EAAGJ,GAAW,GAAOjqB,KAAI,SAAU3D,GAAK,OAAOkH,EAAG4mB,EAAO9tB,GAAG4tB,EAAU,GAAMG,UAE5F,CACHrE,EAAS,GACT,IAAIuE,EAAU,GACd,GAAI5C,GAAaA,EAASnrB,OAAS,EAC/B,IAAK,IAAIF,EAAI,EAAGkuB,EAAM7C,EAASnrB,OAAQiuB,EAAM,GAAKD,EAAKC,EAAMnuB,EAAIkuB,EAAMluB,EAAIkuB,EAAKC,EAAMnuB,IAAMA,IACxFiuB,EAAQrvB,KAAiC,IAA3BysB,EAASrrB,EAAE,GAAGqrB,EAASrrB,UAGzCiuB,EAAU/C,EAEd2C,EAASI,EAAQtqB,KAAI,SAAUsJ,GAAK,OAAO/F,EAAE+F,MAMjD,OAHI0d,GAAS9D,KACTgH,EAASA,EAAOlqB,KAAI,SAAU0D,GAAK,OAAOA,EAAEwf,SAEzCgH,GAGX3mB,EAAEknB,MAAQ,SAAS/mB,GACf,OAAS,MAALA,GACAukB,EAAYvkB,EACLH,GAEA0kB,GAIf1kB,EAAEmnB,MAAQ,SAASpnB,GACf,OAAS,MAALA,GACA4kB,EAAS5kB,EACFC,GAEA2kB,GAIf3kB,EAAEonB,OAAS,SAAS7B,GAChB,OAAS,MAALA,GACAzB,EAASL,GAAS8B,GACXvlB,GAEA8jB,GAIR9jB,GAGX,SAAS8mB,GAAUO,EAAMC,EAAOC,GAI9B,IAHA,IAAIxB,EAAQ,GACRyB,EAAYH,EAAOC,EACnBN,EAAOO,EAAoBC,EAAYF,EAAQ,EAAIA,EAAQ,EAAxCA,EACdxuB,EAAIuuB,EAAMG,EAAY1uB,EAAIkuB,EAAMluB,EAAIkuB,EAAKQ,EAAY1uB,IAAMA,IAClEitB,EAAMruB,KAAKoB,GAEb,OAAOitB,EAQT,IAAI0B,GAAUvoB,EAEVwoB,GAAU9D,GAGV+D,GAAY,SAASvP,GAErB,IADA,IAAIwP,EAAM,CAAC,EAAG,GACL9uB,EAAI,EAAGA,EAAIsf,EAAGtf,IAAK,CAExB,IADA,IAAI+uB,EAAS,CAAC,GACLC,EAAI,EAAGA,GAAKF,EAAI5uB,OAAQ8uB,IAC7BD,EAAOC,IAAMF,EAAIE,IAAM,GAAKF,EAAIE,EAAI,GAExCF,EAAMC,EAEV,OAAOD,GAGPG,GAAS,SAASvF,GAClB,IAAIngB,EAAQkD,EAAUC,EAElBwiB,EAAGC,EAAMC,EAAMC,EAEnB,GAAsB,KADtB3F,EAASA,EAAO/lB,KAAI,SAAU0D,GAAK,OAAO,IAAIsnB,GAAQtnB,OAC3CnH,OAENqJ,EAASmgB,EAAO/lB,KAAI,SAAU0D,GAAK,OAAOA,EAAE6L,SAAWic,EAAO5lB,EAAO,GAAI6lB,EAAO7lB,EAAO,GACxF2lB,EAAI,SAASliB,GACT,IAAIkG,EAAO,CAAC,EAAG,EAAG,GAAGvP,KAAI,SAAU3D,GAAK,OAAOmvB,EAAKnvB,GAAMgN,GAAKoiB,EAAKpvB,GAAKmvB,EAAKnvB,OAC9E,OAAO,IAAI2uB,GAAQzb,EAAK,aAEzB,GAAsB,IAAlBwW,EAAOxpB,OAEbuM,EAAWid,EAAO/lB,KAAI,SAAU0D,GAAK,OAAOA,EAAE6L,SAAWic,EAAO1iB,EAAS,GAAI2iB,EAAO3iB,EAAS,GAAI4iB,EAAO5iB,EAAS,GAClHyiB,EAAI,SAASliB,GACT,IAAIkG,EAAO,CAAC,EAAG,EAAG,GAAGvP,KAAI,SAAU3D,GAAK,OAAS,EAAEgN,IAAI,EAAEA,GAAKmiB,EAAKnvB,GAAO,GAAK,EAAEgN,GAAKA,EAAIoiB,EAAKpvB,GAAOgN,EAAIA,EAAIqiB,EAAKrvB,MACnH,OAAO,IAAI2uB,GAAQzb,EAAK,aAEzB,GAAsB,IAAlBwW,EAAOxpB,OAAc,CAE5B,IAAIovB,EACH5iB,EAAWgd,EAAO/lB,KAAI,SAAU0D,GAAK,OAAOA,EAAE6L,SAAWic,EAAOziB,EAAS,GAAI0iB,EAAO1iB,EAAS,GAAI2iB,EAAO3iB,EAAS,GAAI4iB,EAAO5iB,EAAS,GACtIwiB,EAAI,SAASliB,GACT,IAAIkG,EAAO,CAAC,EAAG,EAAG,GAAGvP,KAAI,SAAU3D,GAAK,OAAS,EAAEgN,IAAI,EAAEA,IAAI,EAAEA,GAAKmiB,EAAKnvB,GAAO,GAAK,EAAEgN,IAAM,EAAEA,GAAKA,EAAIoiB,EAAKpvB,GAAO,GAAK,EAAEgN,GAAKA,EAAIA,EAAIqiB,EAAKrvB,GAAOgN,EAAEA,EAAEA,EAAIsiB,EAAKtvB,MACjK,OAAO,IAAI2uB,GAAQzb,EAAK,YAEzB,CAAA,KAAIwW,EAAOxpB,QAAU,GAYxB,MAAM,IAAIqvB,WAAW,mDAVrB,IAAIC,EAAMV,EAAKxP,EACfkQ,EAAO9F,EAAO/lB,KAAI,SAAU0D,GAAK,OAAOA,EAAE6L,SAC1CoM,EAAIoK,EAAOxpB,OAAS,EACpB4uB,EAAMD,GAAUvP,GAChB4P,EAAI,SAAUliB,GACV,IAAIiB,EAAI,EAAIjB,EACRkG,EAAO,CAAC,EAAG,EAAG,GAAGvP,KAAI,SAAU3D,GAAK,OAAOwvB,EAAK3F,QAAO,SAAU4F,EAAKC,EAAIV,GAAK,OAAQS,EAAMX,EAAIE,GAAKhrB,KAAK6N,IAAK5D,EAAIqR,EAAI0P,GAAOhrB,KAAK6N,IAAK7E,EAAGgiB,GAAMU,EAAG1vB,KAAQ,MACjK,OAAO,IAAI2uB,GAAQzb,EAAK,QAKhC,OAAOgc,GAGPS,GAAW,SAAUjG,GACrB,IAAIxiB,EAAI+nB,GAAOvF,GAEf,OADAxiB,EAAE0oB,MAAQ,WAAc,OAAOhB,GAAQ1nB,IAChCA,GAQP2oB,GAAWlpB,EAEXmpB,GAAQ,SAAUC,EAAQC,EAAKxqB,GAC/B,IAAKsqB,GAAMtqB,GACP,MAAM,IAAIS,MAAM,sBAAwBT,GAE5C,OAAOsqB,GAAMtqB,GAAMuqB,EAAQC,IAG3BC,GAAU,SAAU/oB,GAAK,OAAO,SAAU6oB,EAAOC,GAC7C,IAAIE,EAAKL,GAASG,GAAK3tB,MACnBomB,EAAKoH,GAASE,GAAQ1tB,MAC1B,OAAOwtB,GAASxtB,IAAI6E,EAAEgpB,EAAIzH,MAG9B0H,GAAO,SAAUjpB,GAAK,OAAO,SAAUgpB,EAAIzH,GACvC,IAAI5B,EAAM,GAIV,OAHAA,EAAI,GAAK3f,EAAEgpB,EAAG,GAAIzH,EAAG,IACrB5B,EAAI,GAAK3f,EAAEgpB,EAAG,GAAIzH,EAAG,IACrB5B,EAAI,GAAK3f,EAAEgpB,EAAG,GAAIzH,EAAG,IACd5B,IAGXuJ,GAAS,SAAUzqB,GAAK,OAAOA,GAC/B0qB,GAAW,SAAU1qB,EAAEC,GAAK,OAAOD,EAAIC,EAAI,KAC3Coe,GAAS,SAAUre,EAAEC,GAAK,OAAOD,EAAIC,EAAIA,EAAID,GAC7C2qB,GAAU,SAAU3qB,EAAEC,GAAK,OAAOD,EAAIC,EAAID,EAAIC,GAC9C2qB,GAAS,SAAU5qB,EAAEC,GAAK,OAAO,KAAO,GAAK,EAAED,EAAE,MAAQ,EAAEC,EAAE,OAC7D4qB,GAAU,SAAU7qB,EAAEC,GAAK,OAAOA,EAAI,IAAM,EAAID,EAAIC,EAAI,IAAM,KAAO,EAAI,GAAK,EAAID,EAAI,MAAU,EAAIC,EAAI,OACxG6qB,GAAO,SAAU9qB,EAAEC,GAAK,OAAO,KAAO,GAAK,EAAIA,EAAI,MAAQD,EAAE,OAC7D+qB,GAAQ,SAAU/qB,EAAEC,GACpB,OAAU,MAAND,IACJA,EAAWC,EAAI,IAAX,KAAmB,EAAID,EAAI,MACpB,IAFa,IAEDA,GAM3BmqB,GAAMM,OAASH,GAAQE,GAAKC,KAC5BN,GAAMO,SAAWJ,GAAQE,GAAKE,KAC9BP,GAAMS,OAASN,GAAQE,GAAKI,KAC5BT,GAAMU,QAAUP,GAAQE,GAAKK,KAC7BV,GAAM9L,OAASiM,GAAQE,GAAKnM,KAC5B8L,GAAMQ,QAAUL,GAAQE,GAAKG,KAC7BR,GAAMY,MAAQT,GAAQE,GAAKO,KAC3BZ,GAAMW,KAAOR,GAAQE,GAAKM,KAgf1B,IA7eA,IAAIE,GAAUb,GAMVc,GAAS1sB,EAAMG,KACfF,GAAWD,EAAMC,SACjBK,GAAQN,EAAMM,MACdqsB,GAAQ7sB,KAAK6N,IACbif,GAAQ9sB,KAAKgQ,IACb+c,GAAQ/sB,KAAKqL,IACb2hB,GAAWrqB,EAEXsqB,GAAY,SAASC,EAAOC,EAAW9I,EAAKgG,EAAO+C,QACpC,IAAVF,IAAmBA,EAAM,UACX,IAAdC,IAAuBA,GAAW,UAC1B,IAAR9I,IAAiBA,EAAI,QACX,IAAVgG,IAAmBA,EAAM,QACX,IAAd+C,IAAuBA,EAAU,CAAC,EAAE,IAEzC,IAAYC,EAARC,EAAK,EACiB,UAAtBV,GAAOQ,GACPC,EAAKD,EAAU,GAAKA,EAAU,IAE9BC,EAAK,EACLD,EAAY,CAACA,EAAWA,IAG5B,IAAIlqB,EAAI,SAASqqB,GACb,IAAI5rB,EAAInB,KAAW0sB,EAAM,KAAK,IAAQC,EAAYI,GAC9CztB,EAAI+sB,GAAMO,EAAU,GAAMC,EAAKE,EAAQlD,GAEvCmD,GADW,IAAPF,EAAWjJ,EAAI,GAAMkJ,EAAQD,EAAMjJ,GAC5BvkB,GAAK,EAAEA,GAAM,EACxB2tB,EAAQV,GAAMprB,GACd+rB,EAAQZ,GAAMnrB,GAIlB,OAAOqrB,GAAS7sB,GAAS,CAAG,KAHpBL,EAAK0tB,IAAS,OAAUC,EAAU,QAASC,IAGjB,KAF1B5tB,EAAK0tB,IAAS,OAAUC,EAAU,OAASC,IAEX,KADhC5tB,EAAK0tB,GAAO,QAAWC,IACa,MAiDhD,OA9CAvqB,EAAEgqB,MAAQ,SAAS1oB,GACf,OAAU,MAALA,EAAqB0oB,GAC1BA,EAAQ1oB,EACDtB,IAGXA,EAAEiqB,UAAY,SAASnqB,GACnB,OAAU,MAALA,EAAqBmqB,GAC1BA,EAAYnqB,EACLE,IAGXA,EAAEmnB,MAAQ,SAASpnB,GACf,OAAU,MAALA,EAAqBonB,GAC1BA,EAAQpnB,EACDC,IAGXA,EAAEmhB,IAAM,SAAS5f,GACb,OAAU,MAALA,EAAqB4f,GAEN,UAAhBuI,GADJvI,EAAM5f,GAGS,KADX6oB,EAAKjJ,EAAI,GAAKA,EAAI,MACFA,EAAMA,EAAI,IAE1BiJ,EAAK,EAEFpqB,IAGXA,EAAEkqB,UAAY,SAAS3oB,GACnB,OAAU,MAALA,EAAqB2oB,GACR,UAAdR,GAAOnoB,IACP2oB,EAAY3oB,EACZ4oB,EAAK5oB,EAAE,GAAKA,EAAE,KAEd2oB,EAAY,CAAC3oB,EAAEA,GACf4oB,EAAK,GAEFnqB,IAGXA,EAAE0oB,MAAQ,WAAc,OAAOoB,GAASpB,MAAM1oB,IAE9CA,EAAEmhB,IAAIA,GAECnhB,GAGPyqB,GAAUvrB,EACVwrB,GAAS,mBAETC,GAAU7tB,KAAKuI,MACfulB,GAAS9tB,KAAK8tB,OAEdC,GAAW,WAEX,IADA,IAAIC,EAAO,IACFhyB,EAAE,EAAGA,EAAE,EAAGA,IACfgyB,GAAQJ,GAAOhL,OAAOiL,GAAmB,GAAXC,OAElC,OAAO,IAAIH,GAAQK,EAAM,QAGzB3tB,GAAOvB,EACP0d,GAAMxc,KAAKwc,IACXyR,GAAQjuB,KAAK6N,IACbtF,GAAQvI,KAAKuI,MACb2lB,GAAQluB,KAAKge,IAGb0K,GAAU,SAAUyF,EAAM9xB,QACb,IAARA,IAAiBA,EAAI,MAE1B,IAAI2G,EAAI,CACJ/E,IAAKyG,OAAO0pB,UACZlwB,KAAuB,EAAlBwG,OAAO0pB,UACZ3C,IAAK,EACL4C,OAAQ,GACRC,MAAO,GAoBX,MAlBmB,WAAfjuB,GAAK8tB,KACLA,EAAO7yB,OAAO+yB,OAAOF,IAEzBA,EAAK/xB,SAAQ,SAAUksB,GACfjsB,GAAqB,WAAdgE,GAAKioB,KAAqBA,EAAMA,EAAIjsB,SACnCqD,IAAR4oB,GAA6B,OAARA,GAAiB/c,MAAM+c,KAC5CtlB,EAAEqrB,OAAOzzB,KAAK0tB,GACdtlB,EAAEyoB,KAAOnD,EACLA,EAAMtlB,EAAE/E,MAAO+E,EAAE/E,IAAMqqB,GACvBA,EAAMtlB,EAAE9E,MAAO8E,EAAE9E,IAAMoqB,GAC3BtlB,EAAEsrB,OAAS,MAInBtrB,EAAE4lB,OAAS,CAAC5lB,EAAE/E,IAAK+E,EAAE9E,KAErB8E,EAAE2lB,OAAS,SAAUnnB,EAAMma,GAAO,OAAOgN,GAAO3lB,EAAGxB,EAAMma,IAElD3Y,GAIP2lB,GAAS,SAAUwF,EAAM3sB,EAAMma,QACjB,IAATna,IAAkBA,EAAK,cACf,IAARma,IAAiBA,EAAI,GAER,SAAdtb,GAAK8tB,KACLA,EAAOzF,GAAQyF,IAEnB,IAAIlwB,EAAMkwB,EAAKlwB,IACXC,EAAMiwB,EAAKjwB,IACXmwB,EAASF,EAAKE,OAAO3sB,MAAK,SAAUC,EAAEC,GAAK,OAAOD,EAAEC,KAExD,GAAY,IAAR+Z,EAAa,MAAO,CAAC1d,EAAIC,GAE7B,IAAIyqB,EAAS,GAOb,GALyB,MAArBnnB,EAAK2D,OAAO,EAAE,KACdwjB,EAAO/tB,KAAKqD,GACZ0qB,EAAO/tB,KAAKsD,IAGS,MAArBsD,EAAK2D,OAAO,EAAE,GAAY,CAC1BwjB,EAAO/tB,KAAKqD,GACZ,IAAK,IAAIjC,EAAE,EAAGA,EAAE2f,EAAK3f,IACjB2sB,EAAO/tB,KAAKqD,EAAMjC,EAAE2f,GAAMzd,EAAID,IAElC0qB,EAAO/tB,KAAKsD,QAGX,GAAyB,MAArBsD,EAAK2D,OAAO,EAAE,GAAY,CAC/B,GAAIlH,GAAO,EACP,MAAM,IAAIgE,MAAM,uDAEpB,IAAIssB,EAAUvuB,KAAKwuB,OAAShS,GAAIve,GAC5BwwB,EAAUzuB,KAAKwuB,OAAShS,GAAIte,GAChCyqB,EAAO/tB,KAAKqD,GACZ,IAAK,IAAIS,EAAI,EAAGA,EAAIid,EAAKjd,IACrBiqB,EAAO/tB,KAAKqzB,GAAM,GAAIM,EAAY7vB,EAAIid,GAAQ8S,EAAUF,KAE5D5F,EAAO/tB,KAAKsD,QAGX,GAAyB,MAArBsD,EAAK2D,OAAO,EAAE,GAAY,CAC/BwjB,EAAO/tB,KAAKqD,GACZ,IAAK,IAAI4I,EAAI,EAAGA,EAAI8U,EAAK9U,IAAO,CAC5B,IAAIhF,GAAMwsB,EAAOnyB,OAAO,GAAK2K,EAAK8U,EAC9B+S,EAAKnmB,GAAM1G,GACf,GAAI6sB,IAAO7sB,EACP8mB,EAAO/tB,KAAKyzB,EAAOK,QAChB,CACH,IAAIC,EAAK9sB,EAAI6sB,EACb/F,EAAO/tB,KAAMyzB,EAAOK,IAAK,EAAEC,GAAQN,EAAOK,EAAG,GAAGC,IAGxDhG,EAAO/tB,KAAKsD,QAIX,GAAyB,MAArBsD,EAAK2D,OAAO,EAAE,GAAY,CAM/B,IAAIypB,EACAtT,EAAI+S,EAAOnyB,OACX2yB,EAAc,IAAItvB,MAAM+b,GACxBwT,EAAe,IAAIvvB,MAAMoc,GACzBoT,GAAS,EACTC,EAAW,EACXC,EAAY,MAGhBA,EAAY,IACFr0B,KAAKqD,GACf,IAAK,IAAI8I,EAAI,EAAGA,EAAI4U,EAAK5U,IACrBkoB,EAAUr0B,KAAKqD,EAAQ8I,EAAI4U,GAAQzd,EAAID,IAI3C,IAFAgxB,EAAUr0B,KAAKsD,GAER6wB,GAAQ,CAEX,IAAK,IAAI/D,EAAE,EAAGA,EAAErP,EAAKqP,IACjB8D,EAAa9D,GAAK,EAEtB,IAAK,IAAIkE,EAAI,EAAGA,EAAI5T,EAAG4T,IAInB,IAHA,IAAIvM,EAAQ0L,EAAOa,GACfC,EAAUzqB,OAAO0pB,UACjBgB,OAAO,EACFC,EAAI,EAAGA,EAAI1T,EAAK0T,IAAO,CAC5B,IAAIC,EAAOpB,GAAMe,EAAUI,GAAK1M,GAC5B2M,EAAOH,IACPA,EAAUG,EACVF,EAAOC,GAEXP,EAAaM,KACbP,EAAYK,GAAOE,EAM3B,IADA,IAAIG,EAAe,IAAIhwB,MAAMoc,GACpB6T,EAAI,EAAGA,EAAI7T,EAAK6T,IACrBD,EAAaC,GAAO,KAExB,IAAK,IAAIC,EAAI,EAAGA,EAAInU,EAAGmU,IAEW,OAA1BF,EADJX,EAAUC,EAAYY,IAElBF,EAAaX,GAAWP,EAAOoB,GAE/BF,EAAaX,IAAYP,EAAOoB,GAGxC,IAAK,IAAIC,EAAI,EAAGA,EAAI/T,EAAK+T,IACrBH,EAAaG,IAAQ,EAAEZ,EAAaY,GAIxCX,GAAS,EACT,IAAK,IAAIY,EAAI,EAAGA,EAAIhU,EAAKgU,IACrB,GAAIJ,EAAaI,KAASV,EAAUU,GAAM,CACtCZ,GAAS,EACT,MAIRE,EAAYM,IACZP,EAEe,MACXD,GAAS,GAOjB,IADA,IAAIa,EAAY,GACPC,EAAI,EAAGA,EAAIlU,EAAKkU,IACrBD,EAAUC,GAAO,GAErB,IAAK,IAAIC,EAAI,EAAGA,EAAIxU,EAAGwU,IAEnBF,EADAhB,EAAUC,EAAYiB,IACHl1B,KAAKyzB,EAAOyB,IAGnC,IADA,IAAIC,EAAkB,GACbC,EAAI,EAAGA,EAAIrU,EAAKqU,IACrBD,EAAgBn1B,KAAKg1B,EAAUI,GAAK,IACpCD,EAAgBn1B,KAAKg1B,EAAUI,GAAKJ,EAAUI,GAAK9zB,OAAO,IAE9D6zB,EAAkBA,EAAgBruB,MAAK,SAAUC,EAAEC,GAAI,OAAOD,EAAEC,KAChE+mB,EAAO/tB,KAAKm1B,EAAgB,IAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAMF,EAAgB7zB,OAAQ+zB,GAAM,EAAG,CACnD,IAAIhnB,EAAI8mB,EAAgBE,GACnB1kB,MAAMtC,KAA8B,IAAvB0f,EAAOle,QAAQxB,IAC7B0f,EAAO/tB,KAAKqO,IAIxB,OAAO0f,GAGPuH,GAAY,CAACxH,QAASA,GAASC,OAAQA,IAEvCwH,GAAU/tB,EAGVguB,GAAW,SAAUzuB,EAAGC,GAGxBD,EAAI,IAAIwuB,GAAQxuB,GAChBC,EAAI,IAAIuuB,GAAQvuB,GAChB,IAAIyuB,EAAK1uB,EAAEmf,YACPwP,EAAK1uB,EAAEkf,YACX,OAAOuP,EAAKC,GAAMD,EAAK,MAASC,EAAK,MAASA,EAAK,MAASD,EAAK,MAGjEE,GAAUnuB,EACV0I,GAAO9K,KAAK8K,KACZ+C,GAAM7N,KAAK6N,IACX5P,GAAM+B,KAAK/B,IACXC,GAAM8B,KAAK9B,IACXoR,GAAQtP,KAAKsP,MACb0O,GAAMhe,KAAKge,IACX3S,GAAMrL,KAAKqL,IACX2E,GAAMhQ,KAAKgQ,IACXwgB,GAAMxwB,KAAKwwB,IACXvwB,GAAKD,KAAKC,GAEVwwB,GAAS,SAAS9uB,EAAGC,EAAG8uB,EAAIC,EAAIC,QACpB,IAAPF,IAAgBA,EAAG,QACZ,IAAPC,IAAgBA,EAAG,QACZ,IAAPC,IAAgBA,EAAG,GAIxB,IAAIC,EAAU,SAASC,GACnB,OAAO,IAAMA,GAAO,EAAI7wB,KAExB8wB,EAAU,SAASC,GACnB,OAAQ,EAAI/wB,GAAK+wB,EAAO,KAE5BrvB,EAAI,IAAI4uB,GAAQ5uB,GAChBC,EAAI,IAAI2uB,GAAQ3uB,GAChB,IAAImB,EAAMxD,MAAMqmB,KAAKjkB,EAAEuN,OACnBoa,EAAKvmB,EAAI,GACTkuB,EAAKluB,EAAI,GACTmuB,EAAKnuB,EAAI,GACTgL,EAAQxO,MAAMqmB,KAAKhkB,EAAEsN,OACrBiiB,EAAKpjB,EAAM,GACXqjB,EAAKrjB,EAAM,GACXsjB,EAAKtjB,EAAM,GACXujB,GAAQhI,EAAK6H,GAAI,EAGjBI,GAFKzmB,GAAK+C,GAAIojB,EAAI,GAAKpjB,GAAIqjB,EAAI,IAC1BpmB,GAAK+C,GAAIujB,EAAI,GAAKvjB,GAAIwjB,EAAI,KACd,EACjBG,EAAI,IAAK,EAAE1mB,GAAK+C,GAAI0jB,EAAM,IAAI1jB,GAAI0jB,EAAM,GAAK1jB,GAAI,GAAI,MACrD4jB,EAAMR,GAAI,EAAEO,GACZE,EAAMN,GAAI,EAAEI,GACZG,EAAM7mB,GAAK+C,GAAI4jB,EAAK,GAAK5jB,GAAIqjB,EAAI,IACjCU,EAAM9mB,GAAK+C,GAAI6jB,EAAK,GAAK7jB,GAAIwjB,EAAI,IACjCQ,GAASF,EAAMC,GAAK,EACpBE,EAAUjB,EAAQvhB,GAAM4hB,EAAIO,IAC5BM,EAAUlB,EAAQvhB,GAAM+hB,EAAIK,IAC5BM,EAAMF,GAAW,EAAIA,EAAUA,EAAU,IACzCG,EAAMF,GAAW,EAAIA,EAAUA,EAAU,IACzCG,EAAQlU,GAAIgU,EAAMC,GAAO,KAAOD,EAAMC,EAAM,KAAK,GAAKD,EAAMC,GAAK,EACjEE,EAAI,EAAI,IAAK9mB,GAAI0lB,EAAQmB,EAAQ,KAAO,IAAK7mB,GAAI0lB,EAAQ,EAAEmB,IAAU,IAAK7mB,GAAI0lB,EAAQ,EAAEmB,EAAQ,IAAM,GAAI7mB,GAAI0lB,EAAQ,EAAEmB,EAAQ,KAChIE,EAAUH,EAAMD,EACpBI,EAAUpU,GAAIoU,IAAY,IAAMA,EAAUH,GAAOD,EAAMI,EAAU,IAAMA,EAAU,IACjFA,EAAU,EAAEtnB,GAAK6mB,EAAIC,GAAK5hB,GAAI+gB,EAAQqB,GAAS,GAC/C,IAAIC,EAASlB,EAAK7H,EACdgJ,EAAUV,EAAMD,EAChBY,EAAK,EAAK,KAAM1kB,GAAIyjB,EAAO,GAAI,GAAIxmB,GAAK,GAAK+C,GAAIyjB,EAAO,GAAI,IAC5DkB,EAAK,EAAI,KAAMX,EACfY,EAAK,EAAI,KAAMZ,EAAMM,EACrBO,EAAa,GAAGlC,IAAK3iB,IAAKqkB,EAAQ,KAAK,GAAI,IAE3CS,GADK,EAAE7nB,GAAK+C,GAAIgkB,EAAO,IAAIhkB,GAAIgkB,EAAO,GAAKhkB,GAAI,GAAI,KAC1CmC,GAAI,EAAE+gB,EAAQ2B,IACvB7I,EAAS/e,GAAK+C,GAAIwkB,GAAQ3B,EAAG6B,GAAK,GAAK1kB,GAAIykB,GAAS3B,EAAG6B,GAAK,GAAK3kB,GAAIukB,GAASxB,EAAG6B,GAAK,GAAKE,GAAIL,GAAS3B,EAAG6B,KAAMJ,GAASxB,EAAG6B,KACjI,OAAOv0B,GAAI,EAAGD,GAAI,IAAK4rB,KAGvB+I,GAAUxwB,EAGVywB,GAAW,SAASlxB,EAAGC,EAAGJ,QACZ,IAATA,IAAkBA,EAAK,OAI5BG,EAAI,IAAIixB,GAAQjxB,GAChBC,EAAI,IAAIgxB,GAAQhxB,GAChB,IAAIyuB,EAAK1uB,EAAE0e,IAAI7e,GACX8uB,EAAK1uB,EAAEye,IAAI7e,GACXsxB,EAAS,EACb,IAAK,IAAI92B,KAAKq0B,EAAI,CACd,IAAI5H,GAAK4H,EAAGr0B,IAAM,IAAMs0B,EAAGt0B,IAAM,GACjC82B,GAAUrK,EAAEA,EAEhB,OAAOzoB,KAAK8K,KAAKgoB,IAGjBtwB,GAAQJ,EAER2wB,GAAQ,WAER,IADA,IAAI1zB,EAAO,GAAI+B,EAAMnF,UAAUC,OACvBkF,KAAQ/B,EAAM+B,GAAQnF,UAAWmF,GAEzC,IAEI,OADA,IAAKkB,SAAStD,UAAUuD,KAAK1G,MAAO2G,GAAO,CAAE,MAAOC,OAAQpD,MACrD,EACT,MAAOoH,GACL,OAAO,IAKXusB,GAAWrwB,EAEXipB,GAAQ9E,GAERmM,GAAS,CACZC,KAAM,WAAkB,OAAOtH,GAAM,CAACoH,GAAShsB,IAAI,IAAI,EAAE,IAAKgsB,GAAShsB,IAAI,IAAI,GAAG,OAClFmsB,IAAK,WAAiB,OAAOvH,GAAM,CAAC,OAAO,OAAO,OAAO,SAASpqB,KAAK,SAoBpE4xB,GAAc,CAEdC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAIlGC,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACzHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAIrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACtFC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChIC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClIC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvFC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAI7Fx5B,GAAI,EAAG8F,GAAOxG,OAAOD,KAAK+3B,IAAcp3B,GAAI8F,GAAK5F,OAAQF,IAAK,EAAG,CACtE,IAAIK,GAAMyF,GAAK9F,IAEfo3B,GAAY/2B,GAAIwC,eAAiBu0B,GAAY/2B,IAGjD,IAAIo5B,GAAgBrC,GAEhB71B,GAASoF,EAyEb,OAzBApF,GAAOkoB,QAAUA,GACjBloB,GAAO0tB,OAASU,GAChBpuB,GAAOuuB,MAAQa,GACfpvB,GAAO0vB,UAAYA,GACnB1vB,GAAO0kB,IAAM1kB,GAAO8jB,YAAcQ,GAClCtkB,GAAOuwB,OAASC,GAChBxwB,GAAOquB,MAAQ9E,GAGfvpB,GAAOmrB,QAAUwH,GAAUxH,QAC3BnrB,GAAO6yB,SAAWA,GAClB7yB,GAAOkzB,OAASA,GAChBlzB,GAAOs1B,SAAWA,GAClBt1B,GAAOorB,OAASuH,GAAUvH,OAC1BprB,GAAOw1B,MAAQA,GAGfx1B,GAAO01B,OAASA,GAGhB11B,GAAOmoB,OAAStU,GAChB7T,GAAOwqB,OAAS0N,GAEAl4B,GA/7GSm4B"},"name":"static/chunks/0629c767be149045eb89ce07395b533608886ff0.c7ed2a5114598b932e39.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[8],{\n\n/***/ \"3mUM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rePB\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DEFAULT = {\n  colorPrimary: \"#e0115f\",\n  colorSecondary: \"blue\",\n  colorNeutral: \"#ddd\",\n  colorError: \"#aa0000\",\n  colorError2: \"#ffaaaa\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"violet\"],\n  cardHeaderSecondaryGradientColors: [\"#ff66cc\", \"pink\"],\n  turnStatusColors: {\n    COMPLETED: \"green\",\n    CANCELLED: \"orange\",\n    ABSENT: \"red\"\n  }\n};\nvar THEMES = [_objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#073763\",\n  colorSecondary: \"#f44336\",\n  colorNeutral: \"#d6d9ed\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#073763\", \"#839bb1\"],\n  cardHeaderSecondaryGradientColors: [\"#a30000\", \"#db4c4c\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"violet\",\n  colorError: \"orange\"\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"orange\",\n  colorSecondary: \"brown\",\n  cardHeaderPrimaryGradientColors: [\"orange\", \"yellow\"],\n  cardHeaderSecondaryGradientColors: [\"brown\", \"orange\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"turquoise\",\n  colorSecondary: \"orangeRed\",\n  cardHeaderPrimaryGradientColors: [\"turquoise\", \"cyan\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"magenta\",\n  colorNeutral: \"#f6d1de\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"#c8a2c8\"],\n  cardHeaderSecondaryGradientColors: [\"magenta\", \"pink\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"#C62828\", \"red\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"red\",\n  colorSecondary: \"purple\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"yellow\", \"red\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"],\n  turnStatusColors: {\n    COMPLETED: \"black\",\n    CANCELLED: \"pink\",\n    ABSENT: \"violet\"\n  }\n})]; //PARA QUE FUNCIONEN LAS BOX SHADOWS, LOS COLORES DEBERIAN ESTAR EN HEXA\n\nvar chroma = __webpack_require__(\"YUnZ\");\n\nfunction colorToHex(color) {\n  var colorObj = chroma(color);\n  return colorObj.hex();\n}\n\nTHEMES.forEach(function (elem, index) {\n  THEMES[index] = _objectSpread(_objectSpread({}, THEMES[index]), {}, {\n    colorPrimary: colorToHex(elem.colorPrimary),\n    colorSecondary: colorToHex(elem.colorSecondary),\n    colorNeutral: colorToHex(elem.colorNeutral),\n    colorError: colorToHex(elem.colorError),\n    colorError2: colorToHex(elem.colorError2),\n    colorSuccess: colorToHex(elem.colorSuccess),\n    cardHeaderPrimaryGradientColors: [colorToHex(elem.cardHeaderPrimaryGradientColors[0]), colorToHex(elem.cardHeaderPrimaryGradientColors[1])],\n    cardHeaderSecondaryGradientColors: [colorToHex(elem.cardHeaderSecondaryGradientColors[0]), colorToHex(elem.cardHeaderSecondaryGradientColors[1])]\n  });\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (THEMES);\n\n/***/ }),\n\n/***/ \"YUnZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    undefined;\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:\\DATOS\\THISYS\\SISTEMA\\PORTAL WEB\\Proyecto-Salud\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-babel-loader.js??ref--4!C:\\DATOS\\THISYS\\SISTEMA\\PORTAL WEB\\Proyecto-Salud\\constants\\THEMES.js","C:\\DATOS\\THISYS\\SISTEMA\\PORTAL WEB\\Proyecto-Salud\\node_modules\\chroma-js\\chroma.js"],"names":[],"mappings":";;;;;;AAAA;AAAwE;;AAExE,0CAA0C,gCAAgC,oCAAoC,oDAAoD,8DAA8D,gEAAgE,EAAE,EAAE,gCAAgC,EAAE,aAAa;;AAEnV,gCAAgC,gBAAgB,sBAAsB,OAAO,uDAAuD,aAAa,uDAAuD,CAAC,iGAAe,2BAA2B,EAAE,EAAE,EAAE,6CAA6C,2EAA2E,EAAE,OAAO,iDAAiD,kFAAkF,EAAE,EAAE,EAAE,EAAE,eAAe;;AAEphB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iCAAiC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG;;AAEJ,aAAa,mBAAO,CAAC,MAAW;;AAEhC;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACc,+DAAM,E;;;;;;;AChGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAA4D;AAChE,IAAI,SACqG;AACzG,CAAC,sBAAsB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB,MAAM;AAC3B;AACA,iDAAiD,qBAAqB;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2HAA2H,qBAAqB;AAChJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA;AACA,6BAA6B,iCAAiC,EAAE;AAChE,0BAA0B,mBAAmB,EAAE;AAC/C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,aAAa;AAC3C;AACA,0CAA0C,8BAA8B;AACxE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2EAA2E,kBAAkB,EAAE;AAC/F;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;;AAEA;AACA,2BAA2B,OAAO;AAClC;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,mCAAmC,iBAAiB;AACpD;;AAEA;AACA,6CAA6C,mBAAmB;AAChE;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uBAAuB,2BAA2B;AAClD,4BAA4B,+BAA+B;AAC3D,4BAA4B,+BAA+B;;AAE3D;AACA,oBAAoB,UAAU;AAC9B,mDAAmD,wBAAwB;AAC3E;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B,gCAAgC,YAAY;AAC5C,gCAAgC,YAAY;AAC5C;AACA,qBAAqB,mCAAmC;AACxD;AACA,qBAAqB,WAAW;AAChC;AACA,qBAAqB,+CAA+C;AACpE;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B,qBAAqB;AACjD,4BAA4B,uBAAuB;AACnD,4BAA4B,uBAAuB;AACnD;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B,OAAO;AACnC,0BAA0B,UAAU;AACpC,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC,EAAE,aAAa,EAAE;AACnD,mCAAmC,EAAE,aAAa,EAAE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA,sBAAsB,UAAU;AAChC,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,qBAAqB;AAClD,6BAA6B,uBAAuB;AACpD,6BAA6B,uBAAuB;AACpD;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B,OAAO;AACnC,0BAA0B,UAAU;AACpC,wBAAwB,UAAU;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F;AAC1F,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG,kGAAkG;AAClG;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,kBAAkB;AACtD;AACA;;AAEA;AACA,qCAAqC,wBAAwB;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mEAAmE;AACnE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC,2BAA2B;AACnE,wCAAwC,qCAAqC;;AAE7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE,EAAE;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,iBAAiB;AACpE;;AAEA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,6BAA6B;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbyBAAyB,eAAe;AACxC;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0BAA0B;AAClE,wCAAwC,0BAA0B;AAClE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,yDAAyD,YAAY;AACrE,SAAS;AACT;AACA,yDAAyD,YAAY;AACrE,SAAS;AACT;AACA;;AAEA,gCAAgC,gCAAgC;AAChE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,qDAAqD,UAAU,EAAE,EAAE;AAC1F;AACA,mDAAmD,cAAc,EAAE;AACnE,wCAAwC,iBAAiB,EAAE;AAC3D;AACA,0CAA0C,uBAAuB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,gBAAgB;AACvC;AACA;AACA,iCAAiC,YAAY;AAC7C,oCAAoC,YAAY;AAChD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,UAAU;AACpD,uCAAuC,UAAU;;AAEjD;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG,sGAAsG;AACtG;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,mBAAmB;AACvD,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA,+BAA+B,sBAAsB;;AAErD;;AAEA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;;AAEA,sCAAsC,yBAAyB;;AAE/D;;AAEA;;AAEA;AACA;AACA,kCAAkC,kBAAkB,EAAE,OAAO,UAAU;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;;AAEA;AACA;AACA,aAAa;AACb,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA,0DAA0D,4BAA4B,EAAE;AACxF,2DAA2D,mCAAmC,EAAE;AAChG,0DAA0D,wBAAwB,EAAE;AACpF;AACA,mDAAmD,UAAU;AAC7D;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,8CAA8C,UAAU;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,aAAa;AACpD;;AAEA;AACA;;AAEA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,0EAA0E,2CAA2C,EAAE;;AAEvH,aAAa,OAAO;AACpB;AACA;AACA;AACA,0EAA0E,yBAAyB;AACnG;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,aAAa,EAAE;AAClE;;AAEA;AACA,kDAAkD,iBAAiB,EAAE;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,uBAAuB,EAAE;AACnE;AACA;AACA,+CAA+C,gBAAgB,EAAE;AACjE;AACA,uDAAuD,4CAA4C,EAAE;AACrG;AACA;AACA,SAAS;AACT;AACA,iDAAiD,gBAAgB,EAAE;AACnE;AACA,uDAAuD,gFAAgF,EAAE;AACzI;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAiD,gBAAgB,EAAE;AACnE;AACA,uDAAuD,8HAA8H,EAAE;AACvL;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C,gBAAgB,EAAE;AAC9D;AACA;AACA;AACA;AACA,uDAAuD,2CAA2C,2EAA2E,EAAE,KAAK,EAAE;AACtL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA,UAAU;;AAEV,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV,+BAA+B,UAAU;AACzC,mCAAmC,oBAAoB;AACvD,iCAAiC,sBAAsB;AACvD,kCAAkC,sBAAsB;AACxD,iCAAiC,0CAA0C;AAC3E,kCAAkC,qFAAqF;AACvH,+BAA+B,4CAA4C;AAC3E;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;;AAEA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;;AAEA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,0BAA0B;;AAEzD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C;AACA;AACA,SAAS;;AAET;;AAEA,yCAAyC,6BAA6B;;AAEtE;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD,YAAY,EAAE;;AAEpE,wBAAwB,kBAAkB;;AAE1C;;AAEA,uCAAuC;AACvC;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA,kEAAkE,YAAY,EAAE;AAChF;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,4BAA4B,kEAAkE;AAC9F,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,iBAAiB;AACrE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;AAWA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,CAAC","file":"x","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DEFAULT = {\n  colorPrimary: \"#e0115f\",\n  colorSecondary: \"blue\",\n  colorNeutral: \"#ddd\",\n  colorError: \"#aa0000\",\n  colorError2: \"#ffaaaa\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"violet\"],\n  cardHeaderSecondaryGradientColors: [\"#ff66cc\", \"pink\"],\n  turnStatusColors: {\n    COMPLETED: \"green\",\n    CANCELLED: \"orange\",\n    ABSENT: \"red\"\n  }\n};\nvar THEMES = [_objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#073763\",\n  colorSecondary: \"#f44336\",\n  colorNeutral: \"#d6d9ed\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#073763\", \"#839bb1\"],\n  cardHeaderSecondaryGradientColors: [\"#a30000\", \"#db4c4c\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"violet\",\n  colorError: \"orange\"\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"orange\",\n  colorSecondary: \"brown\",\n  cardHeaderPrimaryGradientColors: [\"orange\", \"yellow\"],\n  cardHeaderSecondaryGradientColors: [\"brown\", \"orange\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"turquoise\",\n  colorSecondary: \"orangeRed\",\n  cardHeaderPrimaryGradientColors: [\"turquoise\", \"cyan\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"magenta\",\n  colorNeutral: \"#f6d1de\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"#c8a2c8\"],\n  cardHeaderSecondaryGradientColors: [\"magenta\", \"pink\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"#C62828\", \"red\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"red\",\n  colorSecondary: \"purple\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"yellow\", \"red\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"],\n  turnStatusColors: {\n    COMPLETED: \"black\",\n    CANCELLED: \"pink\",\n    ABSENT: \"violet\"\n  }\n})]; //PARA QUE FUNCIONEN LAS BOX SHADOWS, LOS COLORES DEBERIAN ESTAR EN HEXA\n\nvar chroma = require('chroma-js');\n\nfunction colorToHex(color) {\n  var colorObj = chroma(color);\n  return colorObj.hex();\n}\n\nTHEMES.forEach(function (elem, index) {\n  THEMES[index] = _objectSpread(_objectSpread({}, THEMES[index]), {}, {\n    colorPrimary: colorToHex(elem.colorPrimary),\n    colorSecondary: colorToHex(elem.colorSecondary),\n    colorNeutral: colorToHex(elem.colorNeutral),\n    colorError: colorToHex(elem.colorError),\n    colorError2: colorToHex(elem.colorError2),\n    colorSuccess: colorToHex(elem.colorSuccess),\n    cardHeaderPrimaryGradientColors: [colorToHex(elem.cardHeaderPrimaryGradientColors[0]), colorToHex(elem.cardHeaderPrimaryGradientColors[1])],\n    cardHeaderSecondaryGradientColors: [colorToHex(elem.cardHeaderSecondaryGradientColors[0]), colorToHex(elem.cardHeaderSecondaryGradientColors[1])]\n  });\n});\nexport default THEMES;","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n"]}}