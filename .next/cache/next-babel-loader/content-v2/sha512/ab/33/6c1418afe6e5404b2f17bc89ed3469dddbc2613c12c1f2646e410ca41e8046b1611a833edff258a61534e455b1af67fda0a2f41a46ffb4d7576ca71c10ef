{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { drawerWidth, transition, container } from \"assets/jss/nextjs-material-dashboard.js\";\nimport { grayColor, primaryColor } from \"../../nextjs-material-dashboard\";\nimport chroma from \"chroma-js\";\n\nvar appStyle = function appStyle(theme) {\n  return {\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    },\n    wrapper: {\n      position: \"relative\",\n      top: \"0\",\n      height: \"100vh\"\n    },\n    mainPanel: _objectSpread(_objectSpread({\n      overflow: \"auto\",\n      position: \"relative\",\n      float: \"right\"\n    }, transition), {}, {\n      maxHeight: \"100%\",\n      width: \"100%\",\n      overflowScrolling: \"touch\",\n      justifyContent: \"center\",\n      marginTop: \"20px\"\n    }),\n    content: {\n      marginTop: \"10px\",\n      padding: \"30px 15px\",\n      minHeight: \"calc(100vh - 123px)\"\n    },\n    container: _objectSpread(_objectSpread({}, container), {}, {\n      justifyContent: \"center\"\n    }),\n    map: {\n      marginTop: \"10px\"\n    },\n    select: {\n      '&:before': {\n        borderBottom: \"1px solid \" + grayColor[4]\n      },\n      '&:after': {\n        borderBottom: function borderBottom(props) {\n          return \"2px solid \" + props.colorPrimary;\n        }\n      },\n      '&:not(.Mui-disabled):hover::before': {\n        borderColor: function borderColor(props) {\n          return props.colorPrimary;\n        }\n      }\n    },\n    selectRoot: {\n      //...other styles\n      '&:focus': {\n        backgroundColor: 'transparent'\n      }\n    },\n    icon: {\n      fill: 'white'\n    },\n    root: {\n      color: 'white'\n    },\n    underline: {\n      '&:after': {\n        borderColor: \"red\"\n      }\n    },\n    label: {\n      '&.Mui-focused': {\n        color: function color(props) {\n          return props.colorPrimary;\n        }\n      }\n    },\n    stepperRoot: {\n      \"width\": \"100%\",\n      \"padding\": \"10px 5px\",\n      \"@media (width < 500px)\": {\n        flexDirection: \"column\",\n        gap: \"5px\",\n        padding: 0,\n        paddingBottom: \"5px\"\n      }\n    },\n    animate: {\n      \"& span\": {\n        fontSize: \"0.8rem\",\n        animation: \"$colorChangeLabel 5s normal\",\n        color: function color(props) {\n          return props.colorError;\n        }\n      },\n      pointerEvents: \"none\",\n      \"& svg path\": {\n        animation: \"$colorChangePath 5s normal\",\n        color: function color(props) {\n          return props.colorError;\n        }\n      }\n    },\n    static: {\n      \"& span\": {\n        fontSize: \"0.8rem\"\n      },\n      pointerEvents: \"none\",\n      \"& .Mui-checked svg path\": {\n        animation: \"none\",\n        color: function color(props) {\n          return props.colorPrimary;\n        }\n      },\n      \"& .MuiButtonBase-root:hover\": {\n        color: function color(props) {\n          return props.colorPrimary;\n        },\n        backgroundColor: function backgroundColor(props) {\n          try {\n            return chroma(props.colorPrimary).alpha(0.2);\n          } catch (_unused) {\n            return \"transparent\";\n          }\n        }\n      },\n      \"& .MuiButtonBase-root\": {\n        color: function color(props) {\n          return props.colorPrimary;\n        }\n      },\n      '@media (hover: none)': {\n        \"& .MuiButtonBase-root:hover\": {\n          backgroundColor: \"transparent !important\"\n        },\n        \"& .MuiButtonBase-root:active\": {\n          color: function color(props) {\n            return props.colorPrimary;\n          },\n          backgroundColor: function backgroundColor(props) {\n            try {\n              return chroma(props.colorPrimary).alpha(0.2);\n            } catch (_unused2) {\n              return \"transparent\";\n            }\n          }\n        }\n      }\n    },\n    '@keyframes colorChangePath': {\n      \"0%\": {\n        fill: \"currentColor\"\n      },\n      \"100%\": {\n        fill: \"#0000008a\"\n      }\n    },\n    '@keyframes colorChangeLabel': {\n      \"0%\": {},\n      \"100%\": {\n        color: \"rgba(0, 0, 0, 0.87);\"\n      }\n    },\n    dialogActions: {\n      \"justifyContent\": \"space-around\"\n    },\n    vicharacterSuccess: {\n      color: function color(props) {\n        return props.colorSuccess;\n      },\n      borderColor: function borderColor(props) {\n        return props.colorSuccess;\n      }\n    },\n    vicharacterError: {\n      color: function color(props) {\n        return props.colorError;\n      },\n      borderColor: function borderColor(props) {\n        return props.colorError;\n      }\n    },\n    hrPrimaryColored: {\n      borderTop: function borderTop(props) {\n        return \"1px solid \" + props.colorPrimary;\n      }\n    },\n    turnStatusCompleted: {\n      color: function color(props) {\n        var _props$turnStatusColo;\n\n        return (_props$turnStatusColo = props.turnStatusColors) === null || _props$turnStatusColo === void 0 ? void 0 : _props$turnStatusColo.COMPLETED;\n      }\n    },\n    turnStatusCancelled: {\n      color: function color(props) {\n        var _props$turnStatusColo2;\n\n        return (_props$turnStatusColo2 = props.turnStatusColors) === null || _props$turnStatusColo2 === void 0 ? void 0 : _props$turnStatusColo2.CANCELLED;\n      }\n    },\n    turnStatusAbsent: {\n      color: function color(props) {\n        var _props$turnStatusColo3;\n\n        return (_props$turnStatusColo3 = props.turnStatusColors) === null || _props$turnStatusColo3 === void 0 ? void 0 : _props$turnStatusColo3.ABSENT;\n      }\n    },\n    colorPrimary: {\n      color: function color(props) {\n        return props.colorPrimary;\n      }\n    },\n    colorSecondary: {\n      color: function color(props) {\n        return props.colorSecondary;\n      }\n    },\n    fillPrimary: {\n      fill: function fill(props) {\n        return props.colorPrimary;\n      }\n    },\n    fillSecondary: {\n      fill: function fill(props) {\n        return props.colorSecondary;\n      }\n    },\n    bgPrimary: {\n      background: function background(props) {\n        return props.colorPrimary;\n      }\n    },\n    bgSecondary: {\n      background: function background(props) {\n        return props.colorSecondary;\n      }\n    }\n  };\n};\n\nexport default appStyle;","map":null,"metadata":{},"sourceType":"module"}