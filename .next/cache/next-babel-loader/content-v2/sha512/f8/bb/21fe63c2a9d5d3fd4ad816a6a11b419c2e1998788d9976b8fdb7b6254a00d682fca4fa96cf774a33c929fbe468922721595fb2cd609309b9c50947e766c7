{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\DATOS\\\\THISYS\\\\SISTEMA\\\\PORTAL WEB\\\\Proyecto-Salud\\\\pages\\\\login\\\\[consultorioId]\\\\register.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport Login from \"../../../layouts/Login\";\nimport { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText, MenuItem, NativeSelect, Select, Step, StepContent, StepLabel, Stepper, TextField, Typography } from \"@material-ui/core\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport styles from \"assets/jss/nextjs-material-dashboard/layouts/loginStyle.js\";\nimport { ThemeContext } from \"../../../context/ThemeContextProvider\";\nimport { useRouter } from \"next/router\";\nimport THEMES from \"../../../constants/THEMES\";\nimport { logIn } from \"../../../services/userAuth.js\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport CustomPasswordInput from \"../../../components/CustomInput/CustomPasswordInput\";\nimport usePasswordConfirmation from \"../../../hooks/usePasswordConfirmation\";\nimport { useRef } from \"react\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport SendIcon from '@material-ui/icons/Send';\nimport VerificationInput from \"react-verification-input\";\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\nimport { resetFocus } from \"../../../utils/focus\";\nimport { validate, validateOTP } from \"../../../services/register\";\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\nimport { USER_STATUS_MESSAGE, USER_STATUS_TYPE } from \"../../../constants/TYPES\";\nimport { patientsPut } from \"../../../services/patients.js\";\n\nfunction OTPDialog({\n  open,\n  setOpen,\n  onClose,\n  onConfirm,\n  setActiveStep,\n  consultorioId,\n  userId,\n  setFormData\n}) {\n  _s();\n\n  const classes = useTheme(styles);\n  const {\n    0: resendDisabled,\n    1: setResendDisabled\n  } = useState(false);\n  const {\n    0: codeDisabled,\n    1: setCodeDisabled\n  } = useState(false);\n  const {\n    0: code,\n    1: setCode\n  } = useState(\"\");\n  const {\n    0: codeState,\n    1: setCodeState\n  } = useState(\"\");\n  const confirmRef = useRef();\n\n  const handleCancel = () => {\n    handleClose();\n    onClose();\n  };\n\n  const handleEnterKey = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleConfirm();\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (!document.getElementById(\"verifInput\").reportValidity()) {\n      setCodeState(\"Error\");\n      return;\n    }\n\n    const validateResponse = await validateOTP(userId, code, consultorioId, await GLOBAL_GET_TOKEN());\n\n    if (validateResponse.success) {\n      setCodeDisabled(true);\n      setCodeState(\"Success\");\n      setFormData(prev => _objectSpread(_objectSpread(_objectSpread({}, prev), validateResponse.data), {}, {\n        birthDate: new Date(validateResponse.data.birthDate).toISOString().slice(0, 10)\n      }));\n      setTimeout(() => {\n        setActiveStep(prev => prev + 1);\n        setOpen(false);\n      }, 1500);\n      setTimeout(() => {\n        setCode(\"\");\n        setCodeDisabled(false);\n        setCodeState(\"\");\n      }, 1600);\n    } else {\n      setCodeState(\"Error\");\n    }\n  };\n\n  const handleResend = () => {\n    setResendDisabled(true);\n    setTimeout(() => {\n      setResendDisabled(false);\n    }, 3000);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setResendDisabled(false);\n    setCodeDisabled(false);\n    setCode(\"\");\n    setCodeState(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    onKeyDown: handleEnterKey,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        textAlign: \"center\",\n        paddingBottom: \"0\"\n      },\n      children: \"Verificar c\\xF3digo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Se envi\\xF3 un c\\xF3digo al mail ingresado, ingrese y confirme para validar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VerificationInput, {\n        validChars: \"0-9\",\n        inputProps: {\n          inputMode: \"numeric\",\n          minLength: 6,\n          required: true,\n          id: \"verifInput\",\n          autoComplete: \"off\",\n          disabled: codeDisabled\n        },\n        value: code,\n        onChange: value => {\n          if (value.length < 7) setCode(value);\n          setCodeState(\"\");\n        },\n        autoFocus: true,\n        classNames: {\n          character: classes[\"vicharacter\" + codeState]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MUIButton, {\n          variant: \"outlined\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 50\n          }, this),\n          disabled: resendDisabled,\n          onClick: handleResend,\n          children: \"Reenviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      classes: {\n        root: classes.dialogActions\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleConfirm,\n        color: \"primary\",\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OTPDialog, \"PYn6UJ/cBN4UEubW0XG3HnwfgS0=\", false, function () {\n  return [useTheme];\n});\n\n_c = OTPDialog;\n\nfunction Register({\n  consultorioId,\n  healthCareList\n}) {\n  _s2();\n\n  //TODO: FIX\n  // throw new Error();\n  const router = useRouter();\n  const classes = useTheme(styles);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(\"\");\n  const messageDialog = useContext(MessageDialogContext);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setAnimating(false);\n    setTimeout(() => {\n      setAnimating(true);\n    }, 100);\n    clearInterval(timeoutId.current);\n    timeoutId.current = setTimeout(() => {\n      setAnimating(false);\n    }, 5100);\n    console.log({\n      min6,\n      equal\n    });\n\n    if (min6 && equal) {\n      const putResponse = await patientsPut(consultorioId, await GLOBAL_GET_TOKEN(), formData);\n\n      if (!putResponse.success) {\n        console.log(putResponse);\n      }\n\n      console.log(\"in\");\n    }\n  };\n\n  const handleLoginRedirect = () => {\n    const currentPath = router.asPath; // get the current URL path\n\n    const newPath = currentPath.replace(new RegExp(\"/register\", 'g'), '');\n    router.push(newPath);\n  };\n\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    \"tipoDoc\": 1,\n    \"dni\": \"\",\n    \"cellNumber\": \"\",\n    \"email\": \"\",\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"medicalCareId\": \"\",\n    \"coberturaParticular\": false,\n    \"sexo\": \"\",\n    \"address\": \"\",\n    \"birthDate\": new Date().toISOString().slice(0, 10),\n    \"password\": \"\",\n    \"password2\": \"\"\n  });\n  console.log(formData);\n  /* HANDLE COBERTURAS */\n\n  const coberturaParticularValue = useMemo(() => {\n    return healthCareList.find(healthCare => healthCare.name.toLowerCase() === \"Particular\".toLowerCase()).id;\n  }, [healthCareList]);\n\n  const toggleCoberturaParticular = e => {\n    resetFocus();\n\n    if (e.target.checked) {\n      setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        medicalCareId: coberturaParticularValue,\n        coberturaParticular: true\n      }));\n    } else {\n      setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        medicalCareId: \"\",\n        coberturaParticular: false\n      }));\n    }\n\n    setErrorMsg(\"\");\n  };\n  /* HANDLE COBERTURAS */\n\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    }));\n    setErrorMsg(\"\");\n  };\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = async () => {\n    const form = document.querySelector(\"form\");\n    const allValid = form.checkValidity();\n\n    if (allValid) {\n      if (activeStep === 0) {\n        const validateResponse = await validate(formData.tipoDoc, Number(formData.dni), formData.email, formData.cellNumber, consultorioId, await GLOBAL_GET_TOKEN());\n        console.log(validateResponse);\n\n        if (!validateResponse.success) {\n          messageDialog.defaultOpen();\n          return;\n        }\n\n        const data = validateResponse.data;\n\n        switch (data.estadoId) {\n          case USER_STATUS_TYPE[\"NO COINCIDE\"]:\n          case USER_STATUS_TYPE[\"YA REGISTRADO\"]:\n            {\n              messageDialog.warningOpen(USER_STATUS_MESSAGE[data.estadoId], \"Error de Registro\");\n              return;\n            }\n        }\n\n        if (!data.otpEnviado) {\n          messageDialog.warningOpen(USER_STATUS_MESSAGE[\"OTP ERROR\"], \"Error de Registro\");\n          return;\n        }\n\n        setUserId(data.pacienteId);\n        handleOpen();\n      } else {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n      }\n    } else {\n      form.reportValidity();\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleEnterKey = event => {\n    if (event.key === \"Enter\" && !open) {\n      if (activeStep === 2) handleSubmit(event);else handleNext();\n    }\n  };\n  /* CONFIRMACION PASSWORD */\n\n\n  const {\n    min6,\n    min1Upper,\n    min1Lower,\n    min1Number,\n    equal,\n    passwordValid\n  } = usePasswordConfirmation(formData.password, formData.password2);\n  const {\n    0: animating,\n    1: setAnimating\n  } = useState(false);\n  const timeoutId = useRef();\n  /* CONFIRMACION PASSWORD */\n\n  /* DIALOG VERIFICACION */\n\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleOTPConfirm = () => {};\n  /* DIALOG VERIFICACION */\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    action: \"/admin/dashboard\",\n    onSubmit: handleSubmit,\n    autoComplete: \"on\",\n    onKeyDown: handleEnterKey,\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      style: {\n        width: \"100%\",\n        height: \"85vh\",\n        alignItems: \"center\"\n      },\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 10,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Registro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Stepper, {\n                activeStep: activeStep,\n                orientation: \"horizontal\",\n                classes: {\n                  root: classes.stepperRoot\n                },\n                children: [/*#__PURE__*/_jsxDEV(Step, {\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                    children: \"Documentaci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this)\n                }, \"Documentaci\\xF3n\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Step, {\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                    children: \"Datos Personales\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this)\n                }, \"Datos Personales\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Step, {\n                  children: /*#__PURE__*/_jsxDEV(StepLabel, {\n                    children: \"Seguridad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 21\n                  }, this)\n                }, \"Seguridad\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.label,\n                      variant: \"standard\",\n                      htmlFor: \"uncontrolled-native\",\n                      children: \"Tipo de Documento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      className: classes.select,\n                      classes: {\n                        root: classes.selectRoot\n                      },\n                      inputProps: {\n                        name: 'tipoDoc',\n                        key: 'tipoDoc',\n                        value: formData.tipoDoc,\n                        id: 'uncontrolled-native',\n                        required: true,\n                        onChange: handleChange\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 1,\n                        selected: true,\n                        children: \"DNI\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 2,\n                        children: \"CI\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 3,\n                        children: \"Pasaporte\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 25\n                    }, this)]\n                  }, \"tipoDocForm\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Nro. de Doc.\",\n                    id: \"dni\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      type: \"number\",\n                      name: 'dni',\n                      key: 'dni',\n                      value: formData.dni,\n                      id: \"dni\",\n                      required: true,\n                      autoComplete: \"dni\",\n                      onChange: handleChange\n                    }\n                  }, \"dniCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Celular\",\n                    id: \"cellNumber\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"cellNumber\",\n                      id: \"cellNumber\",\n                      key: \"cellNumber\",\n                      value: formData.cellNumber,\n                      required: true,\n                      type: \"tel\",\n                      autoComplete: \"cellNumber\",\n                      onChange: handleChange\n                    }\n                  }, \"cellNumberCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"E-mail\",\n                    id: \"email\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"email\",\n                      id: \"email\",\n                      key: \"email\",\n                      type: \"email\",\n                      value: formData.email,\n                      required: true,\n                      autoComplete: \"email\",\n                      onChange: handleChange\n                    }\n                  }, \"emailCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    className: \"formHelper\",\n                    children: \"Se enviar\\xE1 un mail a esta direcci\\xF3n para verificaci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: errorMsg ? \"red\" : \"transparent\",\n                      margin: \"0\",\n                      transition: \"all 0.6s\",\n                      userSelect: \"none\"\n                    },\n                    children: errorMsg ? errorMsg : \"Esto deberia ocupar la misma longitud que el error mas largo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Apellido\",\n                    id: \"lastName\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: 'lastName',\n                      id: \"lastName\",\n                      key: \"lastName\",\n                      value: formData.lastName,\n                      required: true,\n                      autoComplete: \"lastName\",\n                      onChange: handleChange\n                    }\n                  }, \"lastNameCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Nombre\",\n                    id: \"firstName\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"firstName\",\n                      id: \"firstName\",\n                      key: \"firstName\",\n                      value: formData.firstName,\n                      required: true,\n                      autoComplete: \"firstName\",\n                      onChange: handleChange\n                    }\n                  }, \"firstNameCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.label,\n                      variant: \"standard\",\n                      htmlFor: \"uncontrolled-native\",\n                      children: \"Cobertura\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, formData.medicalCareId === coberturaParticularValue ? {\n                      style: {\n                        pointerEvents: \"none\"\n                      },\n                      readOnly: true\n                    } : {}), {}, {\n                      className: classes.select,\n                      classes: {\n                        root: classes.selectRoot\n                      },\n                      inputProps: {\n                        name: 'medicalCareId',\n                        key: 'medicalCareId',\n                        value: formData.medicalCareId,\n                        id: 'uncontrolled-native',\n                        required: true,\n                        onChange: handleChange\n                      },\n                      children: healthCareList.map(healthCare => {\n                        if (healthCare.id === coberturaParticularValue) {\n                          return /*#__PURE__*/_jsxDEV(MenuItem, {\n                            style: {\n                              display: \"none\"\n                            },\n                            value: healthCare.id,\n                            children: healthCare.name\n                          }, \"healthcare\" + healthCare.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 553,\n                            columnNumber: 35\n                          }, this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: healthCare.id,\n                            children: healthCare.name\n                          }, \"healthcare\" + healthCare.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 558,\n                            columnNumber: 35\n                          }, this);\n                        }\n                      })\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    style: {\n                      pointerEvents: \"all\"\n                    },\n                    onChange: toggleCoberturaParticular,\n                    className: classes.static,\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      size: \"medium\",\n                      checked: formData.coberturaParticular\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 149\n                    }, this),\n                    label: \"Poseo cobertura particular (Seleccionar casilla si no encuentra su cobertura listada)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Sexo\",\n                    id: \"sexo\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"sexo\",\n                      id: \"sexo\",\n                      key: \"sexo\",\n                      value: formData.sexo,\n                      required: true,\n                      autoComplete: \"sexo\",\n                      onChange: handleChange\n                    }\n                  }, \"sexoCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Fecha de nacimiento\",\n                    id: \"birthDate\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"birthDate\",\n                      id: \"birthDate\",\n                      key: \"birthDate\",\n                      value: formData.birthDate,\n                      type: \"date\",\n                      required: true,\n                      // autoComplete: \"birthDate\",\n                      onChange: handleChange\n                    },\n                    moreInputProps: {\n                      min: new Date(\"1850-01-01\").toISOString().split(\"T\")[0],\n                      max: new Date().toISOString().split(\"T\")[0]\n                    }\n                  }, \"bdCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"Domicilio\",\n                    id: \"address\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"address\",\n                      id: \"address\",\n                      key: \"address\",\n                      value: formData.address,\n                      required: true,\n                      autoComplete: \"address\",\n                      onChange: handleChange\n                    }\n                  }, \"addressCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomPasswordInput, {\n                    labelText: \"Contrase\\xF1a\",\n                    inputName: \"password\",\n                    password: formData.password,\n                    setPassword: value => setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                      \"password\": value\n                    }))\n                  }, \"passwordCustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomPasswordInput, {\n                    labelText: \"Confirmar Contrase\\xF1a\",\n                    inputName: \"password2\",\n                    password: formData.password2,\n                    setPassword: value => setFormData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                      \"password2\": value\n                    }))\n                  }, \"password2CustomInput\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    sx: {\n                      alignContent: \"center\"\n                    },\n                    style: {\n                      color: \"rgba(0, 0, 0, 0.87)\"\n                    },\n                    className: \"registerCheckboxes\",\n                    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      style: {\n                        fontSize: \"6px\"\n                      },\n                      className: animating && !min6 ? classes.animate : classes.static,\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        size: \"small\",\n                        checked: min6\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 651,\n                        columnNumber: 150\n                      }, this),\n                      label: \"M\\xEDnimo 6 caracteres\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      className: animating && !equal ? classes.animate : classes.static,\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        size: \"small\",\n                        checked: equal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 655,\n                        columnNumber: 123\n                      }, this),\n                      label: \"Las contrase\\xF1as coinciden\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              paddingInline: \"18px\"\n            },\n            children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleLoginRedirect,\n              type: \"button\",\n              color: \"secondaryOutlined\",\n              children: \"Volver a Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleBack,\n              type: \"button\",\n              color: \"secondaryOutlined\",\n              children: \"Atr\\xE1s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleBack,\n                type: \"button\",\n                color: \"secondaryOutlined\",\n                children: \"Volver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"Si regresa, deber\\xE1 volver a validar su documentaci\\xF3n para registrarse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 19\n            }, this), activeStep === 2 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              type: \"button\",\n              color: \"primary\",\n              children: \"Finalizar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              type: \"button\",\n              color: \"primary\",\n              style: activeStep === 1 ? {\n                alignSelf: \"start\"\n              } : {},\n              children: \"Siguiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OTPDialog, {\n      open: open,\n      onConfirm: () => {},\n      message: \"hola\",\n      setOpen: setOpen,\n      setActiveStep: setActiveStep,\n      consultorioId: consultorioId,\n      userId: userId,\n      handleOTPConfirm: handleOTPConfirm,\n      setFormData: setFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Register, \"b04Vi42i7sjjgFKWX4Qezw3MQIU=\", false, function () {\n  return [useRouter, useTheme, usePasswordConfirmation];\n});\n\n_c2 = Register;\nRegister.layout = Login;\nexport var __N_SSP = true;\nexport default Register;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OTPDialog\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/pages/login/[consultorioId]/register.js"],"names":["React","useContext","useEffect","useMemo","useState","makeStyles","InputLabel","Admin","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","avatar","Login","Box","Checkbox","FormControl","FormControlLabel","FormGroup","FormHelperText","MenuItem","NativeSelect","Select","Step","StepContent","StepLabel","Stepper","TextField","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","styles","ThemeContext","useRouter","THEMES","logIn","UserContext","useTheme","CustomPasswordInput","usePasswordConfirmation","useRef","MUIButton","SendIcon","VerificationInput","GLOBAL_GET_TOKEN","resetFocus","validate","validateOTP","MessageDialogContext","USER_STATUS_MESSAGE","USER_STATUS_TYPE","patientsPut","OTPDialog","open","setOpen","onClose","onConfirm","setActiveStep","consultorioId","userId","setFormData","classes","resendDisabled","setResendDisabled","codeDisabled","setCodeDisabled","code","setCode","codeState","setCodeState","confirmRef","handleCancel","handleClose","handleEnterKey","event","key","preventDefault","handleConfirm","document","getElementById","reportValidity","validateResponse","success","prev","data","birthDate","Date","toISOString","slice","setTimeout","handleResend","textAlign","paddingBottom","inputMode","minLength","required","id","autoComplete","disabled","value","length","character","root","dialogActions","Register","healthCareList","router","errorMsg","setErrorMsg","messageDialog","handleSubmit","setAnimating","clearInterval","timeoutId","current","console","log","min6","equal","putResponse","formData","handleLoginRedirect","currentPath","asPath","newPath","replace","RegExp","push","setUserId","coberturaParticularValue","find","healthCare","name","toLowerCase","toggleCoberturaParticular","e","target","checked","medicalCareId","coberturaParticular","handleChange","prevState","activeStep","handleNext","form","querySelector","allValid","checkValidity","tipoDoc","Number","dni","email","cellNumber","defaultOpen","estadoId","warningOpen","otpEnviado","pacienteId","handleOpen","prevActiveStep","handleBack","min1Upper","min1Lower","min1Number","passwordValid","password","password2","animating","handleOTPConfirm","width","height","alignItems","cardTitleWhite","stepperRoot","label","select","selectRoot","onChange","fullWidth","type","color","margin","transition","userSelect","lastName","firstName","style","pointerEvents","readOnly","map","display","static","sexo","min","split","max","address","alignContent","fontSize","animate","paddingInline","alignSelf","layout"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n// layout for this page\r\nimport Admin from \"layouts/Admin.js\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nimport avatar from \"assets/img/faces/marc.jpg\";\r\nimport Login from \"../../../layouts/Login\";\r\nimport { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText, MenuItem, NativeSelect, Select, Step, StepContent, StepLabel, Stepper, TextField, Typography } from \"@material-ui/core\";\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nimport styles from \"assets/jss/nextjs-material-dashboard/layouts/loginStyle.js\";\r\nimport { ThemeContext } from \"../../../context/ThemeContextProvider\";\r\nimport { useRouter } from \"next/router\";\r\nimport THEMES from \"../../../constants/THEMES\";\r\nimport { logIn } from \"../../../services/userAuth.js\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\nimport useTheme from \"../../../hooks/useTheme\";\r\nimport CustomPasswordInput from \"../../../components/CustomInput/CustomPasswordInput\";\r\nimport usePasswordConfirmation from \"../../../hooks/usePasswordConfirmation\";\r\nimport { useRef } from \"react\";\r\n\r\nimport MUIButton from \"@material-ui/core/Button\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nimport VerificationInput from \"react-verification-input\";\r\nimport { getHealthCareList } from \"../../../services/healthcare\";\r\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\r\nimport { resetFocus } from \"../../../utils/focus\";\r\nimport { validate, validateOTP } from \"../../../services/register\";\r\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\r\nimport { USER_STATUS_MESSAGE, USER_STATUS_TYPE } from \"../../../constants/TYPES\";\r\nimport { patientsPut } from \"../../../services/patients.js\";\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { consultorioId } = context.query;\r\n\r\n  const healthCareListResponse = await getHealthCareList(consultorioId, await GLOBAL_GET_TOKEN(context));\r\n\r\n  if (!healthCareListResponse.success) {\r\n    return {\r\n      redirect: {\r\n        destination: '/login/' + consultorioId + \"/server-error\",\r\n        permanent: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  return { props: { consultorioId, healthCareList: healthCareListResponse.data } };\r\n}\r\n\r\nfunction OTPDialog({ open, setOpen, onClose, onConfirm, setActiveStep, consultorioId, userId, setFormData }) {\r\n  const classes = useTheme(styles);\r\n\r\n  const [resendDisabled, setResendDisabled] = useState(false);\r\n\r\n  const [codeDisabled, setCodeDisabled] = useState(false);\r\n\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const [codeState, setCodeState] = useState(\"\");\r\n\r\n  const confirmRef = useRef();\r\n\r\n  const handleCancel = () => {\r\n    handleClose();\r\n    onClose();\r\n  };\r\n\r\n  const handleEnterKey = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      handleConfirm()\r\n    }\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    if (!document.getElementById(\"verifInput\").reportValidity()) {\r\n      setCodeState(\"Error\");\r\n      return;\r\n    }\r\n\r\n    const validateResponse = await validateOTP(userId, code, consultorioId, await GLOBAL_GET_TOKEN());\r\n\r\n    if (validateResponse.success) {\r\n      setCodeDisabled(true);\r\n      setCodeState(\"Success\");\r\n\r\n      setFormData((prev) => ({\r\n        ...prev, \r\n        ...validateResponse.data, \r\n        birthDate: new Date(validateResponse.data.birthDate).toISOString().slice(0, 10)\r\n      }));\r\n\r\n      setTimeout(() => {\r\n        setActiveStep(prev => prev + 1);\r\n        setOpen(false);\r\n      }, 1500);\r\n\r\n      setTimeout(() => {\r\n        setCode(\"\");\r\n        setCodeDisabled(false);\r\n        setCodeState(\"\");\r\n      }, 1600);\r\n    }\r\n    else {\r\n      setCodeState(\"Error\");\r\n    }\r\n  };\r\n\r\n  const handleResend = () => {\r\n    setResendDisabled(true)\r\n\r\n    setTimeout(() => {\r\n      setResendDisabled(false)\r\n    }, 3000)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setResendDisabled(false);\r\n    setCodeDisabled(false);\r\n    setCode(\"\");\r\n    setCodeState(\"\");\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      onKeyDown={handleEnterKey}\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\", paddingBottom: \"0\" }}>Verificar c&oacute;digo</DialogTitle>\r\n      <DialogContent>\r\n        <hr />\r\n\r\n        <DialogContentText>\r\n          Se envió un código al mail ingresado, ingrese y confirme para validar\r\n        </DialogContentText>\r\n\r\n        <VerificationInput validChars=\"0-9\"\r\n          inputProps={{\r\n            inputMode: \"numeric\",\r\n            minLength: 6,\r\n            required: true,\r\n            id: \"verifInput\",\r\n            autoComplete: \"off\",\r\n            disabled: codeDisabled\r\n          }}\r\n          value={code}\r\n          onChange={(value) => {\r\n            if (value.length < 7)\r\n              setCode(value)\r\n            setCodeState(\"\")\r\n          }}\r\n          autoFocus\r\n          classNames={{\r\n            character: classes[\"vicharacter\" + codeState]\r\n          }} />\r\n\r\n        <br />\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <MUIButton variant=\"outlined\" endIcon={<SendIcon />} disabled={resendDisabled} onClick={handleResend}>\r\n            Reenviar\r\n          </MUIButton>\r\n        </div>\r\n\r\n        <hr />\r\n      </DialogContent>\r\n      <DialogActions classes={{ root: classes.dialogActions }}>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancelar\r\n        </Button>\r\n        <Button onClick={handleConfirm} color=\"primary\">\r\n          Confirmar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction Register({ consultorioId, healthCareList }) {\r\n\r\n  //TODO: FIX\r\n  // throw new Error();\r\n\r\n  const router = useRouter();\r\n\r\n  const classes = useTheme(styles);\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const messageDialog = useContext(MessageDialogContext);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setAnimating(false);\r\n\r\n    setTimeout(() => {\r\n      setAnimating(true);\r\n    }, 100)\r\n\r\n    clearInterval(timeoutId.current);\r\n    timeoutId.current = setTimeout(() => {\r\n      setAnimating(false);\r\n    }, 5100)\r\n\r\n    console.log({min6, equal});\r\n\r\n    if (min6 && equal) {\r\n      const putResponse = await patientsPut(consultorioId, await GLOBAL_GET_TOKEN(), formData);\r\n\r\n      if (!putResponse.success) {\r\n        console.log(putResponse);\r\n      }\r\n      console.log(\"in\");\r\n    }\r\n  }\r\n\r\n  const handleLoginRedirect = () => {\r\n    const currentPath = router.asPath; // get the current URL path\r\n\r\n    const newPath = currentPath.replace(new RegExp(\"/register\", 'g'), '');\r\n\r\n    router.push(newPath);\r\n  }\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    \"tipoDoc\": 1,\r\n    \"dni\": \"\",\r\n    \"cellNumber\": \"\",\r\n    \"email\": \"\",\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"medicalCareId\": \"\",\r\n    \"coberturaParticular\": false,\r\n    \"sexo\": \"\",\r\n    \"address\": \"\",\r\n    \"birthDate\": new Date().toISOString().slice(0, 10),\r\n    \"password\": \"\",\r\n    \"password2\": \"\",\r\n  })\r\n\r\n  console.log(formData);\r\n\r\n\r\n  /* HANDLE COBERTURAS */\r\n  const coberturaParticularValue = useMemo(() => {\r\n    return healthCareList.find((healthCare) => healthCare.name.toLowerCase() === \"Particular\".toLowerCase()).id\r\n  }, [healthCareList]);\r\n\r\n  const toggleCoberturaParticular = (e) => {\r\n    resetFocus();\r\n\r\n    if (e.target.checked) {\r\n      setFormData((prev) => ({ ...prev, medicalCareId: coberturaParticularValue, coberturaParticular: true }));\r\n    }\r\n    else {\r\n      setFormData((prev) => ({ ...prev, medicalCareId: \"\", coberturaParticular: false }));\r\n    }\r\n    setErrorMsg(\"\");\r\n  }\r\n  /* HANDLE COBERTURAS */\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData(prevState => ({ ...prevState, [name]: value }));\r\n    setErrorMsg(\"\");\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = async () => {\r\n\r\n    const form = document.querySelector(\"form\");\r\n\r\n    const allValid = form.checkValidity();\r\n\r\n    if (allValid) {\r\n      if (activeStep === 0) {\r\n        const validateResponse = await validate(formData.tipoDoc, Number(formData.dni), formData.email, formData.cellNumber, consultorioId, await GLOBAL_GET_TOKEN());\r\n\r\n        console.log(validateResponse);\r\n\r\n        if (!validateResponse.success) {\r\n          messageDialog.defaultOpen();\r\n          return;\r\n        }\r\n\r\n        const data = validateResponse.data;\r\n\r\n        switch (data.estadoId) {\r\n          case USER_STATUS_TYPE[\"NO COINCIDE\"]:\r\n          case USER_STATUS_TYPE[\"YA REGISTRADO\"]: {\r\n            messageDialog.warningOpen(USER_STATUS_MESSAGE[data.estadoId], \"Error de Registro\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (!data.otpEnviado) {\r\n          messageDialog.warningOpen(USER_STATUS_MESSAGE[\"OTP ERROR\"], \"Error de Registro\");\r\n          return;\r\n        }\r\n\r\n        setUserId(data.pacienteId)\r\n        handleOpen()\r\n      }\r\n      else {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      }\r\n    }\r\n    else {\r\n      form.reportValidity();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleEnterKey = (event) => {\r\n    if (event.key === \"Enter\" && !open) {\r\n      if (activeStep === 2)\r\n        handleSubmit(event);\r\n      else\r\n        handleNext();\r\n    }\r\n  }\r\n\r\n  /* CONFIRMACION PASSWORD */\r\n  const { min6, min1Upper, min1Lower, min1Number, equal, passwordValid } = usePasswordConfirmation(formData.password, formData.password2);\r\n\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const timeoutId = useRef();\r\n  /* CONFIRMACION PASSWORD */\r\n\r\n  /* DIALOG VERIFICACION */\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleOTPConfirm = () => {\r\n\r\n  }\r\n\r\n  /* DIALOG VERIFICACION */\r\n\r\n  return (\r\n    <form method=\"post\" action=\"/admin/dashboard\" onSubmit={handleSubmit} autoComplete=\"on\" onKeyDown={handleEnterKey}>\r\n      <GridContainer style={{ width: \"100%\", height: \"85vh\", alignItems: \"center\" }} justify=\"center\">\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Registro</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <Stepper activeStep={activeStep} orientation=\"horizontal\" classes={{ root: classes.stepperRoot }}>\r\n                  <Step key={\"Documentaci\\xF3n\"}>\r\n                    <StepLabel>\r\n                      Documentaci&oacute;n\r\n                    </StepLabel>\r\n                  </Step>\r\n                  <Step key={\"Datos Personales\"}>\r\n                    <StepLabel>\r\n                      Datos Personales\r\n                    </StepLabel>\r\n                  </Step>\r\n                  <Step key={\"Seguridad\"}>\r\n                    <StepLabel>\r\n                      Seguridad\r\n                    </StepLabel>\r\n                  </Step>\r\n                </Stepper>\r\n\r\n\r\n                {activeStep === 0 ?\r\n                  <>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                      <FormControl fullWidth key=\"tipoDocForm\">\r\n                        <InputLabel className={classes.label} variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                          Tipo de Documento\r\n                        </InputLabel>\r\n                        <Select\r\n                          className={classes.select}\r\n                          classes={{ root: classes.selectRoot }}\r\n                          inputProps={{\r\n                            name: 'tipoDoc',\r\n                            key: 'tipoDoc',\r\n                            value: formData.tipoDoc,\r\n                            id: 'uncontrolled-native',\r\n                            required: true,\r\n                            onChange: handleChange\r\n                          }}\r\n                        >\r\n                          <MenuItem value={1} selected>DNI</MenuItem>\r\n                          <MenuItem value={2}>CI</MenuItem>\r\n                          <MenuItem value={3}>Pasaporte</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                      <CustomInput\r\n                        labelText=\"Nro. de Doc.\"\r\n                        id=\"dni\"\r\n                        key=\"dniCustomInput\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"number\",\r\n                          name: 'dni',\r\n                          key: 'dni',\r\n                          value: formData.dni,\r\n                          id: \"dni\",\r\n                          required: true,\r\n                          autoComplete: \"dni\",\r\n                          onChange: handleChange\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        labelText=\"Celular\"\r\n                        id=\"cellNumber\"\r\n                        key=\"cellNumberCustomInput\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          name: \"cellNumber\",\r\n                          id: \"cellNumber\",\r\n                          key: \"cellNumber\",\r\n                          value: formData.cellNumber,\r\n                          required: true,\r\n                          type: \"tel\",\r\n                          autoComplete: \"cellNumber\",\r\n                          onChange: handleChange\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        labelText=\"E-mail\"\r\n                        id=\"email\"\r\n                        key=\"emailCustomInput\"\r\n                        formControlProps={{\r\n                          fullWidth: true\r\n                        }}\r\n                        inputProps={{\r\n                          name: \"email\",\r\n                          id: \"email\",\r\n                          key: \"email\",\r\n                          type: \"email\",\r\n                          value: formData.email,\r\n                          required: true,\r\n                          autoComplete: \"email\",\r\n                          onChange: handleChange\r\n                        }}\r\n\r\n                      />\r\n                      <FormHelperText className=\"formHelper\">Se enviará un mail a esta dirección para verificaci&oacute;n</FormHelperText>\r\n                    </GridItem>\r\n                    <GridItem>\r\n                      <p style={{ color: errorMsg ? \"red\" : \"transparent\", margin: \"0\", transition: \"all 0.6s\", userSelect: \"none\" }}>\r\n                        {errorMsg ? errorMsg : \"Esto deberia ocupar la misma longitud que el error mas largo\"}\r\n                      </p>\r\n                    </GridItem>\r\n                  </> : activeStep === 1 ?\r\n                    <>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <CustomInput\r\n                          labelText=\"Apellido\"\r\n                          id=\"lastName\"\r\n                          key=\"lastNameCustomInput\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            name: 'lastName',\r\n                            id: \"lastName\",\r\n                            key: \"lastName\",\r\n                            value: formData.lastName,\r\n                            required: true,\r\n                            autoComplete: \"lastName\",\r\n                            onChange: handleChange\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <CustomInput\r\n                          labelText=\"Nombre\"\r\n                          id=\"firstName\"\r\n                          key=\"firstNameCustomInput\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            name: \"firstName\",\r\n                            id: \"firstName\",\r\n                            key: \"firstName\",\r\n                            value: formData.firstName,\r\n                            required: true,\r\n                            autoComplete: \"firstName\",\r\n                            onChange: handleChange\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel className={classes.label} variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                            Cobertura\r\n                          </InputLabel>\r\n                          <Select\r\n                            {... (formData.medicalCareId === coberturaParticularValue ? { style: { pointerEvents: \"none\" }, readOnly: true } : {})}\r\n                            className={classes.select}\r\n                            classes={{ root: classes.selectRoot }}\r\n                            inputProps={{\r\n                              name: 'medicalCareId',\r\n                              key: 'medicalCareId',\r\n                              value: formData.medicalCareId,\r\n                              id: 'uncontrolled-native',\r\n                              required: true,\r\n                              onChange: handleChange\r\n                            }}\r\n                          >\r\n                            {healthCareList.map((healthCare) => {\r\n                              if (healthCare.id === coberturaParticularValue) {\r\n                                return (\r\n                                  <MenuItem style={{ display: \"none\" }} value={healthCare.id} key={\"healthcare\" + healthCare.id}>{healthCare.name}</MenuItem>\r\n                                )\r\n                              }\r\n                              else {\r\n                                return (\r\n                                  <MenuItem value={healthCare.id} key={\"healthcare\" + healthCare.id}>{healthCare.name}</MenuItem>\r\n                                )\r\n                              }\r\n                            })}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel style={{ pointerEvents: \"all\" }} onChange={toggleCoberturaParticular} className={classes.static} control={<Checkbox size='medium' checked={formData.coberturaParticular} />} label=\"Poseo cobertura particular (Seleccionar casilla si no encuentra su cobertura listada)\" />\r\n                      </GridItem>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <CustomInput\r\n                          labelText=\"Sexo\"\r\n                          id=\"sexo\"\r\n                          key=\"sexoCustomInput\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            name: \"sexo\",\r\n                            id: \"sexo\",\r\n                            key: \"sexo\",\r\n                            value: formData.sexo,\r\n                            required: true,\r\n                            autoComplete: \"sexo\",\r\n                            onChange: handleChange\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <CustomInput\r\n                          labelText=\"Fecha de nacimiento\"\r\n                          id=\"birthDate\"\r\n                          key=\"bdCustomInput\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            name: \"birthDate\",\r\n                            id: \"birthDate\",\r\n                            key: \"birthDate\",\r\n                            value: formData.birthDate,\r\n                            type: \"date\",\r\n                            required: true,\r\n                            // autoComplete: \"birthDate\",\r\n                            onChange: handleChange\r\n                          }}\r\n                          moreInputProps={{\r\n                            min: new Date(\"1850-01-01\").toISOString().split(\"T\")[0],\r\n                            max: new Date().toISOString().split(\"T\")[0]\r\n                        }}\r\n                        />\r\n                      </GridItem>\r\n                      <GridItem xs={12} sm={12} md={6}>\r\n                        <CustomInput\r\n                          labelText=\"Domicilio\"\r\n                          id=\"address\"\r\n                          key=\"addressCustomInput\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            name: \"address\",\r\n                            id: \"address\",\r\n                            key: \"address\",\r\n                            value: formData.address,\r\n                            required: true,\r\n                            autoComplete: \"address\",\r\n                            onChange: handleChange\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n\r\n                    </> : activeStep === 2 ?\r\n                      <>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CustomPasswordInput\r\n                            key=\"passwordCustomInput\"\r\n                            labelText=\"Contraseña\"\r\n                            inputName=\"password\"\r\n                            password={formData.password}\r\n                            setPassword={(value) => setFormData((prev) => ({ ...prev, \"password\": value }))}\r\n                          />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CustomPasswordInput\r\n                            key=\"password2CustomInput\"\r\n                            labelText=\"Confirmar Contraseña\"\r\n                            inputName=\"password2\"\r\n                            password={formData.password2}\r\n                            setPassword={(value) => setFormData((prev) => ({ ...prev, \"password2\": value }))}\r\n                          />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <FormGroup sx={{ alignContent: \"center\" }} style={{ color: \"rgba(0, 0, 0, 0.87)\" }} className=\"registerCheckboxes\">\r\n                            <FormControlLabel style={{ fontSize: \"6px\" }} className={animating && !min6 ? classes.animate : classes.static} control={<Checkbox size='small' checked={min6} />} label=\"M&iacute;nimo 6 caracteres\" />\r\n                            {/* <FormControlLabel className={animating && !min1Lower ? classes.animate : classes.static} control={<Checkbox size='small' checked={min1Lower} />} label=\"M&iacute;nimo 1 min&uacute;scula\" />\r\n                            <FormControlLabel className={animating && !min1Upper ? classes.animate : classes.static} control={<Checkbox size='small' checked={min1Upper} />} label=\"M&iacute;nimo 1 may&uacute;scula\" />\r\n                            <FormControlLabel className={animating && !min1Number ? classes.animate : classes.static} control={<Checkbox size='small' checked={min1Number} />} label=\"M&iacute;nimo 1 n&uacute;mero\" /> */}\r\n                            <FormControlLabel className={animating && !equal ? classes.animate : classes.static} control={<Checkbox size='small' checked={equal} />} label=\"Las contrase&ntilde;as coinciden\" />\r\n                          </FormGroup>\r\n                        </GridItem>\r\n\r\n                      </> : \"\"}\r\n\r\n              </GridContainer>\r\n            </CardBody>\r\n            <CardFooter style={{ paddingInline: \"18px\" }}>\r\n              {activeStep === 0 ?\r\n                <Button onClick={handleLoginRedirect} type=\"button\" color=\"secondaryOutlined\">Volver a Login</Button> :\r\n                activeStep === 2 ?\r\n                  <Button onClick={handleBack} type=\"button\" color=\"secondaryOutlined\">Atr&aacute;s</Button> :\r\n                  <div>\r\n                    <Button onClick={handleBack} type=\"button\" color=\"secondaryOutlined\">Volver</Button>\r\n                    <FormHelperText>Si regresa, deber&aacute; volver a validar su documentaci&oacute;n para registrarse</FormHelperText>\r\n                  </div>\r\n              }\r\n              {activeStep === 2 ?\r\n                <Button onClick={handleSubmit} type=\"button\" color=\"primary\">Finalizar</Button> :\r\n                <Button onClick={handleNext} type=\"button\" color=\"primary\" style={activeStep === 1 ? { alignSelf: \"start\" } : {}}>Siguiente</Button>\r\n              }\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <OTPDialog\r\n        open={open}\r\n        onConfirm={() => { }}\r\n        message={\"hola\"}\r\n        setOpen={setOpen}\r\n        setActiveStep={setActiveStep}\r\n        consultorioId={consultorioId}\r\n        userId={userId}\r\n        handleOTPConfirm={handleOTPConfirm}\r\n        setFormData={setFormData}\r\n      />\r\n    </form >\r\n  );\r\n}\r\n\r\nRegister.layout = Login;\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}