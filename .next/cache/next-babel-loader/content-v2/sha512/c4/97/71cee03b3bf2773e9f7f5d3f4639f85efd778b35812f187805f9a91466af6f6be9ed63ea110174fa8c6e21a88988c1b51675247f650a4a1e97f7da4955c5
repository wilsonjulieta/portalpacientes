{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\DATOS\\\\THISYS\\\\SISTEMA\\\\PORTAL WEB\\\\Proyecto-Salud\\\\components\\\\Sidebar\\\\Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\nimport styles from \"assets/jss/nextjs-material-dashboard/components/sidebarStyle.js\";\nimport { logout } from \"../../utils/auth\";\nexport default function Sidebar(props) {\n  var _router$query;\n\n  // used for checking current route\n  const router = useRouter();\n  const consultorioId = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.consultorioId; // creates styles for this component\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return router.route.indexOf(routeName) > -1 ? true : false;\n  }\n\n  const {\n    color,\n    logo,\n    image,\n    logoText,\n    routes\n  } = props;\n\n  var links = /*#__PURE__*/_jsxDEV(List, {\n    className: classes.list,\n    children: routes.map((prop, key) => {\n      const whiteFontClasses = classNames({\n        [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path) || prop.path === \"/upgrade-to-pro\"\n      });\n      var activePro = \" \";\n      var listItemClasses;\n\n      if (prop.path === \"/logout\") {\n        activePro = classes.activePro + \" \";\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: true\n        });\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: activePro + classes.item,\n          onClick: () => logout(router),\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            className: classes.itemLink + listItemClasses,\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              }),\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this) : prop.iconType === \"svg\" ? prop.icon : /*#__PURE__*/_jsxDEV(prop.icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: props.rtlActive ? prop.rtlName : prop.name,\n              className: classNames(classes.itemText, whiteFontClasses, {\n                [classes.itemTextRTL]: props.rtlActive\n              }),\n              disableTypography: true,\n              style: prop.iconType === \"svg\" ? {\n                display: \"inline\"\n              } : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      } else {\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: prop.layout + \"/\" + consultorioId + prop.path,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: activePro + classes.item,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            className: classes.itemLink + listItemClasses,\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              }),\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this) : prop.iconType === \"svg\" ? prop.icon : /*#__PURE__*/_jsxDEV(prop.icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: props.rtlActive ? prop.rtlName : prop.name,\n              className: classNames(classes.itemText, whiteFontClasses, {\n                [classes.itemTextRTL]: props.rtlActive\n              }),\n              disableTypography: true,\n              style: prop.iconType === \"svg\" ? {\n                display: \"inline\"\n              } : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  var brand = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.logo,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(classes.logoLink, {\n        [classes.logoLinkRTL]: props.rtlActive\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), logoText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        style: {\n          zIndex: 3000\n        },\n        variant: \"temporary\",\n        anchor: props.rtlActive ? \"left\" : \"right\",\n        open: props.open,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          }) + \" sidebar\"\n        },\n        onClose: props.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: [props.rtlActive ? /*#__PURE__*/_jsxDEV(RTLNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(AdminNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 53\n          }, this), links]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        style: {\n          zIndex: 3000\n        },\n        anchor: props.rtlActive ? \"right\" : \"left\",\n        variant: \"permanent\",\n        open: true,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          })\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: links\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"white\", \"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","Link","useRouter","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","styles","logout","Sidebar","props","router","consultorioId","query","useStyles","classes","activeRoute","routeName","route","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","whiteFontClasses","whiteFont","layout","path","activePro","listItemClasses","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","iconType","rtlName","name","itemText","itemTextRTL","display","brand","logoLink","logoLinkRTL","logoImage","img","zIndex","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,MAAP,MAAmB,iEAAnB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC;AACA,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AAEA,QAAMe,aAAa,oBAAGD,MAAM,CAACE,KAAV,kDAAG,cAAcD,aAApC,CAJqC,CAMrC;;AACA,QAAME,SAAS,GAAGhB,UAAU,CAACS,MAAD,CAA5B;AACA,QAAMQ,OAAO,GAAGD,SAAS,EAAzB,CARqC,CASrC;;AACA,WAASE,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAON,MAAM,CAACO,KAAP,CAAaC,OAAb,CAAqBF,SAArB,IAAkC,CAAC,CAAnC,GAAuC,IAAvC,GAA8C,KAArD;AACD;;AACD,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA2Cd,KAAjD;;AACA,MAAIe,KAAK,gBACP,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACW,IAAzB;AAAA,cACGF,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACzB,YAAMC,gBAAgB,GAAGpC,UAAU,CAAC;AAClC,SAAC,MAAMqB,OAAO,CAACgB,SAAf,GACEf,WAAW,CAACY,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACK,IAApB,CAAX,IACAL,IAAI,CAACK,IAAL,KAAc;AAHkB,OAAD,CAAnC;AAKA,UAAIC,SAAS,GAAG,GAAhB;AACA,UAAIC,eAAJ;;AACA,UAAIP,IAAI,CAACK,IAAL,KAAc,SAAlB,EAA6B;AAC3BC,QAAAA,SAAS,GAAGnB,OAAO,CAACmB,SAAR,GAAoB,GAAhC;AACAC,QAAAA,eAAe,GAAGzC,UAAU,CAAC;AAC3B,WAAC,MAAMqB,OAAO,CAACK,KAAD,CAAd,GAAwB;AADG,SAAD,CAA5B;AAGA,4BACE;AAAG,UAAA,SAAS,EAAEc,SAAS,GAAGnB,OAAO,CAACqB,IAAlC;AAAkD,UAAA,OAAO,EAAE,MAAM5B,MAAM,CAACG,MAAD,CAAvE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,MAAhB;AAAiB,YAAA,SAAS,EAAEI,OAAO,CAACsB,QAAR,GAAmBF,eAA/C;AAAA,uBACG,OAAOP,IAAI,CAACU,IAAZ,KAAqB,QAArB,gBACC,QAAC,IAAD;AACE,cAAA,SAAS,EAAE5C,UAAU,CAACqB,OAAO,CAACwB,QAAT,EAAmBT,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAACyB,WAAT,GAAuB9B,KAAK,CAAC+B;AAD2B,eAArC,CADvB;AAAA,wBAKGb,IAAI,CAACU;AALR;AAAA;AAAA;AAAA;AAAA,oBADD,GAQIV,IAAI,CAACc,QAAL,KAAkB,KAAnB,GAA4Bd,IAAI,CAACU,IAAjC,gBACF,QAAC,IAAD,CAAM,IAAN;AACE,cAAA,SAAS,EAAE5C,UAAU,CAACqB,OAAO,CAACwB,QAAT,EAAmBT,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAACyB,WAAT,GAAuB9B,KAAK,CAAC+B;AAD2B,eAArC;AADvB;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAgBE,QAAC,YAAD;AACE,cAAA,OAAO,EAAE/B,KAAK,CAAC+B,SAAN,GAAkBb,IAAI,CAACe,OAAvB,GAAiCf,IAAI,CAACgB,IADjD;AAEE,cAAA,SAAS,EAAElD,UAAU,CAACqB,OAAO,CAAC8B,QAAT,EAAmBf,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAAC+B,WAAT,GAAuBpC,KAAK,CAAC+B;AAD2B,eAArC,CAFvB;AAKE,cAAA,iBAAiB,EAAE,IALrB;AAME,cAAA,KAAK,EAAEb,IAAI,CAACc,QAAL,KAAkB,KAAlB,GAA0B;AAAEK,gBAAAA,OAAO,EAAE;AAAX,eAA1B,GAAkD;AAN3D;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAA6ClB,GAA7C;AAAA;AAAA;AAAA;AAAA,gBADF;AA6BD,OAlCD,MAkCO;AACLM,QAAAA,eAAe,GAAGzC,UAAU,CAAC;AAC3B,WAAC,MAAMqB,OAAO,CAACK,KAAD,CAAd,GAAwBJ,WAAW,CAACY,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACK,IAApB;AADR,SAAD,CAA5B;AAGD;;AAED,0BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,IAAI,CAACI,MAAL,GAAc,GAAd,GAAoBpB,aAApB,GAAoCgB,IAAI,CAACK,IAArD;AAAA,+BACE;AAAG,UAAA,SAAS,EAAEC,SAAS,GAAGnB,OAAO,CAACqB,IAAlC;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,MAAhB;AAAiB,YAAA,SAAS,EAAErB,OAAO,CAACsB,QAAR,GAAmBF,eAA/C;AAAA,uBACG,OAAOP,IAAI,CAACU,IAAZ,KAAqB,QAArB,gBACC,QAAC,IAAD;AACE,cAAA,SAAS,EAAE5C,UAAU,CAACqB,OAAO,CAACwB,QAAT,EAAmBT,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAACyB,WAAT,GAAuB9B,KAAK,CAAC+B;AAD2B,eAArC,CADvB;AAAA,wBAKGb,IAAI,CAACU;AALR;AAAA;AAAA;AAAA;AAAA,oBADD,GAQIV,IAAI,CAACc,QAAL,KAAkB,KAAnB,GAA4Bd,IAAI,CAACU,IAAjC,gBACF,QAAC,IAAD,CAAM,IAAN;AACE,cAAA,SAAS,EAAE5C,UAAU,CAACqB,OAAO,CAACwB,QAAT,EAAmBT,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAACyB,WAAT,GAAuB9B,KAAK,CAAC+B;AAD2B,eAArC;AADvB;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAgBE,QAAC,YAAD;AACE,cAAA,OAAO,EAAE/B,KAAK,CAAC+B,SAAN,GAAkBb,IAAI,CAACe,OAAvB,GAAiCf,IAAI,CAACgB,IADjD;AAEE,cAAA,SAAS,EAAElD,UAAU,CAACqB,OAAO,CAAC8B,QAAT,EAAmBf,gBAAnB,EAAqC;AACxD,iBAACf,OAAO,CAAC+B,WAAT,GAAuBpC,KAAK,CAAC+B;AAD2B,eAArC,CAFvB;AAKE,cAAA,iBAAiB,EAAE,IALrB;AAME,cAAA,KAAK,EAAEb,IAAI,CAACc,QAAL,KAAkB,KAAlB,GAA0B;AAAEK,gBAAAA,OAAO,EAAE;AAAX,eAA1B,GAAkD;AAN3D;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAgElB,GAAhE;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KA/EA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAoFA,MAAImB,KAAK,gBACP;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACM,IAAxB;AAAA,2BACE;AACE,MAAA,SAAS,EAAE3B,UAAU,CAACqB,OAAO,CAACkC,QAAT,EAAmB;AACtC,SAAClC,OAAO,CAACmC,WAAT,GAAuBxC,KAAK,CAAC+B;AADS,OAAnB,CADvB;AAAA,8BAKE;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACoC,SAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE9B,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEN,OAAO,CAACqC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,EAQG7B,QARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAa,MAAA,cAAc,EAAC,KAA5B;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAE8B,UAAAA,MAAM,EAAE;AAAV,SAAf;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,MAAM,EAAE3C,KAAK,CAAC+B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,QAAA,IAAI,EAAE/B,KAAK,CAAC4C,IAHd;AAIE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE7D,UAAU,CAACqB,OAAO,CAACyC,WAAT,EAAsB;AACrC,aAACzC,OAAO,CAAC0C,cAAT,GAA0B/C,KAAK,CAAC+B;AADK,WAAtB,CAAV,GAEF;AAHE,SAJX;AASE,QAAA,OAAO,EAAE/B,KAAK,CAACgD,kBATjB;AAUE,QAAA,UAAU,EAAE;AACVC,UAAAA,WAAW,EAAE,IADH,CACS;;AADT,SAVd;AAAA,mBAcGX,KAdH,eAeE;AAAK,UAAA,SAAS,EAAEjC,OAAO,CAAC6C,cAAxB;AAAA,qBACGlD,KAAK,CAAC+B,SAAN,gBAAkB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAlB,gBAAuC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAD1C,EAEGhB,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAmBGH,KAAK,KAAKuC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE9C,OAAO,CAAC+C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAASzC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,cAAc,EAAC,KAA9B;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAE+B,UAAAA,MAAM,EAAE;AAAV,SAAf;AACE,QAAA,MAAM,EAAE3C,KAAK,CAAC+B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,OAAO,EAAE;AACPc,UAAAA,KAAK,EAAE7D,UAAU,CAACqB,OAAO,CAACyC,WAAT,EAAsB;AACrC,aAACzC,OAAO,CAAC0C,cAAT,GAA0B/C,KAAK,CAAC+B;AADK,WAAtB;AADV,SAJX;AAAA,mBAUGO,KAVH,eAWE;AAAK,UAAA,SAAS,EAAEjC,OAAO,CAAC6C,cAAxB;AAAA,oBAAyCnC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYGH,KAAK,KAAKuC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE9C,OAAO,CAAC+C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAASzC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;AAEDb,OAAO,CAACuD,SAAR,GAAoB;AAClBvB,EAAAA,SAAS,EAAE9C,SAAS,CAACsE,IADH;AAElBP,EAAAA,kBAAkB,EAAE/D,SAAS,CAACuE,IAFZ;AAGlBC,EAAAA,OAAO,EAAExE,SAAS,CAACyE,KAAV,CAAgB,CACvB,OADuB,EAEvB,QAFuB,EAGvB,MAHuB,EAIvB,OAJuB,EAKvB,QALuB,EAMvB,KANuB,CAAhB,CAHS;AAWlB/C,EAAAA,IAAI,EAAE1B,SAAS,CAAC0E,MAXE;AAYlB/C,EAAAA,KAAK,EAAE3B,SAAS,CAAC0E,MAZC;AAalB9C,EAAAA,QAAQ,EAAE5B,SAAS,CAAC0E,MAbF;AAclB7C,EAAAA,MAAM,EAAE7B,SAAS,CAAC2E,OAAV,CAAkB3E,SAAS,CAAC4E,MAA5B,CAdU;AAelBjB,EAAAA,IAAI,EAAE3D,SAAS,CAACsE;AAfE,CAApB","sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/sidebarStyle.js\";\r\nimport { logout } from \"../../utils/auth\";\r\n\r\nexport default function Sidebar(props) {\r\n  // used for checking current route\r\n  const router = useRouter();\r\n\r\n  const consultorioId = router.query?.consultorioId;\r\n\r\n  // creates styles for this component\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return router.route.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n  const { color, logo, image, logoText, routes } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]:\r\n            activeRoute(prop.layout + prop.path) ||\r\n            prop.path === \"/upgrade-to-pro\",\r\n        });\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        if (prop.path === \"/logout\") {\r\n          activePro = classes.activePro + \" \";\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: true,\r\n          });\r\n          return (\r\n            <a className={activePro + classes.item} key={key} onClick={() => logout(router)}>\r\n              <ListItem button className={classes.itemLink + listItemClasses}>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon\r\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                      [classes.itemIconRTL]: props.rtlActive,\r\n                    })}\r\n                  >\r\n                    {prop.icon}\r\n                  </Icon>\r\n                ) : (prop.iconType === \"svg\") ? prop.icon : (\r\n                  <prop.icon\r\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                      [classes.itemIconRTL]: props.rtlActive,\r\n                    })}\r\n                  />\r\n                )}\r\n                <ListItemText\r\n                  primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                  className={classNames(classes.itemText, whiteFontClasses, {\r\n                    [classes.itemTextRTL]: props.rtlActive,\r\n                  })}\r\n                  disableTypography={true}\r\n                  style={prop.iconType === \"svg\" ? { display: \"inline\" } : {}}\r\n                />\r\n              </ListItem>\r\n            </a>\r\n          )\r\n        } else {\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\r\n          });\r\n        }\r\n\r\n        return (\r\n          <Link href={prop.layout + \"/\" + consultorioId + prop.path} key={key}>\r\n            <a className={activePro + classes.item}>\r\n              <ListItem button className={classes.itemLink + listItemClasses}>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon\r\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                      [classes.itemIconRTL]: props.rtlActive,\r\n                    })}\r\n                  >\r\n                    {prop.icon}\r\n                  </Icon>\r\n                ) : (prop.iconType === \"svg\") ? prop.icon : (\r\n                  <prop.icon\r\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                      [classes.itemIconRTL]: props.rtlActive,\r\n                    })}\r\n                  />\r\n                )}\r\n                <ListItemText\r\n                  primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                  className={classNames(classes.itemText, whiteFontClasses, {\r\n                    [classes.itemTextRTL]: props.rtlActive,\r\n                  })}\r\n                  disableTypography={true}\r\n                  style={prop.iconType === \"svg\" ? { display: \"inline\" } : {}}\r\n                />\r\n              </ListItem>\r\n            </a>\r\n          </Link>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <a\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive,\r\n        })}\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer style={{ zIndex: 3000 }}\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }) + \" sidebar\",\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer style={{ zIndex: 3000 }}\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\r\n    \"white\",\r\n    \"purple\",\r\n    \"blue\",\r\n    \"green\",\r\n    \"orange\",\r\n    \"red\",\r\n  ]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}