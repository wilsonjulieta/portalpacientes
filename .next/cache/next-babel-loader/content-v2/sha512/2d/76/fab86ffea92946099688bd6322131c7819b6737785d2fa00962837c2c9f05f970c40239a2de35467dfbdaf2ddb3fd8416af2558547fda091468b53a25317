{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/snackbarContentStyle.js\";\nexport default function Snackbar(props) {\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  var message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon,\n      place = props.place,\n      open = props.open,\n      rtlActive = props.rtlActive;\n  var action = [];\n  var messageClasses = classNames(_defineProperty({}, classes.iconMessage, icon !== undefined));\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsx(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: function onClick() {\n        return props.closeNotification();\n      },\n      children: /*#__PURE__*/_jsx(Close, {\n        className: classes.close\n      })\n    }, \"close\")];\n  }\n\n  return /*#__PURE__*/_jsx(Snack, {\n    anchorOrigin: {\n      vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n      horizontal: place.indexOf(\"l\") !== -1 ? \"left\" : place.indexOf(\"c\") !== -1 ? \"center\" : \"right\"\n    },\n    open: open,\n    message: /*#__PURE__*/_jsxs(\"div\", {\n      children: [icon !== undefined ? /*#__PURE__*/_jsx(props.icon, {\n        className: classes.icon\n      }) : null, /*#__PURE__*/_jsx(\"span\", {\n        className: messageClasses,\n        children: message\n      })]\n    }),\n    action: action,\n    ContentProps: {\n      classes: {\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames(_defineProperty({}, classes.actionRTL, rtlActive))\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}