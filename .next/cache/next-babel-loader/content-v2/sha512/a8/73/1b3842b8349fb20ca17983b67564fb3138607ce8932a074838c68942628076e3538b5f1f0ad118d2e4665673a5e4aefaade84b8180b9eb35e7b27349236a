{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/faces/marc.jpg\";\nimport Login from \"../../../layouts/Login\";\nimport { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText, MenuItem, NativeSelect, Select, Step, StepContent, StepLabel, Stepper, TextField, Typography } from \"@material-ui/core\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport styles from \"assets/jss/nextjs-material-dashboard/layouts/loginStyle.js\";\nimport { ThemeContext } from \"../../../context/ThemeContextProvider\";\nimport { useRouter } from \"next/router\";\nimport THEMES from \"../../../constants/THEMES\";\nimport { logIn } from \"../../../services/userAuth.js\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport CustomPasswordInput from \"../../../components/CustomInput/CustomPasswordInput\";\nimport usePasswordConfirmation from \"../../../hooks/usePasswordConfirmation\";\nimport { useRef } from \"react\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport SendIcon from '@material-ui/icons/Send';\nimport VerificationInput from \"react-verification-input\";\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\nimport { resetFocus } from \"../../../utils/focus\";\nimport { validate, validateOTP } from \"../../../services/register\";\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\nimport { USER_STATUS_MESSAGE, USER_STATUS_TYPE } from \"../../../constants/TYPES\";\nimport { patientsPut } from \"../../../services/patients.js\";\nimport { hideLoad, showLoad } from \"../../../utils/loading.js\";\nimport { CustomRadio, CustomRadioGroup } from \"../../../components/CustomInput/CustomRadioGroup.js\";\nimport LineSeparator from \"../../../components/Utils/LineSeparator.jsx\";\n\nfunction OTPDialog(_ref) {\n  var open = _ref.open,\n      setOpen = _ref.setOpen,\n      onClose = _ref.onClose,\n      onConfirm = _ref.onConfirm,\n      setActiveStep = _ref.setActiveStep,\n      consultorioId = _ref.consultorioId,\n      userId = _ref.userId,\n      setFormData = _ref.setFormData;\n  var classes = useTheme(styles);\n\n  var _useState = useState(false),\n      resendDisabled = _useState[0],\n      setResendDisabled = _useState[1];\n\n  var _useState2 = useState(false),\n      codeDisabled = _useState2[0],\n      setCodeDisabled = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      code = _useState3[0],\n      setCode = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      codeState = _useState4[0],\n      setCodeState = _useState4[1];\n\n  var confirmRef = useRef();\n\n  var handleCancel = function handleCancel() {\n    handleClose();\n    onClose();\n  };\n\n  var handleEnterKey = function handleEnterKey(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleConfirm();\n    }\n  };\n\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var validateResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (document.getElementById(\"verifInput\").reportValidity()) {\n                _context.next = 3;\n                break;\n              }\n\n              setCodeState(\"Error\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.t0 = validateOTP;\n              _context.t1 = userId;\n              _context.t2 = code;\n              _context.t3 = consultorioId;\n              _context.next = 9;\n              return GLOBAL_GET_TOKEN();\n\n            case 9:\n              _context.t4 = _context.sent;\n              _context.next = 12;\n              return (0, _context.t0)(_context.t1, _context.t2, _context.t3, _context.t4);\n\n            case 12:\n              validateResponse = _context.sent;\n\n              if (validateResponse.success) {\n                setCodeDisabled(true);\n                setCodeState(\"Success\");\n                setFormData(function (prev) {\n                  return _objectSpread(_objectSpread(_objectSpread({}, prev), validateResponse.data), {}, {\n                    birthDate: validateResponse.data.birthDate === \"0001-01-01T00:00:00\" ? new Date().toISOString().slice(0, 10) : new Date(validateResponse.data.birthDate).toISOString().slice(0, 10),\n                    medicalCareId: validateResponse.data.medicalCareId === 0 ? \"\" : validateResponse.data.medicalCareId\n                  });\n                });\n                setTimeout(function () {\n                  setActiveStep(function (prev) {\n                    return prev + 1;\n                  });\n                  setOpen(false);\n                }, 1500);\n                setTimeout(function () {\n                  setCode(\"\");\n                  setCodeDisabled(false);\n                  setCodeState(\"\");\n                }, 1600);\n              } else {\n                setCodeState(\"Error\");\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleConfirm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleResend = function handleResend() {\n    setResendDisabled(true);\n    setTimeout(function () {\n      setResendDisabled(false);\n    }, 3000);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setResendDisabled(false);\n    setCodeDisabled(false);\n    setCode(\"\");\n    setCodeState(\"\");\n  };\n\n  return /*#__PURE__*/_jsxs(Dialog, {\n    open: open,\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    onKeyDown: handleEnterKey,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsx(DialogTitle, {\n      style: {\n        textAlign: \"center\",\n        paddingBottom: \"0\"\n      },\n      children: \"Verificar c\\xF3digo\"\n    }), /*#__PURE__*/_jsxs(DialogContent, {\n      children: [/*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(DialogContentText, {\n        children: \"Se envi\\xF3 un c\\xF3digo al mail ingresado, ingrese y confirme para validar\"\n      }), /*#__PURE__*/_jsx(VerificationInput, {\n        validChars: \"0-9\",\n        inputProps: {\n          inputMode: \"numeric\",\n          minLength: 6,\n          required: true,\n          id: \"verifInput\",\n          autoComplete: \"off\",\n          disabled: codeDisabled\n        },\n        value: code,\n        onChange: function onChange(value) {\n          if (value.length < 7) setCode(value);\n          setCodeState(\"\");\n        },\n        autoFocus: true,\n        classNames: {\n          character: classes[\"vicharacter\" + codeState]\n        }\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsx(MUIButton, {\n          variant: \"outlined\",\n          endIcon: /*#__PURE__*/_jsx(SendIcon, {}),\n          disabled: resendDisabled,\n          onClick: handleResend,\n          children: \"Reenviar\"\n        })\n      }), /*#__PURE__*/_jsx(\"hr\", {})]\n    }), /*#__PURE__*/_jsxs(DialogActions, {\n      classes: {\n        root: classes.dialogActions\n      },\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Cancelar\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: handleConfirm,\n        color: \"primary\",\n        children: \"Confirmar\"\n      })]\n    })]\n  });\n}\n\nfunction Register(_ref3) {\n  var consultorioId = _ref3.consultorioId,\n      healthCareList = _ref3.healthCareList;\n  var router = useRouter();\n  var classes = useTheme(styles);\n\n  var _useState5 = useState(\"\"),\n      errorMsg = _useState5[0],\n      setErrorMsg = _useState5[1];\n\n  var messageDialog = useContext(MessageDialogContext);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var url, putResponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setAnimating(false);\n              setTimeout(function () {\n                setAnimating(true);\n              }, 100);\n              clearInterval(timeoutId.current);\n              timeoutId.current = setTimeout(function () {\n                setAnimating(false);\n              }, 5100);\n              console.log({\n                min6: min6,\n                equal: equal\n              });\n\n              if (!(min6 && equal)) {\n                _context2.next = 23;\n                break;\n              }\n\n              url = \"/login/\" + consultorioId;\n              showLoad(url);\n              _context2.t0 = patientsPut;\n              _context2.t1 = consultorioId;\n              _context2.next = 13;\n              return GLOBAL_GET_TOKEN();\n\n            case 13:\n              _context2.t2 = _context2.sent;\n              _context2.t3 = formData;\n              _context2.next = 17;\n              return (0, _context2.t0)(_context2.t1, _context2.t2, _context2.t3);\n\n            case 17:\n              putResponse = _context2.sent;\n              router.push(url);\n\n              if (putResponse.success) {\n                _context2.next = 22;\n                break;\n              }\n\n              messageDialog.warningOpen(putResponse.message);\n              return _context2.abrupt(\"return\");\n\n            case 22:\n              messageDialog.messageOpen(\"Su usuario ha sido creado correctamente. Utilize sus credenciales para ingresar.\", \"Registro de usuario\");\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleLoginRedirect = function handleLoginRedirect() {\n    var currentPath = router.asPath; // get the current URL path\n\n    var newPath = currentPath.replace(new RegExp(\"/register\", 'g'), '');\n    router.push(newPath);\n  };\n\n  var _useState6 = useState(\"\"),\n      userId = _useState6[0],\n      setUserId = _useState6[1];\n\n  var _useState7 = useState({\n    \"tipoDoc\": 1,\n    \"dni\": \"\",\n    \"cellNumber\": \"\",\n    \"email\": \"\",\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"medicalCareId\": \"\",\n    \"coberturaParticular\": false,\n    \"sexo\": \"\",\n    \"address\": \"\",\n    \"birthDate\": new Date().toISOString().slice(0, 10),\n    \"password\": \"\",\n    \"password2\": \"\"\n  }),\n      formData = _useState7[0],\n      setFormData = _useState7[1];\n\n  console.log(formData);\n  /* HANDLE COBERTURAS */\n\n  var coberturaParticularValue = useMemo(function () {\n    var _healthCareList$find;\n\n    return (_healthCareList$find = healthCareList.find(function (healthCare) {\n      return healthCare.name.toLowerCase() === \"Particular\".toLowerCase();\n    })) === null || _healthCareList$find === void 0 ? void 0 : _healthCareList$find.id;\n  }, [healthCareList]);\n\n  var toggleCoberturaParticular = function toggleCoberturaParticular(e) {\n    resetFocus();\n\n    if (e.target.checked) {\n      setFormData(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          medicalCareId: coberturaParticularValue,\n          coberturaParticular: true\n        });\n      });\n    } else {\n      setFormData(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          medicalCareId: \"\",\n          coberturaParticular: false\n        });\n      });\n    }\n\n    setErrorMsg(\"\");\n  };\n  /* HANDLE COBERTURAS */\n\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormData(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n    setErrorMsg(\"\");\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var form, allValid, url, validateResponse, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              form = document.querySelector(\"form\");\n              allValid = form.reportValidity();\n\n              if (!allValid) {\n                _context3.next = 37;\n                break;\n              }\n\n              if (!(activeStep === 0)) {\n                _context3.next = 36;\n                break;\n              }\n\n              url = \"/login/\" + consultorioId + \"/register\";\n              showLoad(url);\n              _context3.t0 = validate;\n              _context3.t1 = formData.tipoDoc;\n              _context3.t2 = Number(formData.dni);\n              _context3.t3 = formData.email;\n              _context3.t4 = formData.cellNumber;\n              _context3.t5 = consultorioId;\n              _context3.next = 14;\n              return GLOBAL_GET_TOKEN();\n\n            case 14:\n              _context3.t6 = _context3.sent;\n              _context3.next = 17;\n              return (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3, _context3.t4, _context3.t5, _context3.t6);\n\n            case 17:\n              validateResponse = _context3.sent;\n              hideLoad();\n              console.log(validateResponse);\n\n              if (validateResponse.success) {\n                _context3.next = 23;\n                break;\n              }\n\n              messageDialog.defaultOpen();\n              return _context3.abrupt(\"return\");\n\n            case 23:\n              data = validateResponse.data;\n              _context3.t7 = data.estadoId;\n              _context3.next = _context3.t7 === USER_STATUS_TYPE[\"NO COINCIDE\"] ? 27 : _context3.t7 === USER_STATUS_TYPE[\"YA REGISTRADO\"] ? 27 : 29;\n              break;\n\n            case 27:\n              messageDialog.warningOpen(USER_STATUS_MESSAGE[data.estadoId], \"Error de Registro\");\n              return _context3.abrupt(\"return\");\n\n            case 29:\n              if (data.otpEnviado) {\n                _context3.next = 32;\n                break;\n              }\n\n              messageDialog.warningOpen(USER_STATUS_MESSAGE[\"OTP ERROR\"], \"Error de Registro\");\n              return _context3.abrupt(\"return\");\n\n            case 32:\n              setUserId(data.pacienteId);\n              handleOpen();\n              _context3.next = 37;\n              break;\n\n            case 36:\n              setActiveStep(function (prevActiveStep) {\n                return prevActiveStep + 1;\n              });\n\n            case 37:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleNext() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleEnterKey = function handleEnterKey(event) {\n    if (event.key === \"Enter\" && !open) {\n      if (activeStep === 2) handleSubmit(event);else handleNext();\n    }\n  };\n  /* CONFIRMACION PASSWORD */\n\n\n  var _usePasswordConfirmat = usePasswordConfirmation(formData.password, formData.password2),\n      min6 = _usePasswordConfirmat.min6,\n      min1Upper = _usePasswordConfirmat.min1Upper,\n      min1Lower = _usePasswordConfirmat.min1Lower,\n      min1Number = _usePasswordConfirmat.min1Number,\n      equal = _usePasswordConfirmat.equal,\n      passwordValid = _usePasswordConfirmat.passwordValid;\n\n  var _useState8 = useState(false),\n      animating = _useState8[0],\n      setAnimating = _useState8[1];\n\n  var timeoutId = useRef();\n  /* CONFIRMACION PASSWORD */\n\n  /* DIALOG VERIFICACION */\n\n  var _useState9 = useState(false),\n      open = _useState9[0],\n      setOpen = _useState9[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleOTPConfirm = function handleOTPConfirm() {};\n  /* DIALOG VERIFICACION */\n\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    method: \"post\",\n    action: \"/admin/dashboard\",\n    onSubmit: handleSubmit,\n    autoComplete: \"on\",\n    onKeyDown: handleEnterKey,\n    children: [/*#__PURE__*/_jsx(GridContainer, {\n      style: {\n        width: \"100%\",\n        height: \"85vh\",\n        alignItems: \"center\"\n      },\n      justify: \"center\",\n      children: /*#__PURE__*/_jsx(GridItem, {\n        xs: 12,\n        sm: 10,\n        md: 8,\n        children: /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(CardHeader, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsx(\"h4\", {\n              className: classes.cardTitleWhite,\n              children: \"Registro\"\n            })\n          }), /*#__PURE__*/_jsx(CardBody, {\n            children: /*#__PURE__*/_jsxs(GridContainer, {\n              children: [/*#__PURE__*/_jsxs(Stepper, {\n                activeStep: activeStep,\n                orientation: \"horizontal\",\n                classes: {\n                  root: classes.stepperRoot\n                },\n                children: [/*#__PURE__*/_jsx(Step, {\n                  children: /*#__PURE__*/_jsx(StepLabel, {\n                    children: \"Documentaci\\xF3n\"\n                  })\n                }, \"Documentaci\\xF3n\"), /*#__PURE__*/_jsx(Step, {\n                  children: /*#__PURE__*/_jsx(StepLabel, {\n                    children: \"Datos Personales\"\n                  })\n                }, \"Datos Personales\"), /*#__PURE__*/_jsx(Step, {\n                  children: /*#__PURE__*/_jsx(StepLabel, {\n                    children: \"Seguridad\"\n                  })\n                }, \"Seguridad\")]\n              }), activeStep === 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxs(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsx(InputLabel, {\n                      className: classes.label,\n                      variant: \"standard\",\n                      htmlFor: \"uncontrolled-native\",\n                      children: \"Tipo de Documento\"\n                    }), /*#__PURE__*/_jsxs(Select, {\n                      className: classes.select,\n                      classes: {\n                        root: classes.selectRoot\n                      },\n                      inputProps: {\n                        name: 'tipoDoc',\n                        key: 'tipoDoc',\n                        value: formData.tipoDoc,\n                        id: 'uncontrolled-native',\n                        required: true,\n                        onChange: handleChange\n                      },\n                      children: [/*#__PURE__*/_jsx(MenuItem, {\n                        value: 1,\n                        selected: true,\n                        children: \"DNI\"\n                      }), /*#__PURE__*/_jsx(MenuItem, {\n                        value: 2,\n                        children: \"CI\"\n                      }), /*#__PURE__*/_jsx(MenuItem, {\n                        value: 3,\n                        children: \"Pasaporte\"\n                      })]\n                    })]\n                  }, \"tipoDocForm\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Nro. de Doc.\",\n                    id: \"dni\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      type: \"number\",\n                      name: 'dni',\n                      key: 'dni',\n                      value: formData.dni,\n                      id: \"dni\",\n                      required: true,\n                      autoComplete: \"dni\",\n                      onChange: handleChange\n                    }\n                  }, \"dniCustomInput\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Celular\",\n                    id: \"cellNumber\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"cellNumber\",\n                      id: \"cellNumber\",\n                      key: \"cellNumber\",\n                      value: formData.cellNumber,\n                      required: true,\n                      type: \"tel\",\n                      autoComplete: \"cellNumber\",\n                      onChange: handleChange\n                    }\n                  }, \"cellNumberCustomInput\")\n                }), /*#__PURE__*/_jsxs(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: [/*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"E-mail\",\n                    id: \"email\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"email\",\n                      id: \"email\",\n                      key: \"email\",\n                      type: \"email\",\n                      value: formData.email,\n                      required: true,\n                      autoComplete: \"email\",\n                      onChange: handleChange\n                    }\n                  }, \"emailCustomInput\"), /*#__PURE__*/_jsx(FormHelperText, {\n                    className: \"formHelper\",\n                    children: \"Se enviar\\xE1 un mail a esta direcci\\xF3n para verificaci\\xF3n\"\n                  })]\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    style: {\n                      color: errorMsg ? \"red\" : \"transparent\",\n                      margin: \"0\",\n                      transition: \"all 0.6s\",\n                      userSelect: \"none\"\n                    },\n                    children: errorMsg ? errorMsg : \"Esto deberia ocupar la misma longitud que el error mas largo\"\n                  })\n                })]\n              }) : activeStep === 1 ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Apellido\",\n                    id: \"lastName\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: 'lastName',\n                      id: \"lastName\",\n                      key: \"lastName\",\n                      value: formData.lastName,\n                      required: true,\n                      autoComplete: \"lastName\",\n                      onChange: handleChange\n                    }\n                  }, \"lastNameCustomInput\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Nombre\",\n                    id: \"firstName\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"firstName\",\n                      id: \"firstName\",\n                      key: \"firstName\",\n                      value: formData.firstName,\n                      required: true,\n                      autoComplete: \"firstName\",\n                      onChange: handleChange\n                    }\n                  }, \"firstNameCustomInput\")\n                }), /*#__PURE__*/_jsxs(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxs(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsx(InputLabel, {\n                      className: classes.label,\n                      variant: \"standard\",\n                      htmlFor: \"uncontrolled-native\",\n                      children: \"Cobertura\"\n                    }), /*#__PURE__*/_jsx(Select, _objectSpread(_objectSpread({}, formData.medicalCareId === coberturaParticularValue ? {\n                      style: {\n                        pointerEvents: \"none\"\n                      },\n                      readOnly: true\n                    } : {}), {}, {\n                      className: classes.select,\n                      classes: {\n                        root: classes.selectRoot\n                      },\n                      inputProps: {\n                        name: 'medicalCareId',\n                        key: 'medicalCareId',\n                        value: formData.medicalCareId,\n                        id: 'uncontrolled-native',\n                        required: true,\n                        onChange: handleChange\n                      },\n                      children: healthCareList.map(function (healthCare) {\n                        if (healthCare.id === coberturaParticularValue || !healthCare.web) {\n                          return /*#__PURE__*/_jsx(MenuItem, {\n                            style: {\n                              display: \"none\"\n                            },\n                            value: healthCare.id,\n                            children: healthCare.name\n                          }, \"healthcare\" + healthCare.id);\n                        } else {\n                          return /*#__PURE__*/_jsx(MenuItem, {\n                            value: healthCare.id,\n                            children: healthCare.name\n                          }, \"healthcare\" + healthCare.id);\n                        }\n                      })\n                    }))]\n                  }), /*#__PURE__*/_jsx(FormControlLabel, {\n                    style: {\n                      pointerEvents: \"all\",\n                      marginBlock: \"4px\"\n                    },\n                    onChange: toggleCoberturaParticular,\n                    className: classes.static,\n                    control: /*#__PURE__*/_jsx(Checkbox, {\n                      size: \"medium\",\n                      checked: formData.coberturaParticular\n                    }),\n                    label: \"Poseo cobertura particular (Seleccionar casilla si no encuentra su cobertura listada)\"\n                  })]\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"my-4 sm:my-0\",\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      className: \"text-base font-normal flex items-end justify-between\",\n                      children: [/*#__PURE__*/_jsx(\"div\", {\n                        className: classes.colorPrimary + \"\",\n                        children: \"Sexo\"\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"w-5/6\",\n                        children: /*#__PURE__*/_jsxs(CustomRadioGroup, {\n                          name: \"sexo\",\n                          value: formData.sexo,\n                          setValue: function setValue(sexo) {\n                            return setFormData(function (prev) {\n                              return _objectSpread(_objectSpread({}, prev), {}, {\n                                sexo: sexo\n                              });\n                            });\n                          },\n                          children: [/*#__PURE__*/_jsx(CustomRadio, {\n                            name: \"Masculino\",\n                            value: \"M\"\n                          }), /*#__PURE__*/_jsx(CustomRadio, {\n                            name: \"Femenino\",\n                            value: \"F\"\n                          }), /*#__PURE__*/_jsx(CustomRadio, {\n                            name: \"Otro\",\n                            value: \"O\"\n                          })]\n                        })\n                      })]\n                    }), /*#__PURE__*/_jsx(LineSeparator, {})]\n                  })\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Fecha de nacimiento\",\n                    id: \"birthDate\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"birthDate\",\n                      id: \"birthDate\",\n                      key: \"birthDate\",\n                      value: formData.birthDate,\n                      type: \"date\",\n                      required: true,\n                      // autoComplete: \"birthDate\",\n                      onChange: handleChange\n                    },\n                    moreInputProps: {\n                      min: new Date(\"1850-01-01\").toISOString().split(\"T\")[0],\n                      max: new Date().toISOString().split(\"T\")[0]\n                    }\n                  }, \"bdCustomInput\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsx(CustomInput, {\n                    labelText: \"Domicilio\",\n                    id: \"address\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      name: \"address\",\n                      id: \"address\",\n                      key: \"address\",\n                      value: formData.address,\n                      required: true,\n                      autoComplete: \"address\",\n                      onChange: handleChange\n                    }\n                  }, \"addressCustomInput\")\n                })]\n              }) : activeStep === 2 ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsx(CustomPasswordInput, {\n                    labelText: \"Contrase\\xF1a\",\n                    inputName: \"password\",\n                    password: formData.password,\n                    setPassword: function setPassword(value) {\n                      return setFormData(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          \"password\": value\n                        });\n                      });\n                    }\n                  }, \"passwordCustomInput\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsx(CustomPasswordInput, {\n                    labelText: \"Confirmar Contrase\\xF1a\",\n                    inputName: \"password2\",\n                    password: formData.password2,\n                    setPassword: function setPassword(value) {\n                      return setFormData(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          \"password2\": value\n                        });\n                      });\n                    }\n                  }, \"password2CustomInput\")\n                }), /*#__PURE__*/_jsx(GridItem, {\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxs(FormGroup, {\n                    sx: {\n                      alignContent: \"center\"\n                    },\n                    style: {\n                      color: \"rgba(0, 0, 0, 0.87)\"\n                    },\n                    className: \"registerCheckboxes\",\n                    children: [/*#__PURE__*/_jsx(FormControlLabel, {\n                      style: {\n                        fontSize: \"6px\"\n                      },\n                      className: animating && !min6 ? classes.animate : classes.static,\n                      control: /*#__PURE__*/_jsx(Checkbox, {\n                        size: \"small\",\n                        checked: min6\n                      }),\n                      label: \"M\\xEDnimo 6 caracteres\"\n                    }), /*#__PURE__*/_jsx(FormControlLabel, {\n                      className: animating && !equal ? classes.animate : classes.static,\n                      control: /*#__PURE__*/_jsx(Checkbox, {\n                        size: \"small\",\n                        checked: equal\n                      }),\n                      label: \"Las contrase\\xF1as coinciden\"\n                    })]\n                  })\n                })]\n              }) : \"\"]\n            })\n          }), /*#__PURE__*/_jsxs(CardFooter, {\n            style: {\n              paddingInline: \"18px\"\n            },\n            children: [activeStep === 0 ? /*#__PURE__*/_jsx(Button, {\n              onClick: handleLoginRedirect,\n              type: \"button\",\n              color: \"secondaryOutlined\",\n              children: \"Volver a Login\"\n            }) : activeStep === 2 ? /*#__PURE__*/_jsx(Button, {\n              onClick: handleBack,\n              type: \"button\",\n              color: \"secondaryOutlined\",\n              children: \"Atr\\xE1s\"\n            }) : /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(Button, {\n                onClick: handleBack,\n                type: \"button\",\n                color: \"secondaryOutlined\",\n                children: \"Volver\"\n              }), /*#__PURE__*/_jsx(FormHelperText, {\n                children: \"Si regresa, deber\\xE1 volver a validar su documentaci\\xF3n para registrarse\"\n              })]\n            }), activeStep === 2 ? /*#__PURE__*/_jsx(Button, {\n              onClick: handleSubmit,\n              type: \"button\",\n              color: \"primary\",\n              children: \"Finalizar\"\n            }) : /*#__PURE__*/_jsx(Button, {\n              onClick: handleNext,\n              type: \"button\",\n              color: \"primary\",\n              style: activeStep === 1 ? {\n                alignSelf: \"start\"\n              } : {},\n              children: \"Siguiente\"\n            })]\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(OTPDialog, {\n      open: open,\n      onConfirm: function onConfirm() {},\n      message: \"hola\",\n      setOpen: setOpen,\n      setActiveStep: setActiveStep,\n      consultorioId: consultorioId,\n      userId: userId,\n      handleOTPConfirm: handleOTPConfirm,\n      setFormData: setFormData\n    })]\n  });\n}\n\nRegister.layout = Login;\nexport var __N_SSP = true;\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}