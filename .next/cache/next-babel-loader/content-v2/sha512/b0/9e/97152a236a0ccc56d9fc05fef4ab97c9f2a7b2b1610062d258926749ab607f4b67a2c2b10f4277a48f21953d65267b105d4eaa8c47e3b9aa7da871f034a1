{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/placeholderPic.jpg\";\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormHelperText, List, ListItem, ListItemAvatar, ListItemText, MenuItem, NativeSelect, Select } from \"@material-ui/core\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport CalendarIcon from '@material-ui/icons/Today';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AddIcon from '@material-ui/icons/Add';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport adminStyles from \"assets/jss/nextjs-material-dashboard/layouts/adminStyle.js\";\nimport { showLoad } from \"../../../utils/loading\";\nimport { useEffect } from \"react\";\nimport { TURNOS_DISPONIBLES } from \"../../../utils/mockData\";\nimport { useRef } from \"react\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport SendIcon from '@material-ui/icons/Send';\nimport { resetFocus } from \"../../../utils/focus\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { getAvailableTurns, requestTurn } from \"../../../services/turns\";\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\nimport MessageDialog from \"../../../components/Dialogs/MessageDialog\";\nimport { groupBy } from \"../../../utils/algorithms\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\nimport { fullDateToDayMonth, getFullNameOfDate } from \"../../../utils/dates\";\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\nimport { useRouter } from \"next/router\";\nimport LoadingSpinner from \"../../../components/Utils/LoadingSpinner\";\n\nvar styles = _objectSpread(_objectSpread({}, adminStyles()), {}, {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  },\n  description: {\n    fontSize: \"1.25rem\"\n  },\n  colorPrimary: {\n    color: function color(props) {\n      return props.colorPrimary;\n    }\n  },\n  profesionalImg: {\n    width: \"10%\",\n    border: function border(props) {\n      return \"1px solid \" + props.colorPrimary;\n    },\n    borderRadius: \"100%\"\n  }\n});\n\nfunction SolicitarTurno(_ref) {\n  var professionals = _ref.professionals,\n      especialidades = _ref.especialidades,\n      sucursales = _ref.sucursales,\n      consultorioId = _ref.consultorioId;\n  var classes = useTheme(styles);\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  console.log({\n    professionals: professionals,\n    especialidades: especialidades,\n    sucursales: sucursales\n  });\n  var messageDialog = useContext(MessageDialogContext);\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var showConsultasMessage = useRef(true);\n  useEffect(function () {\n    if (user.consultorioId === \"1\" && !localStorage.getItem(\"messageTurnosConsulta\")) {\n      showConsultasMessage.current = false;\n      localStorage.setItem(\"messageTurnosConsulta\", \"true\");\n      messageDialog.messageOpen(\"Los turnos que se obtienen son solo para consulta, para otros estudios comunicarse telefónicamente.\", \"Información\");\n    }\n  }, []);\n  /* DIALOG VERIFICACION */\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var handleClose = function handleClose() {// Do something when the dialog is closed\n  };\n\n  var handleCancel = function handleCancel() {\n    setOpen(false);\n  };\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n  /* DIALOG VERIFICACION */\n\n\n  var _useState3 = useState([]),\n      turnsGrouped = _useState3[0],\n      setTurnsGrouped = _useState3[1];\n\n  var _useState4 = useState({}),\n      turnSelected = _useState4[0],\n      setTurnSelected = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      especialidadId = _useState5[0],\n      setEspecialidadId = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      profesionalId = _useState6[0],\n      setProfesionalId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      sucursalId = _useState7[0],\n      setSucursalId = _useState7[1];\n\n  var resetFilters = function resetFilters() {\n    setEspecialidadId(\"\");\n    setProfesionalId(\"\");\n    setSucursalId(\"\");\n    setTurnsGrouped([]);\n  };\n\n  var professionalsFiltered = professionals.filter(function (professional) {\n    return especialidadId === \"\" || professional.specialty.id === especialidadId;\n  });\n  useEffect(function () {\n    function getTurns() {\n      return _getTurns.apply(this, arguments);\n    }\n\n    function _getTurns() {\n      _getTurns = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _groupBy, _groupBy$map;\n\n        var turnsResponse, turns, turnsGrouped;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.t0 = getAvailableTurns;\n                _context.t1 = consultorioId;\n                _context.next = 5;\n                return GLOBAL_GET_TOKEN();\n\n              case 5:\n                _context.t2 = _context.sent;\n                _context.t3 = sucursalId;\n                _context.t4 = especialidadId;\n                _context.t5 = profesionalId;\n                _context.t6 = user.id;\n                _context.next = 12;\n                return (0, _context.t0)(_context.t1, _context.t2, _context.t3, _context.t4, _context.t5, _context.t6);\n\n              case 12:\n                turnsResponse = _context.sent;\n                setLoading(false);\n\n                if (turnsResponse.success) {\n                  _context.next = 17;\n                  break;\n                }\n\n                messageDialog.warningOpen(turnsResponse.message);\n                return _context.abrupt(\"return\");\n\n              case 17:\n                turns = turnsResponse.data; // Agrupar turnos\n\n                turnsGrouped = (_groupBy = groupBy(turns, \"sucursal\")) === null || _groupBy === void 0 ? void 0 : (_groupBy$map = _groupBy.map(function (group) {\n                  return {\n                    sucursal: group.sucursal,\n                    content: group.content.slice(0, 10)\n                  };\n                })) === null || _groupBy$map === void 0 ? void 0 : _groupBy$map.sort(function (a, b) {\n                  return a.sucursal.localeCompare(b.sucursal);\n                });\n                console.log({\n                  turns: turns,\n                  turnsGrouped: turnsGrouped\n                });\n                setTurnsGrouped(turnsGrouped !== null && turnsGrouped !== void 0 ? turnsGrouped : []);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getTurns.apply(this, arguments);\n    }\n\n    setTurnsGrouped([]);\n    if (especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\") return;\n    showConsultasMessage.current = true;\n    getTurns();\n  }, [especialidadId, profesionalId, sucursalId]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(GridContainer, {\n      children: /*#__PURE__*/_jsxs(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        classes: {\n          root: \"\"\n        },\n        style: {\n          minHeight: \"calc(100vh - 55px)\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(CardHeader, {\n            color: \"primary\",\n            style: {\n              paddingTop: \"6px\",\n              paddingBottom: \"6px\"\n            },\n            children: /*#__PURE__*/_jsxs(\"h3\", {\n              className: classes.cardTitleWhite,\n              children: [/*#__PURE__*/_jsx(CalendarIcon, {\n                fontSize: \"large\"\n              }), \"Solicitud de Turnos\"]\n            })\n          }), /*#__PURE__*/_jsx(CardBody, {\n            style: {\n              padding: \"10px 20px\"\n            },\n            children: /*#__PURE__*/_jsxs(GridContainer, {\n              style: {\n                rowGap: \"1.5em\"\n              },\n              children: [/*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxs(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsx(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Elija Especialidad\"\n                  }), /*#__PURE__*/_jsx(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'especialidad',\n                      key: 'especialidad',\n                      value: especialidadId,\n                      id: 'uncontrolled-native',\n                      required: false,\n                      onChange: function onChange(e) {\n                        setEspecialidadId(e.target.value);\n                        setProfesionalId(\"\");\n                      }\n                    },\n                    children: especialidades.map(function (especialidad) {\n                      return /*#__PURE__*/_jsx(MenuItem, {\n                        value: especialidad.id,\n                        children: especialidad.nombre\n                      });\n                    })\n                  })]\n                }, \"especialidadForm\")\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxs(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsx(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Elija Profesional\"\n                  }), /*#__PURE__*/_jsx(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'profesional',\n                      key: 'profesional',\n                      value: profesionalId,\n                      id: 'uncontrolled-native',\n                      required: true,\n                      onChange: function onChange(e) {\n                        return setProfesionalId(e.target.value);\n                      }\n                    },\n                    children: professionalsFiltered.length > 0 ? professionalsFiltered.map(function (professional) {\n                      return /*#__PURE__*/_jsx(MenuItem, {\n                        value: professional.id,\n                        children: professional.fullName\n                      });\n                    }) : /*#__PURE__*/_jsx(MenuItem, {\n                      style: {\n                        color: \"red\",\n                        pointerEvents: \"none\"\n                      },\n                      value: 2,\n                      children: \"No hay profesionales para la especialidad seleccionada.\"\n                    })\n                  })]\n                }, \"profesionalForm\")\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxs(FormControl, {\n                  fullWidth: true,\n                  disabled: especialidadId === \"\" && profesionalId === \"\",\n                  children: [/*#__PURE__*/_jsx(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Elija Lugar\"\n                  }), /*#__PURE__*/_jsx(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'lugar',\n                      key: 'lugar',\n                      value: sucursalId,\n                      id: 'uncontrolled-native',\n                      required: true,\n                      onChange: function onChange(e) {\n                        return setSucursalId(e.target.value);\n                      }\n                    },\n                    children: sucursales.map(function (sucursal) {\n                      return /*#__PURE__*/_jsx(MenuItem, {\n                        value: sucursal.id,\n                        children: sucursal.nombre\n                      });\n                    })\n                  })]\n                }, \"lugarForm\")\n              }), /*#__PURE__*/_jsx(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 2,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsx(Button, {\n                  style: {\n                    lineHeight: 0,\n                    padding: \"12px\"\n                  },\n                  startIcon: /*#__PURE__*/_jsx(ClearIcon, {}),\n                  onClick: resetFilters,\n                  color: \"primary\",\n                  children: \"Limpiar\"\n                })\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(TurnosDisponibles, {\n          turnsGrouped: turnsGrouped,\n          setOpen: setOpen,\n          setTurnSelected: setTurnSelected,\n          active: !(especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\"),\n          turnsGroupedKey: especialidadId + \",\" + profesionalId + \",\" + sucursalId,\n          showConsultasMessage: showConsultasMessage.current,\n          loading: loading\n        })]\n      })\n    }), /*#__PURE__*/_jsx(ConfirmationDialog, {\n      open: open,\n      onConfirm: function onConfirm() {},\n      message: \"\",\n      setOpen: setOpen,\n      turno: turnSelected\n    })]\n  });\n}\n\nfunction TurnosDisponibles(_ref2) {\n  var turnsGrouped = _ref2.turnsGrouped,\n      setOpen = _ref2.setOpen,\n      setTurnSelected = _ref2.setTurnSelected,\n      active = _ref2.active,\n      turnsGroupedKey = _ref2.turnsGroupedKey,\n      showConsultasMessage = _ref2.showConsultasMessage,\n      loading = _ref2.loading;\n  var classes = useTheme(styles);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [active && turnsGrouped.map(function (turnsGroup) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"fade-in\",\n        children: [/*#__PURE__*/_jsx(Card, {\n          style: {\n            marginTop: \"10px\",\n            marginBottom: \"10px\"\n          },\n          className: \"proxTurnoCard\",\n          children: /*#__PURE__*/_jsxs(CardHeader, {\n            style: {\n              paddingTop: \"4px\",\n              paddingBottom: \"4px\"\n            },\n            color: \"secondary\",\n            children: [/*#__PURE__*/_jsx(PlaceIcon, {}), \" Lugar de atenci\\xF3n: \", /*#__PURE__*/_jsx(\"b\", {\n              children: turnsGroup.sucursal\n            })]\n          })\n        }), /*#__PURE__*/_jsx(GridContainer, {\n          style: {\n            margin: \"-10px -16px\"\n          },\n          children: turnsGroup.content.map(function (turno, index) {\n            return /*#__PURE__*/_jsx(GridItem, {\n              style: {\n                padding: \"8px 16px\",\n                marginTop: \"24px\"\n              },\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 6,\n              xl: 4,\n              children: /*#__PURE__*/_jsxs(Card, {\n                style: {\n                  margin: 0,\n                  height: \"100%\"\n                },\n                className: \"solicitarTurnoCard\",\n                children: [/*#__PURE__*/_jsx(CardHeader, {\n                  style: {\n                    paddingTop: \"2px\",\n                    paddingBottom: \"2px\",\n                    paddingInline: \"0\"\n                  },\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxs(\"h3\", {\n                    className: \"\",\n                    style: {\n                      fontSize: '20px',\n                      margin: \"auto\",\n                      display: \"block\",\n                      textAlign: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsx(CalendarIcon, {\n                      style: {\n                        fontSize: '30px'\n                      }\n                    }), \"\\xA0\", getFullNameOfDate(turno.fecha, turno.hora)]\n                  })\n                }), /*#__PURE__*/_jsxs(CardBody, {\n                  style: {\n                    paddingBlock: \"8px\",\n                    paddingInline: \"16px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"start\"\n                  },\n                  children: [/*#__PURE__*/_jsx(\"img\", {\n                    className: classes.profesionalImg,\n                    src: avatar,\n                    alt: \"...\"\n                  }), /*#__PURE__*/_jsx(\"label\", {\n                    style: {\n                      fontSize: '18px',\n                      width: \"60%\",\n                      textAlign: \"left\",\n                      paddingInline: \"6px\",\n                      display: \"block\"\n                    },\n                    children: turno.profesional\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Button, {\n                    color: \"primary\",\n                    style: {\n                      paddingRight: \"10px\",\n                      paddingLeft: \"10px\",\n                      margin: \"auto\",\n                      display: \"block\",\n                      width: \"10%\",\n                      borderRadius: \"2rem\",\n                      minWidth: \"80px\"\n                    },\n                    size: \"small\",\n                    onClick: function onClick() {\n                      setOpen(true);\n                      setTurnSelected(turno);\n                    },\n                    children: \"Solicitar\"\n                  })]\n                })]\n              })\n            }, turno.fecha + turno.profesional + index);\n          })\n        })]\n      }, turnsGroup.sucursal);\n    }), turnsGrouped.length === 0 && active && !loading && /*#__PURE__*/_jsx(\"h3\", {\n      className: \"fade-in-slow m-auto text-center \" + classes.colorSecondary,\n      children: \"No hay turnos disponibles seg\\xFAn lo seleccionado.\"\n    }, \"t1\" + turnsGroupedKey), showConsultasMessage && !active && !loading && /*#__PURE__*/_jsx(\"h3\", {\n      className: \"fade-in-slow m-auto text-center \" + classes.colorPrimary,\n      children: \"Los turnos que se obtienen son solo para consulta, para otros estudios comunicarse telef\\xF3nicamente.\"\n    }, \"t2\" + turnsGroupedKey), loading && /*#__PURE__*/_jsx(\"div\", {\n      className: \"fade-in-slow m-auto text-center\",\n      children: /*#__PURE__*/_jsx(LoadingSpinner, {})\n    })]\n  });\n}\n\nfunction ConfirmationDialog(_ref3) {\n  var open = _ref3.open,\n      setOpen = _ref3.setOpen,\n      turno = _ref3.turno;\n  var classes = useTheme(styles);\n\n  var handleKeys = function handleKeys(event) {\n    if (event.key === \"Enter\") {\n      setOpen(false);\n    }\n\n    if (event.key === \"Escape\") {\n      setOpen(false);\n    }\n  };\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user;\n\n  console.log(user);\n  var messageDialog = useContext(MessageDialogContext);\n  var router = useRouter();\n\n  var handleConfirm = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _turno$patienteId, professionalId, fecha, hora, patienteId, horarioId, requestTurnResponse;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _turno$patienteId = _objectSpread(_objectSpread({}, turno), {}, {\n                patienteId: user.id\n              }), professionalId = _turno$patienteId.profesionalId, fecha = _turno$patienteId.fecha, hora = _turno$patienteId.hora, patienteId = _turno$patienteId.patienteId, horarioId = _turno$patienteId.horarioId;\n              setConfirmEnabled(false);\n              _context2.t0 = requestTurn;\n              _context2.t1 = user.consultorioId;\n              _context2.next = 6;\n              return GLOBAL_GET_TOKEN();\n\n            case 6:\n              _context2.t2 = _context2.sent;\n              _context2.t3 = {\n                professionalId: professionalId,\n                fecha: fecha,\n                hora: hora,\n                patienteId: patienteId,\n                horarioId: horarioId\n              };\n              _context2.next = 10;\n              return (0, _context2.t0)(_context2.t1, _context2.t2, _context2.t3);\n\n            case 10:\n              requestTurnResponse = _context2.sent;\n              console.log(requestTurnResponse);\n\n              if (requestTurnResponse.success) {\n                _context2.next = 17;\n                break;\n              }\n\n              messageDialog.reset();\n              messageDialog.setMessage(requestTurnResponse.message);\n              messageDialog.open();\n              return _context2.abrupt(\"return\");\n\n            case 17:\n              messageDialog.messageOpen(\"Se reservó su turno con éxito.\", \"Confirmación del turno\");\n              router.push(\"/admin/\" + user.consultorioId + \"/dashboard\");\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleConfirm() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setTimeout(resetFocus, 0);\n  };\n\n  var _useState8 = useState(true),\n      confirmEnabled = _useState8[0],\n      setConfirmEnabled = _useState8[1];\n\n  return /*#__PURE__*/_jsx(Dialog, {\n    open: open,\n    onKeyDown: handleKeys,\n    onClose: handleClose,\n    className: \"solicitarTurnoDialog\",\n    children: /*#__PURE__*/_jsx(DialogContent, {\n      children: /*#__PURE__*/_jsxs(Card, {\n        style: {\n          marginTop: \"10px\",\n          marginBottom: \"10px\"\n        },\n        className: \"proxTurnoCard\",\n        children: [/*#__PURE__*/_jsxs(CardHeader, {\n          className: \"dialogCardHeader\",\n          style: {\n            fontSize: \"1.5rem\",\n            padding: \"8px\",\n            textAlign: \"center\"\n          },\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsx(CheckCircleIcon, {\n            className: \"dialogCardHeader\",\n            style: {\n              fontSize: \"1.5rem\"\n            }\n          }), \" \\xBFDesea confirmar la solicitud de este turno?\"]\n        }), /*#__PURE__*/_jsxs(CardBody, {\n          style: {\n            paddingTop: 0\n          },\n          children: [/*#__PURE__*/_jsxs(List, {\n            children: [/*#__PURE__*/_jsxs(ListItem, {\n              children: [/*#__PURE__*/_jsx(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxs(\"label\", {\n                  className: classes.colorPrimary,\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    style: {\n                      fontSize: '20px'\n                    },\n                    children: /*#__PURE__*/_jsx(\"b\", {\n                      children: fullDateToDayMonth(turno.fecha)\n                    })\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '13px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: turno.hora\n                    }), \"hs\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(ListItemText, {\n                primary: /*#__PURE__*/_jsxs(\"label\", {\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: \"Especialidad: \"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.especialidad\n                    })]\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: \"Lugar de Atenci\\xF3n: \"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.sucursal\n                    })]\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: \"Fecha: \"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: getFullNameOfDate(turno.fecha, turno.hora)\n                    })]\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: \"Profesional: \"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.profesional\n                    })]\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"b\", {\n                      children: \"Motivo: \"\n                    }), /*#__PURE__*/_jsx(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.motivo\n                    })]\n                  }), /*#__PURE__*/_jsx(\"br\", {})]\n                })\n              })]\n            }), /*#__PURE__*/_jsx(\"hr\", {})]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              marginBottom: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsx(Button, {\n              onClick: handleClose,\n              color: \"secondaryOutlined\",\n              children: \"Cancelar\"\n            }), /*#__PURE__*/_jsx(Button, {\n              onClick: handleConfirm,\n              color: \"primary\",\n              disabled: !confirmEnabled,\n              children: \"Confirmar\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\n\nSolicitarTurno.layout = Admin;\nexport var __N_SSP = true;\nexport default SolicitarTurno;","map":null,"metadata":{},"sourceType":"module"}