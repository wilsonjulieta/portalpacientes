{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PUT } from \"./FETCH.JS\";\nexport async function patientsPut(consultorioId, token, putData) {\n  let patientsPutResponse;\n  putData = _objectSpread({}, putData);\n\n  try {\n    putData.birthDate = new Date(putData.birthDate).toISOString().split(\".\")[0];\n    const response = await PUT(consultorioId, token, `patients`, putData);\n    console.log(response.headers.get(\"content-type\"));\n    if (response.status !== 201) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    patientsPutResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    console.dir({\n      err\n    });\n    patientsPutResponse = {\n      success: false,\n      message: err.message || \"Error al cargar datos del usuario.\"\n    };\n  }\n\n  return patientsPutResponse;\n}","map":null,"metadata":{},"sourceType":"module"}