{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\nimport styles from \"assets/jss/nextjs-material-dashboard/components/sidebarStyle.js\";\nimport { logout } from \"../../utils/auth\";\nexport default function Sidebar(props) {\n  var _router$query;\n\n  // used for checking current route\n  const router = useRouter();\n  const consultorioId = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.consultorioId; // creates styles for this component\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return router.route.indexOf(routeName) > -1 ? true : false;\n  }\n\n  const {\n    color,\n    logo,\n    image,\n    logoText,\n    routes\n  } = props;\n\n  var links = /*#__PURE__*/_jsx(List, {\n    className: classes.list,\n    children: routes.map((prop, key) => {\n      const whiteFontClasses = classNames({\n        [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path) || prop.path === \"/upgrade-to-pro\"\n      });\n      var activePro = \" \";\n      var listItemClasses;\n\n      if (prop.path === \"/logout\") {\n        activePro = classes.activePro + \" \";\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: true\n        });\n        return /*#__PURE__*/_jsx(\"a\", {\n          className: activePro + classes.item,\n          onClick: () => logout(router),\n          children: /*#__PURE__*/_jsxs(ListItem, {\n            button: true,\n            className: classes.itemLink + listItemClasses,\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsx(Icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              }),\n              children: prop.icon\n            }) : prop.iconType === \"svg\" ? prop.icon : /*#__PURE__*/_jsx(prop.icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              })\n            }), /*#__PURE__*/_jsx(ListItemText, {\n              primary: props.rtlActive ? prop.rtlName : prop.name,\n              className: classNames(classes.itemText, whiteFontClasses, {\n                [classes.itemTextRTL]: props.rtlActive\n              }),\n              disableTypography: true,\n              style: prop.iconType === \"svg\" ? {\n                display: \"inline\"\n              } : {}\n            })]\n          })\n        }, key);\n      } else {\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n        });\n      }\n\n      return /*#__PURE__*/_jsx(Link, {\n        href: prop.layout + \"/\" + consultorioId + prop.path,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          className: activePro + classes.item,\n          children: /*#__PURE__*/_jsxs(ListItem, {\n            button: true,\n            className: classes.itemLink + listItemClasses,\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsx(Icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              }),\n              children: prop.icon\n            }) : prop.iconType === \"svg\" ? prop.icon : /*#__PURE__*/_jsx(prop.icon, {\n              className: classNames(classes.itemIcon, whiteFontClasses, {\n                [classes.itemIconRTL]: props.rtlActive\n              })\n            }), /*#__PURE__*/_jsx(ListItemText, {\n              primary: props.rtlActive ? prop.rtlName : prop.name,\n              className: classNames(classes.itemText, whiteFontClasses, {\n                [classes.itemTextRTL]: props.rtlActive\n              }),\n              disableTypography: true,\n              style: prop.iconType === \"svg\" ? {\n                display: \"inline\"\n              } : {}\n            })]\n          })\n        })\n      }, key);\n    })\n  });\n\n  var brand = /*#__PURE__*/_jsx(\"div\", {\n    className: classes.logo,\n    children: /*#__PURE__*/_jsxs(\"a\", {\n      className: classNames(classes.logoLink, {\n        [classes.logoLinkRTL]: props.rtlActive\n      }),\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.logoImage,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.img\n        })\n      }), logoText]\n    })\n  });\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Hidden, {\n      mdUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxs(Drawer, {\n        style: {\n          zIndex: 3000\n        },\n        variant: \"temporary\",\n        anchor: props.rtlActive ? \"left\" : \"right\",\n        open: props.open,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          }) + \" sidebar\"\n        },\n        onClose: props.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        children: [brand, /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.sidebarWrapper,\n          children: [props.rtlActive ? /*#__PURE__*/_jsx(RTLNavbarLinks, {}) : /*#__PURE__*/_jsx(AdminNavbarLinks, {}), links]\n        }), image !== undefined ? /*#__PURE__*/_jsx(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }) : null]\n      })\n    }), /*#__PURE__*/_jsx(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxs(Drawer, {\n        style: {\n          zIndex: 3000\n        },\n        anchor: props.rtlActive ? \"right\" : \"left\",\n        variant: \"permanent\",\n        open: true,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          })\n        },\n        children: [brand, /*#__PURE__*/_jsx(\"div\", {\n          className: classes.sidebarWrapper,\n          children: links\n        }), image !== undefined ? /*#__PURE__*/_jsx(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }) : null]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}