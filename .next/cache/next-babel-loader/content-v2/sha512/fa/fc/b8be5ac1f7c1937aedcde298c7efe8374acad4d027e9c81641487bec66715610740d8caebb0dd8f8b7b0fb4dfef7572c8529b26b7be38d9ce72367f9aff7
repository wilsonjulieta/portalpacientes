{"ast":null,"code":"import { POST } from \"./FETCH.JS\";\nexport async function validate(tipodoc, dni, mail, celular, consultorioId, token) {\n  let validateResponse;\n\n  try {\n    const response = await POST(consultorioId, token, \"patients/validate\", {\n      tipodoc,\n      dni,\n      email: mail,\n      celular\n    });\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    validateResponse = {\n      success: true,\n      data: await response.json()\n    }; //Si falla al pedir los datos del paciente va al catch\n  } catch (err) {\n    validateResponse = {\n      success: false\n    };\n  }\n\n  return validateResponse;\n}\nexport async function validateOTP(id, otp, consultorioId, token) {\n  let validateResponse;\n\n  try {\n    const response = await POST(consultorioId, token, \"patients/validateOTP\", {\n      id,\n      otp\n    });\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    validateResponse = {\n      success: true,\n      data: await response.json()\n    }; //Si falla al pedir los datos del paciente va al catch\n  } catch (err) {\n    validateResponse = {\n      success: false\n    };\n  }\n\n  return validateResponse;\n}","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/services/register.js"],"names":["POST","validate","tipodoc","dni","mail","celular","consultorioId","token","validateResponse","response","email","status","headers","get","includes","json","Error","detail","success","data","err","validateOTP","id","otp"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AAEA,OAAO,eAAeC,QAAf,CAAwBC,OAAxB,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4CC,OAA5C,EAAqDC,aAArD,EAAoEC,KAApE,EAA2E;AAC9E,MAAIC,gBAAJ;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACM,aAAD,EAAgBC,KAAhB,EAAuB,mBAAvB,EAA4C;AAAEL,MAAAA,OAAF;AAAWC,MAAAA,GAAX;AAAgBO,MAAAA,KAAK,EAAEN,IAAvB;AAA6BC,MAAAA;AAA7B,KAA5C,CAA3B;AAEA,QAAII,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,UAAIF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,EAAqCC,QAArC,CAA8C,kBAA9C,CAAJ,EAAuE;AACnE,cAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;AACA,cAAMC,KAAK,CAACD,IAAI,CAACE,MAAN,CAAX;AACH,OAHD,MAKI,MAAMD,KAAK,CAAC,EAAD,CAAX;AAERR,IAAAA,gBAAgB,GAAG;AAAEU,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAE,MAAMV,QAAQ,CAACM,IAAT;AAA7B,KAAnB,CAXA,CAWmE;AAEtE,GAbD,CAaE,OAAOK,GAAP,EAAY;AACVZ,IAAAA,gBAAgB,GAAG;AAAEU,MAAAA,OAAO,EAAE;AAAX,KAAnB;AACH;;AAED,SAAOV,gBAAP;AAEH;AAED,OAAO,eAAea,WAAf,CAA2BC,EAA3B,EAA+BC,GAA/B,EAAoCjB,aAApC,EAAmDC,KAAnD,EAA0D;AAC7D,MAAIC,gBAAJ;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACM,aAAD,EAAgBC,KAAhB,EAAuB,sBAAvB,EAA+C;AAAEe,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAA/C,CAA3B;AAEA,QAAId,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,UAAIF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,EAAqCC,QAArC,CAA8C,kBAA9C,CAAJ,EAAuE;AACnE,cAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;AACA,cAAMC,KAAK,CAACD,IAAI,CAACE,MAAN,CAAX;AACH,OAHD,MAKI,MAAMD,KAAK,CAAC,EAAD,CAAX;AAERR,IAAAA,gBAAgB,GAAG;AAAEU,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAE,MAAMV,QAAQ,CAACM,IAAT;AAA7B,KAAnB,CAXA,CAWmE;AAEtE,GAbD,CAaE,OAAOK,GAAP,EAAY;AACVZ,IAAAA,gBAAgB,GAAG;AAAEU,MAAAA,OAAO,EAAE;AAAX,KAAnB;AACH;;AAED,SAAOV,gBAAP;AAEH","sourcesContent":["import { POST } from \"./FETCH.JS\";\r\n\r\nexport async function validate(tipodoc, dni, mail, celular, consultorioId, token) {\r\n    let validateResponse;\r\n\r\n    try {\r\n        const response = await POST(consultorioId, token, \"patients/validate\", { tipodoc, dni, email: mail, celular });\r\n\r\n        if (response.status !== 200) //Si falla se va al catch directamente\r\n            if (response.headers.get(\"content-type\").includes(\"application/json\")) {\r\n                const json = await response.json();\r\n                throw Error(json.detail);\r\n            }\r\n            else\r\n                throw Error(\"\");\r\n\r\n        validateResponse = { success: true, data: await response.json() }; //Si falla al pedir los datos del paciente va al catch\r\n\r\n    } catch (err) {\r\n        validateResponse = { success: false }\r\n    }\r\n\r\n    return validateResponse;\r\n\r\n}\r\n\r\nexport async function validateOTP(id, otp, consultorioId, token) {\r\n    let validateResponse;\r\n\r\n    try {\r\n        const response = await POST(consultorioId, token, \"patients/validateOTP\", { id, otp });\r\n\r\n        if (response.status !== 200) //Si falla se va al catch directamente\r\n            if (response.headers.get(\"content-type\").includes(\"application/json\")) {\r\n                const json = await response.json();\r\n                throw Error(json.detail);\r\n            }\r\n            else\r\n                throw Error(\"\");\r\n\r\n        validateResponse = { success: true, data: await response.json() }; //Si falla al pedir los datos del paciente va al catch\r\n\r\n    } catch (err) {\r\n        validateResponse = { success: false }\r\n    }\r\n\r\n    return validateResponse;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}