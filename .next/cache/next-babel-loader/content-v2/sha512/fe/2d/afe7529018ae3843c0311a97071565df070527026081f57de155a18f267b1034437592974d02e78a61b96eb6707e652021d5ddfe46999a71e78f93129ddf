{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PUT } from \"./FETCH.JS\";\nexport function patientsPut(_x, _x2, _x3) {\n  return _patientsPut.apply(this, arguments);\n}\n\nfunction _patientsPut() {\n  _patientsPut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(consultorioId, token, putData) {\n    var patientsPutResponse, response, json, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            putData = _objectSpread({}, putData);\n            _context.prev = 1;\n            putData.birthDate = new Date(putData.birthDate).toISOString().split(\".\")[0];\n            _context.next = 5;\n            return PUT(consultorioId, token, \"patients\", putData);\n\n          case 5:\n            response = _context.sent;\n            console.log(response.headers.get(\"content-type\"));\n\n            if (!(response.status !== 201)) {\n              _context.next = 16;\n              break;\n            }\n\n            if (!response.headers.get(\"content-type\").includes(\"application/json\")) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 11;\n            return response.json();\n\n          case 11:\n            json = _context.sent;\n            throw Error(json.detail);\n\n          case 15:\n            throw Error(\"\");\n\n          case 16:\n            _context.next = 18;\n            return response.json();\n\n          case 18:\n            data = _context.sent;\n            //Si falla al pedir los datos va al catch\n            patientsPutResponse = {\n              success: true,\n              data: data\n            };\n            _context.next = 26;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](1);\n            console.dir({\n              err: _context.t0\n            });\n            patientsPutResponse = {\n              success: false,\n              message: _context.t0.message || \"Error al cargar datos del usuario.\"\n            };\n\n          case 26:\n            return _context.abrupt(\"return\", patientsPutResponse);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 22]]);\n  }));\n  return _patientsPut.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}