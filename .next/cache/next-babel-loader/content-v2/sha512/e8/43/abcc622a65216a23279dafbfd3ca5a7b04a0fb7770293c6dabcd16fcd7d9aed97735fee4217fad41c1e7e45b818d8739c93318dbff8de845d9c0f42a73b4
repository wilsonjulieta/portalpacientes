{"ast":null,"code":"import React from \"react\"; // Hook\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: undefined,\n    height: undefined\n  });\n  React.useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/components/Hooks/useWindowSize.js"],"names":["React","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,aAAT,GAAyB;AACvB;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,KAAK,CAACI,QAAN,CAAe;AACjDC,IAAAA,KAAK,EAAEC,SAD0C;AAEjDC,IAAAA,MAAM,EAAED;AAFyC,GAAf,CAApC;AAKAN,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB;AACA,aAASC,YAAT,GAAwB;AACtB;AACAN,MAAAA,aAAa,CAAC;AACZE,QAAAA,KAAK,EAAEK,MAAM,CAACC,UADF;AAEZJ,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARmB,CAUpB;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXoB,CAapB;;AACAA,IAAAA,YAAY,GAdQ,CAgBpB;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAlBD,EAkBG,EAlBH,EARuB,CA0Bf;;AAER,SAAOP,UAAP;AACD;;AAED,eAAeD,aAAf","sourcesContent":["import React from \"react\";\r\n\r\n// Hook\r\nfunction useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = React.useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n"]},"metadata":{},"sourceType":"module"}