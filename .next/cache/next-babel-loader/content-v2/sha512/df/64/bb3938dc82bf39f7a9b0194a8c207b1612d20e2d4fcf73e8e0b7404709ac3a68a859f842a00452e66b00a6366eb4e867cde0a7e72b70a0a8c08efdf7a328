{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { drawerWidth, transition, container } from \"assets/jss/nextjs-material-dashboard.js\";\nimport { grayColor, primaryColor } from \"../../nextjs-material-dashboard\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: _objectSpread(_objectSpread({\n    [theme === null || theme === void 0 ? void 0 : theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\"\n  }, transition), {}, {\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  }),\n  content: {\n    marginTop: \"55px\",\n    padding: \"0px 0px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container: _objectSpread(_objectSpread({}, container), {}, {\n    paddingLeft: 0,\n    paddingRight: 0\n  }),\n  map: {\n    marginTop: \"70px\"\n  },\n  select: {\n    '&:before': {\n      borderBottom: \"1px solid \" + grayColor[4]\n    },\n    '&:after': {\n      borderBottom: props => \"2px solid \" + props.colorPrimary\n    },\n    '&:not(.Mui-disabled):hover::before': {\n      borderColor: props => props.colorPrimary\n    },\n    '&:not(.Mui-disabled)::before': {\n      borderColor: props => props.colorPrimary\n    },\n    '&:not(.Mui-disabled) svg': {\n      fill: props => props.colorPrimary\n    }\n  },\n  selectRoot: {\n    //...other styles\n    '&:focus': {\n      backgroundColor: 'transparent'\n    }\n  },\n  icon: {\n    fill: 'white'\n  },\n  root: {\n    color: 'white'\n  },\n  underline: {\n    '&:after': {\n      borderColor: \"red\"\n    }\n  },\n  label: {\n    '&.Mui-focused': {\n      color: props => props.colorPrimary\n    }\n  },\n  labelEnabled: {\n    color: props => props.colorPrimary\n  },\n  hrPrimaryColored: {\n    borderTop: props => \"1px solid \" + props.colorPrimary\n  },\n  turnStatusCompleted: {\n    color: props => {\n      var _props$turnStatusColo;\n\n      return (_props$turnStatusColo = props.turnStatusColors) === null || _props$turnStatusColo === void 0 ? void 0 : _props$turnStatusColo.COMPLETED;\n    }\n  },\n  turnStatusCancelled: {\n    color: props => {\n      var _props$turnStatusColo2;\n\n      return (_props$turnStatusColo2 = props.turnStatusColors) === null || _props$turnStatusColo2 === void 0 ? void 0 : _props$turnStatusColo2.CANCELLED;\n    }\n  },\n  turnStatusAbsent: {\n    color: props => {\n      var _props$turnStatusColo3;\n\n      return (_props$turnStatusColo3 = props.turnStatusColors) === null || _props$turnStatusColo3 === void 0 ? void 0 : _props$turnStatusColo3.ABSENT;\n    }\n  },\n  colorPrimary: {\n    color: props => props.colorPrimary\n  },\n  colorSecondary: {\n    color: props => props.colorSecondary\n  },\n  fillPrimary: {\n    fill: props => props.colorPrimary\n  },\n  fillSecondary: {\n    fill: props => props.colorSecondary\n  },\n  bgPrimary: {\n    background: props => props.colorPrimary\n  },\n  bgSecondary: {\n    background: props => props.colorSecondary\n  }\n});\n\nexport default appStyle;","map":null,"metadata":{},"sourceType":"module"}