{"ast":null,"code":"import { DELETE } from \"./FETCH.JS\";\nimport { POST } from \"./FETCH.JS\";\nimport { GET } from \"./FETCH.JS\";\nexport async function getNextTurns(patientId, consultorioId, token) {\n  let nextTurnsResponse;\n\n  try {\n    const response = await GET(consultorioId, token, \"turns/next?patientId=\" + patientId);\n    if (response.status !== 200) //Si falla se va al catch directamente\n      throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    nextTurnsResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    nextTurnsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return nextTurnsResponse;\n}\nexport async function getProfessionals(consultorioId, token) {\n  let professionalsResponse;\n\n  try {\n    console.log({\n      token\n    });\n    const response = await GET(consultorioId, token, \"professionals\");\n    console.log(response);\n    if (response.status !== 200) //Si falla se va al catch directamente\n      throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    professionalsResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    professionalsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return professionalsResponse;\n}\nexport async function getEspecialidades(consultorioId, token) {\n  let especialidadesResponse;\n\n  try {\n    console.log({\n      token\n    });\n    const response = await GET(consultorioId, token, \"especialidades\");\n    console.log(response);\n    if (response.status !== 200) //Si falla se va al catch directamente\n      throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    especialidadesResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    especialidadesResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return especialidadesResponse;\n}\nexport async function getSucursales(consultorioId, token) {\n  let sucursalesResponse;\n\n  try {\n    console.log({\n      token\n    });\n    const response = await GET(consultorioId, token, \"sucursales\");\n    console.log(response);\n    if (response.status !== 200) //Si falla se va al catch directamente\n      throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    sucursalesResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    sucursalesResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return sucursalesResponse;\n}\nexport async function getAvailableTurns(consultorioId, token, sucursalId, especialidadId, profesionalId, patientId) {\n  let turnsResponse;\n\n  try {\n    const response = await GET(consultorioId, token, `turns/available?sucursalId=${sucursalId}&especialidadId=${especialidadId}&profesionalId=${profesionalId}&pacienteId=${patientId}`);\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    turnsResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    turnsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return turnsResponse;\n}\nexport async function requestTurn(consultorioId, token, {\n  fecha,\n  hora,\n  patienteId: pacienteId,\n  horarioId\n}) {\n  let turnsResponse;\n  console.log({\n    fecha,\n    hora,\n    patienteId: pacienteId,\n    horarioId\n  });\n\n  try {\n    const response = await POST(consultorioId, token, `turns`, {\n      fecha,\n      hora,\n      pacienteId,\n      horarioId\n    });\n    console.log(response.headers.get(\"content-type\"));\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    turnsResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    console.dir({\n      err\n    });\n    turnsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return turnsResponse;\n}\nexport async function cancelTurn(consultorioId, token, turnId) {\n  let turnsResponse;\n\n  try {\n    const response = await DELETE(consultorioId, token, `turns/` + turnId);\n    console.log(response.headers.get(\"content-type\"));\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    turnsResponse = {\n      success: true,\n      data\n    };\n  } catch (err) {\n    console.dir({\n      err\n    });\n    turnsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return turnsResponse;\n}\nexport async function getTurnsHistory(consultorioId, token, patientId) {\n  let turnsResponse;\n\n  try {\n    const response = await GET(consultorioId, token, \"turns?patientId=\" + patientId);\n    console.log(response.headers.get(\"content-type\"));\n    if (response.status !== 200) //Si falla se va al catch directamente\n      if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n        const json = await response.json();\n        throw Error(json.detail);\n      } else throw Error(\"\");\n    const data = await response.json(); //Si falla al pedir los datos va al catch\n\n    turnsResponse = {\n      success: true,\n      data: data.filter(turn => turn.estado !== \"Pendiente\")\n    };\n  } catch (err) {\n    console.dir({\n      err\n    });\n    turnsResponse = {\n      success: false,\n      message: err.message\n    };\n  }\n\n  return turnsResponse;\n}","map":null,"metadata":{},"sourceType":"module"}