{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport URL from \"../constants/URL\";\nimport { POST } from \"./FETCH.JS\";\nimport { getToken } from \"./FETCH.JS\";\nimport { GET } from \"./FETCH.JS\";\nexport function logIn(_x, _x2, _x3, _x4) {\n  return _logIn.apply(this, arguments);\n}\n\nfunction _logIn() {\n  _logIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tipodoc, username, password, consultorioId) {\n    var loginResponse, token, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getToken();\n\n          case 3:\n            token = _context.sent;\n            _context.next = 6;\n            return POST(consultorioId, token, \"patients/login\", {\n              tipodoc: Number(tipodoc),\n              dni: Number(username),\n              password: password,\n              email: \"\"\n            });\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw Error(\"Ocurrió un error en el servidor. Intente nuevamente.\");\n\n          case 9:\n            _context.next = 11;\n            return response.json();\n\n          case 11:\n            data = _context.sent;\n\n            if (!(data.registrado === false)) {\n              _context.next = 14;\n              break;\n            }\n\n            throw Error(\"Sus datos están cargados pero no se encuentra registrado. Ingrese a \\\"registrarse\\\".\");\n\n          case 14:\n            if (!(data.id === 0)) {\n              _context.next = 16;\n              break;\n            }\n\n            throw Error(\"Nombre de usuario o contraseña incorrectos\");\n\n          case 16:\n            loginResponse = {\n              loggedIn: true,\n              data: data,\n              token: token\n            };\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            loginResponse = {\n              loggedIn: false,\n              message: _context.t0.message\n            };\n\n          case 22:\n            console.dir({\n              loginResponse: loginResponse\n            });\n            return _context.abrupt(\"return\", loginResponse);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n  return _logIn.apply(this, arguments);\n}\n\nexport function getPatient(_x5, _x6, _x7) {\n  return _getPatient.apply(this, arguments);\n}\n\nfunction _getPatient() {\n  _getPatient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, consultorioId, token) {\n    var patientResponse, r3, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return GET(consultorioId, token, \"patients/\" + id);\n\n          case 3:\n            r3 = _context2.sent;\n\n            if (!(r3.status != 200)) {\n              _context2.next = 6;\n              break;\n            }\n\n            throw new Error();\n\n          case 6:\n            _context2.next = 8;\n            return r3.json();\n\n          case 8:\n            data = _context2.sent;\n            //Si falla al pedir los datos del paciente va al catch\n            patientResponse = {\n              success: true,\n              data: data\n            };\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            patientResponse = {\n              success: false\n            };\n\n          case 15:\n            return _context2.abrupt(\"return\", patientResponse);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 12]]);\n  }));\n  return _getPatient.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}