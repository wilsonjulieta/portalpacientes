{"ast":null,"code":"import { destroyCookie } from \"nookies\";\nexport async function serverSidePropsAuth() {\n  // Fetch data from external API\n  // const res = await fetch(`https://rickandmortyapi.com/api/character`)\n  // const data = await res.json()\n  const withSession = true;\n  const data = await new Promise(resolve => {\n    setTimeout(() => {\n      resolve(35);\n    }, 0);\n  });\n  if (withSession) return {\n    props: {\n      data\n    }\n  };else return {\n    redirect: {\n      permanent: false,\n      destination: \"/page\"\n    },\n    props: {}\n  };\n}\nexport function logout(router) {\n  destroyCookie(null, \"id\", {\n    path: \"/\"\n  });\n  destroyCookie(null, \"dni\", {\n    path: \"/\"\n  });\n  sessionStorage.clear();\n  router.push(\"/\");\n}","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/utils/auth.js"],"names":["destroyCookie","serverSidePropsAuth","withSession","data","Promise","resolve","setTimeout","props","redirect","permanent","destination","logout","router","path","sessionStorage","clear","push"],"mappings":"AAAA,SAASA,aAAT,QAA8B,SAA9B;AAEA,OAAO,eAAeC,mBAAf,GAAqC;AACxC;AACA;AACA;AAEA,QAAMC,WAAW,GAAG,IAApB;AAEA,QAAMC,IAAI,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACxCC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAFS,EAEP,CAFO,CAAV;AAGH,GAJkB,CAAnB;AAMA,MAAIH,WAAJ,EACI,OAAO;AAAEK,IAAAA,KAAK,EAAE;AAAEJ,MAAAA;AAAF;AAAT,GAAP,CADJ,KAGI,OAAO;AACHK,IAAAA,QAAQ,EAAE;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,WAAW,EAAE;AAFP,KADP;AAKHH,IAAAA,KAAK,EAAE;AALJ,GAAP;AAOP;AAED,OAAO,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AAC3BZ,EAAAA,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa;AAACa,IAAAA,IAAI,EAAE;AAAP,GAAb,CAAb;AACAb,EAAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc;AAACa,IAAAA,IAAI,EAAE;AAAP,GAAd,CAAb;AACAC,EAAAA,cAAc,CAACC,KAAf;AACAH,EAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACH","sourcesContent":["import { destroyCookie } from \"nookies\";\r\n\r\nexport async function serverSidePropsAuth() {\r\n    // Fetch data from external API\r\n    // const res = await fetch(`https://rickandmortyapi.com/api/character`)\r\n    // const data = await res.json()\r\n\r\n    const withSession = true;\r\n\r\n    const data = await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(35);\r\n        }, 0)\r\n    })\r\n\r\n    if (withSession)\r\n        return { props: { data } }\r\n    else\r\n        return {\r\n            redirect: {\r\n                permanent: false,\r\n                destination: \"/page\",\r\n            },\r\n            props: {},\r\n        };\r\n}\r\n\r\nexport function logout(router) {\r\n    destroyCookie(null, \"id\", {path: \"/\"});\r\n    destroyCookie(null, \"dni\", {path: \"/\"});\r\n    sessionStorage.clear();\r\n    router.push(\"/\");\r\n}"]},"metadata":{},"sourceType":"module"}