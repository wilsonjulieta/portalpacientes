{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from \"react\";\nimport useTheme from \"../../hooks/useTheme\";\nconst styles = {\n  bgPrimary: {\n    background: props => props.colorPrimary\n  },\n  bgSecondary: {\n    background: props => props.colorSecondary\n  },\n  selected: {\n    background: props => props.colorPrimary,\n    \"& label\": {\n      color: \"white\"\n    }\n  },\n  liDefault: {\n    border: props => \"1px solid \" + props.colorPrimary,\n    borderBlockWidth: \"2px !important\"\n  },\n  liFirst: {\n    borderLeftWidth: \"2px !important\"\n  },\n  liLast: {\n    borderRightWidth: \"2px !important\"\n  }\n};\nexport function CustomRadioGroup({\n  name,\n  value,\n  setValue,\n  children\n}) {\n  const classes = useTheme(styles);\n  const values = useMemo(() => {\n    return children.map(({\n      props: radio\n    }) => ({\n      name: radio.name,\n      value: radio.value\n    }));\n  }, [children]);\n\n  const getOrderClasses = elem => {\n    function isFirst() {\n      return elem === values[0].value;\n    }\n\n    function isLast() {\n      return elem === values[values.length - 1].value;\n    }\n\n    let arr = [];\n    if (isFirst()) arr.push(classes.liFirst + \" rounded-l-xl\");\n    if (isLast()) arr.push(classes.liLast + \" rounded-r-xl\");\n    return arr.join(\" \");\n  };\n\n  return /*#__PURE__*/_jsx(\"ul\", {\n    className: `m-0 p-0 flex items-center w-fit text-sm font-medium text-white ${name}`,\n    children: values.map(radio => /*#__PURE__*/_jsx(\"li\", {\n      className: `cursor-pointer w-full ${classes.liDefault} ${getOrderClasses(radio.value)} select-none bg-white ${value === radio.value ? classes.selected : \"\"}`,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          id: `${radio.value}-${name}-radio-id`,\n          type: \"radio\",\n          defaultChecked: value === radio.value,\n          onClick: e => setValue(radio.value),\n          name: `${name}-radio`,\n          className: \"hidden\"\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: `${radio.value}-${name}-radio-id`,\n          className: \"cursor-pointer w-full text-center py-2 text-sm font-medium text-black\",\n          children: radio.name\n        })]\n      })\n    }, radio.value))\n  });\n}\nexport function CustomRadio() {\n  return \"\";\n}","map":null,"metadata":{},"sourceType":"module"}