{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GET } from \"./FETCH.JS\";\nexport function getHealthCareList(_x, _x2) {\n  return _getHealthCareList.apply(this, arguments);\n}\n\nfunction _getHealthCareList() {\n  _getHealthCareList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(consultorioId, token) {\n    var healthCareResponse, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return GET(consultorioId, token, \"healthCare\");\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            throw Error(\"\");\n\n          case 6:\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            //Si falla al pedir los datos del paciente va al catch\n            healthCareResponse = {\n              success: true,\n              data: data\n            };\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            healthCareResponse = {\n              success: false,\n              message: _context.t0.message\n            };\n\n          case 15:\n            return _context.abrupt(\"return\", healthCareResponse);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _getHealthCareList.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}