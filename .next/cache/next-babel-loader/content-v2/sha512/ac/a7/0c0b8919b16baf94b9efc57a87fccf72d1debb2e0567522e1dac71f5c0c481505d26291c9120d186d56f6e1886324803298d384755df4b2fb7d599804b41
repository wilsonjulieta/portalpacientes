{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect } from \"react\";\nimport getURL from \"../../constants/URL\";\nimport { useState } from \"react\";\nimport { getToken } from \"../../services/FETCH.JS\";\nimport { getPatient } from \"../../services/userAuth\";\nimport { validate } from \"../../services/register\";\nimport { cancelTurn, getAvailableTurns, getNextTurns, getProfessionals, getTurnsHistory } from \"../../services/turns\";\nexport default function Test() {\n  var _JSON$stringify;\n\n  var _useState = useState(),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    function func() {\n      return _func.apply(this, arguments);\n    }\n\n    function _func() {\n      _func = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var token, patientResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getToken(2);\n\n              case 2:\n                token = _context.sent;\n                _context.next = 5;\n                return getTurnsHistory(7, token, 117700);\n\n              case 5:\n                patientResponse = _context.sent;\n                console.log(patientResponse);\n                setState(patientResponse.data);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _func.apply(this, arguments);\n    }\n\n    func();\n  }, []);\n  console.log(state);\n  return (_JSON$stringify = JSON.stringify(state)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : null;\n}","map":null,"metadata":{},"sourceType":"module"}