{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst DEFAULT = {\n  colorPrimary: \"#e0115f\",\n  colorSecondary: \"blue\",\n  colorNeutral: \"#ddd\",\n  colorError: \"#aa0000\",\n  colorError2: \"#ffaaaa\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"violet\"],\n  cardHeaderSecondaryGradientColors: [\"#ff66cc\", \"pink\"],\n  turnStatusColors: {\n    COMPLETED: \"green\",\n    CANCELLED: \"orange\",\n    ABSENT: \"red\"\n  }\n};\nconst THEMES = [_objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#073763\",\n  colorSecondary: \"#f44336\",\n  colorNeutral: \"#d6d9ed\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#073763\", \"#839bb1\"],\n  cardHeaderSecondaryGradientColors: [\"#a30000\", \"#db4c4c\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"violet\",\n  colorError: \"orange\"\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"orange\",\n  colorSecondary: \"brown\",\n  cardHeaderPrimaryGradientColors: [\"orange\", \"yellow\"],\n  cardHeaderSecondaryGradientColors: [\"brown\", \"orange\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"turquoise\",\n  colorSecondary: \"orangeRed\",\n  cardHeaderPrimaryGradientColors: [\"turquoise\", \"cyan\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"purple\",\n  colorSecondary: \"magenta\",\n  colorNeutral: \"#f6d1de\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"purple\", \"#c8a2c8\"],\n  cardHeaderSecondaryGradientColors: [\"magenta\", \"pink\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"#C62828\", \"red\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"#087C9F\",\n  colorSecondary: \"#C62828\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"#087C9F\", \"#00a9a9\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"]\n}), _objectSpread(_objectSpread({}, DEFAULT), {}, {\n  colorPrimary: \"red\",\n  colorSecondary: \"purple\",\n  colorError: \"red\",\n  colorSuccess: \"green\",\n  cardHeaderPrimaryGradientColors: [\"yellow\", \"red\"],\n  cardHeaderSecondaryGradientColors: [\"blue\", \"lightblue\"],\n  turnStatusColors: {\n    COMPLETED: \"black\",\n    CANCELLED: \"pink\",\n    ABSENT: \"violet\"\n  }\n})]; //PARA QUE FUNCIONEN LAS BOX SHADOWS, LOS COLORES DEBERIAN ESTAR EN HEXA\n\nconst chroma = require('chroma-js');\n\nfunction colorToHex(color) {\n  const colorObj = chroma(color);\n  return colorObj.hex();\n}\n\nTHEMES.forEach((elem, index) => {\n  THEMES[index] = _objectSpread(_objectSpread({}, THEMES[index]), {}, {\n    colorPrimary: colorToHex(elem.colorPrimary),\n    colorSecondary: colorToHex(elem.colorSecondary),\n    colorNeutral: colorToHex(elem.colorNeutral),\n    colorError: colorToHex(elem.colorError),\n    colorError2: colorToHex(elem.colorError2),\n    colorSuccess: colorToHex(elem.colorSuccess),\n    cardHeaderPrimaryGradientColors: [colorToHex(elem.cardHeaderPrimaryGradientColors[0]), colorToHex(elem.cardHeaderPrimaryGradientColors[1])],\n    cardHeaderSecondaryGradientColors: [colorToHex(elem.cardHeaderSecondaryGradientColors[0]), colorToHex(elem.cardHeaderSecondaryGradientColors[1])]\n  });\n});\nexport default THEMES;","map":null,"metadata":{},"sourceType":"module"}