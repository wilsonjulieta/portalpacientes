{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { POST } from \"./FETCH.JS\";\nexport function validate(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _validate.apply(this, arguments);\n}\n\nfunction _validate() {\n  _validate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tipodoc, dni, mail, celular, consultorioId, token) {\n    var validateResponse, response, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return POST(consultorioId, token, \"patients/validate\", {\n              tipodoc: tipodoc,\n              dni: dni,\n              email: mail,\n              celular: celular\n            });\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!response.headers.get(\"content-type\").includes(\"application/json\")) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            json = _context.sent;\n            throw Error(json.detail);\n\n          case 12:\n            throw Error(\"\");\n\n          case 13:\n            _context.next = 15;\n            return response.json();\n\n          case 15:\n            _context.t0 = _context.sent;\n            validateResponse = {\n              success: true,\n              data: _context.t0\n            };\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t1 = _context[\"catch\"](0);\n            validateResponse = {\n              success: false\n            };\n\n          case 22:\n            return _context.abrupt(\"return\", validateResponse);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n  return _validate.apply(this, arguments);\n}\n\nexport function validateOTP(_x7, _x8, _x9, _x10) {\n  return _validateOTP.apply(this, arguments);\n}\n\nfunction _validateOTP() {\n  _validateOTP = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, otp, consultorioId, token) {\n    var validateResponse, response, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return POST(consultorioId, token, \"patients/validateOTP\", {\n              id: id,\n              otp: otp\n            });\n\n          case 3:\n            response = _context2.sent;\n\n            if (!(response.status !== 200)) {\n              _context2.next = 13;\n              break;\n            }\n\n            if (!response.headers.get(\"content-type\").includes(\"application/json\")) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 8;\n            return response.json();\n\n          case 8:\n            json = _context2.sent;\n            throw Error(json.detail);\n\n          case 12:\n            throw Error(\"\");\n\n          case 13:\n            _context2.next = 15;\n            return response.json();\n\n          case 15:\n            _context2.t0 = _context2.sent;\n            validateResponse = {\n              success: true,\n              data: _context2.t0\n            };\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t1 = _context2[\"catch\"](0);\n            validateResponse = {\n              success: false\n            };\n\n          case 22:\n            return _context2.abrupt(\"return\", validateResponse);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 19]]);\n  }));\n  return _validateOTP.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}