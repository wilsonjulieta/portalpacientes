{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/customInputStyle.js\";\nimport { ThemeContext } from \"../../context/ThemeContextProvider\";\nimport { useState } from \"react\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nexport default function CustomPasswordInput(_ref) {\n  var password = _ref.password,\n      setPassword = _ref.setPassword,\n      inputName = _ref.inputName,\n      handleChangeHook = _ref.handleChangeHook,\n      rest = _objectWithoutProperties(_ref, [\"password\", \"setPassword\", \"inputName\", \"handleChangeHook\"]);\n\n  var useStyles = makeStyles(styles);\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      setTheme = _useContext.setTheme;\n\n  var classes = useStyles(theme);\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      setShowPassword = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    if (handleChangeHook) handleChangeHook();\n    if (setPassword) setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsx(CustomInput, _objectSpread({\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: showPassword ? 'text' : 'password',\n      value: password,\n      name: inputName,\n      key: inputName,\n      onChange: handleChange,\n      endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsx(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          children: showPassword ? /*#__PURE__*/_jsx(VisibilityOff, {}) : /*#__PURE__*/_jsx(Visibility, {})\n        })\n      })\n    }\n  }, rest));\n}","map":null,"metadata":{},"sourceType":"module"}