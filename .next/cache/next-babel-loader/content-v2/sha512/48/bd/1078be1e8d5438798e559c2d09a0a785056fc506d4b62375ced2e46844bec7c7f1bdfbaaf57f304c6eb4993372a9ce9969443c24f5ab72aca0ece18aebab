{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/tasksStyle.js\";\nexport default function Tasks(props) {\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n\n  var _React$useState = React.useState(_toConsumableArray(props.checkedIndexes)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  var tasksIndexes = props.tasksIndexes,\n      tasks = props.tasks,\n      rtlActive = props.rtlActive;\n  var tableCellClasses = classnames(classes.tableCell, _defineProperty({}, classes.tableCellRTL, rtlActive));\n  return /*#__PURE__*/_jsx(Table, {\n    className: classes.table,\n    children: /*#__PURE__*/_jsx(TableBody, {\n      children: tasksIndexes.map(function (value) {\n        return /*#__PURE__*/_jsxs(TableRow, {\n          className: classes.tableRow,\n          children: [/*#__PURE__*/_jsx(TableCell, {\n            className: tableCellClasses,\n            children: /*#__PURE__*/_jsx(Checkbox, {\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              onClick: function onClick() {\n                return handleToggle(value);\n              },\n              checkedIcon: /*#__PURE__*/_jsx(Check, {\n                className: classes.checkedIcon\n              }),\n              icon: /*#__PURE__*/_jsx(Check, {\n                className: classes.uncheckedIcon\n              }),\n              classes: {\n                checked: classes.checked,\n                root: classes.root\n              }\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            className: tableCellClasses,\n            children: tasks[value]\n          }), /*#__PURE__*/_jsxs(TableCell, {\n            className: classes.tableActions,\n            children: [/*#__PURE__*/_jsx(Tooltip, {\n              id: \"tooltip-top\",\n              title: \"Edit Task\",\n              placement: \"top\",\n              classes: {\n                tooltip: classes.tooltip\n              },\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"Edit\",\n                className: classes.tableActionButton,\n                children: /*#__PURE__*/_jsx(Edit, {\n                  className: classes.tableActionButtonIcon + \" \" + classes.edit\n                })\n              })\n            }), /*#__PURE__*/_jsx(Tooltip, {\n              id: \"tooltip-top-start\",\n              title: \"Remove\",\n              placement: \"top\",\n              classes: {\n                tooltip: classes.tooltip\n              },\n              children: /*#__PURE__*/_jsx(IconButton, {\n                \"aria-label\": \"Close\",\n                className: classes.tableActionButton,\n                children: /*#__PURE__*/_jsx(Close, {\n                  className: classes.tableActionButtonIcon + \" \" + classes.close\n                })\n              })\n            })]\n          })]\n        }, value);\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}