{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\DATOS\\\\THISYS\\\\SISTEMA\\\\PORTAL WEB\\\\Proyecto-Salud\\\\components\\\\CustomInput\\\\CustomPasswordInput.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/customInputStyle.js\";\nimport { ThemeContext } from \"../../context/ThemeContextProvider\";\nimport { useState } from \"react\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nexport default function CustomPasswordInput(_ref) {\n  _s();\n\n  let {\n    password,\n    setPassword,\n    inputName,\n    handleChangeHook\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"password\", \"setPassword\", \"inputName\", \"handleChangeHook\"]);\n\n  const useStyles = makeStyles(styles);\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  const classes = useStyles(theme);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(prev => !prev);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n\n  const handleChange = event => {\n    if (handleChangeHook) handleChangeHook();\n    if (setPassword) setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomInput, _objectSpread({\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: showPassword ? 'text' : 'password',\n      value: password,\n      name: inputName,\n      key: inputName,\n      onChange: handleChange,\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomPasswordInput, \"zObYasUdmBMME5DPXQLVv8EuTdU=\", true);\n\n_c = CustomPasswordInput;\nCustomPasswordInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPasswordInput\");","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/components/CustomInput/CustomPasswordInput.js"],"names":["React","useContext","classNames","PropTypes","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","ThemeContext","useState","IconButton","InputAdornment","Visibility","VisibilityOff","CustomInput","CustomPasswordInput","password","setPassword","inputName","handleChangeHook","rest","useStyles","theme","setTheme","classes","handleClickShowPassword","setShowPassword","prev","handleMouseDownPassword","event","preventDefault","showPassword","handleChange","target","value","fullWidth","type","name","key","onChange","endAdornment","propTypes","labelText","node","labelProps","object","id","string","inputProps","formControlProps","error","bool","success"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n// @material-ui/icons\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/customInputStyle.js\";\r\nimport { ThemeContext } from \"../../context/ThemeContextProvider\";\r\nimport { useState } from \"react\";\r\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\n\r\nexport default function CustomPasswordInput({ password, setPassword, inputName, handleChangeHook, ...rest }) {\r\n  const useStyles = makeStyles(styles);\r\n\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const classes = useStyles(theme);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(prev => !prev);\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    if (handleChangeHook)\r\n      handleChangeHook();\r\n\r\n    if (setPassword)\r\n      setPassword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <CustomInput\r\n      formControlProps={{\r\n        fullWidth: true,\r\n      }}\r\n      inputProps={{\r\n        type: showPassword ? 'text' : 'password',\r\n        value: password,\r\n        name: inputName,\r\n        key: inputName,\r\n        onChange: handleChange,\r\n        endAdornment:\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              onMouseDown={handleMouseDownPassword}\r\n            >\r\n              {showPassword ? <VisibilityOff /> : <Visibility />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nCustomPasswordInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}