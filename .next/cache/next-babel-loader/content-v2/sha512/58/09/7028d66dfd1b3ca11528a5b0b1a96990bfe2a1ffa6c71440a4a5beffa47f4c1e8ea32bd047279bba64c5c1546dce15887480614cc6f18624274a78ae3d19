{"ast":null,"code":"import nookies, { parseCookies } from 'nookies';\nimport { getToken } from '../services/FETCH.JS'; // Si el token esta seteado, lo devuelve dependiendo el contexto (En session desde el cliente, en cookies desde el servidor.)\n\nexport default async function GLOBAL_GET_TOKEN(ctx) {\n  if (true) {\n    // Client-side-only code\n    const cookies = parseCookies();\n    return cookies.token;\n  } else {\n    // Server-side-only code\n    // throw Error();\n    const cookies = nookies.get(ctx);\n\n    try {\n      const token = await getToken(cookies.consultorioId);\n      nookies.set(ctx, 'token', token, {\n        maxAge: 24 * 60 * 60,\n        path: '/'\n      });\n      return token;\n    } catch (error) {\n      return \"\";\n    }\n  }\n}\n_c = GLOBAL_GET_TOKEN;\n\nvar _c;\n\n$RefreshReg$(_c, \"GLOBAL_GET_TOKEN\");","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/utils/token.js"],"names":["nookies","parseCookies","getToken","GLOBAL_GET_TOKEN","ctx","cookies","token","get","consultorioId","set","maxAge","path","error"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,YAAlB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;AACA,eAAe,eAAeC,gBAAf,CAAgCC,GAAhC,EAAqC;AAChD,YAAmC;AAC/B;AACA,UAAMC,OAAO,GAAGJ,YAAY,EAA5B;AAEA,WAAOI,OAAO,CAACC,KAAf;AACH,GALD,MAMK;AACD;AACA;AACA,UAAMD,OAAO,GAAGL,OAAO,CAACO,GAAR,CAAYH,GAAZ,CAAhB;;AAEA,QAAI;AACA,YAAME,KAAK,GAAG,MAAMJ,QAAQ,CAACG,OAAO,CAACG,aAAT,CAA5B;AACAR,MAAAA,OAAO,CAACS,GAAR,CAAYL,GAAZ,EAAiB,OAAjB,EAA0BE,KAA1B,EAAiC;AAC7BI,QAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EADW;AAE7BC,QAAAA,IAAI,EAAE;AAFuB,OAAjC;AAKA,aAAOL,KAAP;AACH,KARD,CAQE,OAAOM,KAAP,EAAc;AACZ,aAAO,EAAP;AACH;AAEJ;AACJ;KAzB6BT,gB","sourcesContent":["import nookies, { parseCookies } from 'nookies'\r\nimport { getToken } from '../services/FETCH.JS';\r\n\r\n// Si el token esta seteado, lo devuelve dependiendo el contexto (En session desde el cliente, en cookies desde el servidor.)\r\nexport default async function GLOBAL_GET_TOKEN(ctx) {\r\n    if (typeof window !== \"undefined\") {\r\n        // Client-side-only code\r\n        const cookies = parseCookies();\r\n\r\n        return cookies.token;\r\n    }\r\n    else {\r\n        // Server-side-only code\r\n        // throw Error();\r\n        const cookies = nookies.get(ctx);\r\n\r\n        try {\r\n            const token = await getToken(cookies.consultorioId);\r\n            nookies.set(ctx, 'token', token, {\r\n                maxAge: 24 * 60 * 60,\r\n                path: '/',\r\n            })\r\n\r\n            return token;\r\n        } catch (error) {\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}