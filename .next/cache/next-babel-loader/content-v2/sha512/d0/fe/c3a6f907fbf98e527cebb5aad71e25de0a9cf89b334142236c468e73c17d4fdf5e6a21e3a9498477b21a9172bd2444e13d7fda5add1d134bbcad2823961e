{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\DATOS\\\\THISYS\\\\SISTEMA\\\\PORTAL WEB\\\\Proyecto-Salud\\\\pages\\\\admin\\\\[consultorioId]\\\\solicitarTurno.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport avatar from \"assets/img/placeholderPic.jpg\";\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormHelperText, List, ListItem, ListItemAvatar, ListItemText, MenuItem, NativeSelect, Select } from \"@material-ui/core\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport CalendarIcon from '@material-ui/icons/Today';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CreateIcon from '@material-ui/icons/Create';\nimport AddIcon from '@material-ui/icons/Add';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport adminStyles from \"assets/jss/nextjs-material-dashboard/layouts/adminStyle.js\";\nimport { showLoad } from \"../../../utils/loading\";\nimport { useEffect } from \"react\";\nimport { TURNOS_DISPONIBLES } from \"../../../utils/mockData\";\nimport { useRef } from \"react\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport SendIcon from '@material-ui/icons/Send';\nimport { resetFocus } from \"../../../utils/focus\";\nimport nookies from 'nookies';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { getAvailableTurns, getEspecialidades, getProfessionals, getSucursales, requestTurn } from \"../../../services/turns\";\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\nimport MessageDialog from \"../../../components/Dialogs/MessageDialog\";\nimport { groupBy } from \"../../../utils/algorithms\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\nimport { fullDateToDayMonth, getFullNameOfDate } from \"../../../utils/dates\";\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\nimport { useRouter } from \"next/router\";\nexport async function getServerSideProps(context) {\n  const {\n    consultorioId\n  } = context.query;\n  const cookies = nookies.get(context);\n  const professionalsResponse = await getProfessionals(consultorioId, await GLOBAL_GET_TOKEN(context));\n\n  if (!professionalsResponse.success) {\n    return {\n      redirect: {\n        destination: '/login/' + consultorioId + \"/server-error\",\n        permanent: false\n      }\n    };\n  }\n\n  const especialidadesResponse = await getEspecialidades(consultorioId, await GLOBAL_GET_TOKEN(context));\n\n  if (!especialidadesResponse.success) {\n    return {\n      redirect: {\n        destination: '/login/' + consultorioId + \"/server-error\",\n        permanent: false\n      }\n    };\n  }\n\n  const sucursalesResponse = await getSucursales(consultorioId, await GLOBAL_GET_TOKEN(context));\n\n  if (!sucursalesResponse.success) {\n    return {\n      redirect: {\n        destination: '/login/' + consultorioId + \"/server-error\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      consultorioId,\n      professionals: professionalsResponse.data,\n      especialidades: especialidadesResponse.data,\n      sucursales: sucursalesResponse.data\n    }\n  };\n}\n\nconst styles = _objectSpread(_objectSpread({}, adminStyles()), {}, {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  },\n  description: {\n    fontSize: \"1.25rem\"\n  },\n  colorPrimary: {\n    color: props => props.colorPrimary\n  },\n  profesionalImg: {\n    width: \"10%\",\n    border: props => \"1px solid \" + props.colorPrimary,\n    borderRadius: \"100%\"\n  }\n});\n\nfunction SolicitarTurno({\n  professionals,\n  especialidades,\n  sucursales,\n  consultorioId\n}) {\n  const classes = useTheme(styles);\n  console.log({\n    professionals,\n    especialidades,\n    sucursales\n  });\n  const messageDialog = useContext(MessageDialogContext);\n  /* DIALOG VERIFICACION */\n\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleClose = () => {// Do something when the dialog is closed\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  /* DIALOG VERIFICACION */\n\n\n  const {\n    0: turnsGrouped,\n    1: setTurnsGrouped\n  } = useState([]);\n  const {\n    0: turnoSeleccionado,\n    1: setTurnoSeleccionado\n  } = useState({});\n  const {\n    0: especialidadId,\n    1: setEspecialidadId\n  } = useState(\"\");\n  const {\n    0: profesionalId,\n    1: setProfesionalId\n  } = useState(\"\");\n  const {\n    0: sucursalId,\n    1: setSucursalId\n  } = useState(\"\");\n  const professionalsFiltered = professionals.filter(professional => especialidadId === \"\" || professional.specialty.id === especialidadId);\n  useEffect(() => {\n    async function getTurns() {\n      var _groupBy, _groupBy$map;\n\n      const turnsResponse = await getAvailableTurns(consultorioId, await GLOBAL_GET_TOKEN(), sucursalId, especialidadId, profesionalId);\n\n      if (!turnsResponse.success) {\n        messageDialog.defaultOpen();\n        return;\n      }\n\n      const turns = turnsResponse.data; // Agrupar turnos\n\n      const turnsGrouped = (_groupBy = groupBy(turns, \"sucursal\")) === null || _groupBy === void 0 ? void 0 : (_groupBy$map = _groupBy.map(group => ({\n        sucursal: group.sucursal,\n        content: group.content.slice(0, 10)\n      }))) === null || _groupBy$map === void 0 ? void 0 : _groupBy$map.sort((a, b) => a.sucursal.localeCompare(b.sucursal));\n      console.log({\n        turns,\n        turnsGrouped\n      });\n      setTurnsGrouped(turnsGrouped !== null && turnsGrouped !== void 0 ? turnsGrouped : []);\n    }\n\n    if (especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\") return;\n    getTurns();\n  }, [especialidadId, profesionalId, sucursalId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        classes: {\n          root: \"\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            style: {\n              paddingTop: \"6px\",\n              paddingBottom: \"6px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.cardTitleWhite,\n              children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 54\n              }, this), \"Solicitud de Turnos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              padding: \"10px 20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              style: {\n                rowGap: \"1.5em\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Seleccione Especialidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'especialidad',\n                      key: 'especialidad',\n                      value: especialidadId,\n                      id: 'uncontrolled-native',\n                      required: false,\n                      onChange: e => {\n                        setEspecialidadId(e.target.value);\n                        setProfesionalId(\"\");\n                      }\n                    },\n                    children: especialidades.map(especialidad => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: especialidad.id,\n                      children: especialidad.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)]\n                }, \"especialidadForm\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Seleccione Profesional\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'profesional',\n                      key: 'profesional',\n                      value: profesionalId,\n                      id: 'uncontrolled-native',\n                      required: true,\n                      onChange: e => setProfesionalId(e.target.value)\n                    },\n                    children: professionalsFiltered.length > 0 ? professionalsFiltered.map(professional => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: professional.id,\n                      children: professional.fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 27\n                    }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                      style: {\n                        color: \"red\",\n                        pointerEvents: \"none\"\n                      },\n                      value: 2,\n                      children: \"No hay profesionales para la especialidad seleccionada.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, \"profesionalForm\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  disabled: especialidadId === \"\" && profesionalId === \"\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.label + \" \" + classes.labelEnabled,\n                    variant: \"standard\",\n                    htmlFor: \"uncontrolled-native\",\n                    children: \"Seleccione Lugar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    className: classes.select,\n                    classes: {\n                      root: classes.selectRoot\n                    },\n                    inputProps: {\n                      name: 'lugar',\n                      key: 'lugar',\n                      value: sucursalId,\n                      id: 'uncontrolled-native',\n                      required: true,\n                      onChange: e => setSucursalId(e.target.value)\n                    },\n                    children: sucursales.map(sucursal => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: sucursal.id,\n                      children: sucursal.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this)]\n                }, \"lugarForm\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TurnosDisponibles, {\n          turnsGrouped: turnsGrouped,\n          setOpen: setOpen,\n          setTurnoSeleccionado: setTurnoSeleccionado,\n          active: !(especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      open: open,\n      onConfirm: () => {},\n      message: \"hola\",\n      setOpen: setOpen,\n      turno: turnoSeleccionado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\nfunction TurnosDisponibles({\n  turnsGrouped,\n  setOpen,\n  setTurnoSeleccionado,\n  active\n}) {\n  const classes = useTheme(styles);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [turnsGrouped.map(turnsGroup => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: \"10px\",\n          marginBottom: \"10px\"\n        },\n        className: \"proxTurnoCard\",\n        children: /*#__PURE__*/_jsxDEV(CardHeader, {\n          style: {\n            paddingTop: \"4px\",\n            paddingBottom: \"4px\"\n          },\n          color: \"secondary\",\n          children: [/*#__PURE__*/_jsxDEV(PlaceIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 91\n          }, this), \" Lugar de atenci\\xF3n: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: turnsGroup.sucursal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 131\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GridContainer, {\n        style: {\n          margin: \"-10px -16px\"\n        },\n        children: turnsGroup.content.map((turno, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n          style: {\n            padding: \"8px 16px\",\n            marginTop: \"24px\"\n          },\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 6,\n          xl: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: 0,\n              height: \"100%\"\n            },\n            className: \"solicitarTurnoCard\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              style: {\n                paddingTop: \"2px\",\n                paddingBottom: \"2px\",\n                paddingInline: \"0\"\n              },\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"\",\n                style: {\n                  fontSize: '20px',\n                  margin: \"auto\",\n                  display: \"block\",\n                  textAlign: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                  style: {\n                    fontSize: '30px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 122\n                }, this), \"\\xA0\", getFullNameOfDate(turno.fecha, turno.hora)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              style: {\n                paddingBlock: \"8px\",\n                paddingInline: \"16px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"start\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: classes.profesionalImg,\n                src: avatar,\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontSize: '18px',\n                  width: \"60%\",\n                  textAlign: \"left\",\n                  paddingInline: \"6px\",\n                  display: \"block\"\n                },\n                children: [\"Dr.  \", turno.profesional]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 160\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                style: {\n                  paddingRight: \"10px\",\n                  paddingLeft: \"10px\",\n                  margin: \"auto\",\n                  display: \"block\",\n                  width: \"10%\",\n                  borderRadius: \"2rem\",\n                  minWidth: \"80px\"\n                },\n                size: \"small\",\n                onClick: () => {\n                  setOpen(true);\n                  setTurnoSeleccionado(turno);\n                },\n                children: \"Solicitar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, turno.fecha + turno.profesional + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }, this)]\n    }, turnsGroup.sucursal, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 37\n    }, this)), turnsGrouped.length === 0 && active && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No hay turnos disponibles seg\\xFAn lo seleccionado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true);\n}\n\nfunction ConfirmationDialog({\n  open,\n  setOpen,\n  turno\n}) {\n  const classes = useTheme(styles);\n\n  const handleKeys = event => {\n    if (event.key === \"Enter\") {\n      setOpen(false);\n    }\n\n    if (event.key === \"Escape\") {\n      setOpen(false);\n    }\n  };\n\n  const {\n    user\n  } = useContext(UserContext);\n  console.log(user);\n  const messageDialog = useContext(MessageDialogContext);\n  const router = useRouter();\n\n  const handleConfirm = async () => {\n    const {\n      profesionalId: professionalId,\n      fecha,\n      hora,\n      patienteId,\n      horarioId\n    } = _objectSpread(_objectSpread({}, turno), {}, {\n      patienteId: user.id\n    });\n\n    const requestTurnResponse = await requestTurn(user.consultorioId, await GLOBAL_GET_TOKEN(), {\n      professionalId,\n      fecha,\n      hora,\n      patienteId,\n      horarioId\n    });\n    console.log(requestTurnResponse);\n\n    if (!requestTurnResponse.success) {\n      messageDialog.reset();\n      messageDialog.setMessage(requestTurnResponse.message);\n      messageDialog.open();\n      return;\n    }\n\n    messageDialog.messageOpen(\"Se reservó su turno con éxito.\");\n    router.push(\"/admin/\" + user.consultorioId + \"/dashboard\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(resetFocus, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onKeyDown: handleKeys,\n    onClose: handleClose,\n    className: \"solicitarTurnoDialog\",\n    children: /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: \"10px\",\n          marginBottom: \"10px\"\n        },\n        className: \"proxTurnoCard\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"dialogCardHeader\",\n          style: {\n            fontSize: \"2rem\",\n            padding: \"8px\"\n          },\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            className: \"dialogCardHeader\",\n            style: {\n              fontSize: \"2rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 113\n          }, this), \" \\xBFDesea confirmar la solicitud de este turno?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          style: {\n            paddingTop: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: classes.colorPrimary,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '20px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: fullDateToDayMonth(turno.fecha)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 105\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '13px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: turno.hora\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 57\n                    }, this), \"hs\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mx-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Especialidad: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 59\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.especialidad\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 80\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 152\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Lugar de Atenci\\xF3n: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 59\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.sucursal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 92\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 160\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Fecha: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 59\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: getFullNameOfDate(turno.fecha, turno.hora)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 73\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 169\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Profesional: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 59\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.profesional\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 79\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 150\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      fontSize: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Motivo: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 59\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      style: {\n                        fontSize: '14px'\n                      },\n                      children: turno.motivo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 74\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 140\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              marginBottom: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"secondaryOutlined\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleConfirm,\n              color: \"primary\",\n              children: \"Confirmar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n}\n\nSolicitarTurno.layout = Admin;\nexport default SolicitarTurno;","map":{"version":3,"sources":["C:/DATOS/THISYS/SISTEMA/PORTAL WEB/Proyecto-Salud/pages/admin/[consultorioId]/solicitarTurno.js"],"names":["React","useContext","useState","makeStyles","InputLabel","Admin","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","avatar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormHelperText","List","ListItem","ListItemAvatar","ListItemText","MenuItem","NativeSelect","Select","useTheme","CalendarIcon","PersonIcon","CreateIcon","AddIcon","PlaceIcon","adminStyles","showLoad","useEffect","TURNOS_DISPONIBLES","useRef","MUIButton","SendIcon","resetFocus","nookies","CheckCircleIcon","getAvailableTurns","getEspecialidades","getProfessionals","getSucursales","requestTurn","GLOBAL_GET_TOKEN","MessageDialog","groupBy","UserContext","fullDateToDayMonth","getFullNameOfDate","MessageDialogContext","useRouter","getServerSideProps","context","consultorioId","query","cookies","get","professionalsResponse","success","redirect","destination","permanent","especialidadesResponse","sucursalesResponse","props","professionals","data","especialidades","sucursales","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","description","colorPrimary","profesionalImg","width","border","borderRadius","SolicitarTurno","classes","console","log","messageDialog","open","setOpen","handleClose","handleCancel","handleOpen","turnsGrouped","setTurnsGrouped","turnoSeleccionado","setTurnoSeleccionado","especialidadId","setEspecialidadId","profesionalId","setProfesionalId","sucursalId","setSucursalId","professionalsFiltered","filter","professional","specialty","id","getTurns","turnsResponse","defaultOpen","turns","map","group","sucursal","content","slice","sort","a","b","localeCompare","root","paddingTop","paddingBottom","padding","rowGap","label","labelEnabled","select","selectRoot","name","key","value","required","onChange","e","target","especialidad","nombre","length","fullName","pointerEvents","TurnosDisponibles","active","turnsGroup","turno","index","height","paddingInline","display","textAlign","fecha","hora","paddingBlock","alignItems","justifyContent","profesional","paddingRight","paddingLeft","minWidth","ConfirmationDialog","handleKeys","event","user","router","handleConfirm","professionalId","patienteId","horarioId","requestTurnResponse","reset","setMessage","message","messageOpen","push","setTimeout","motivo","layout"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,aAAhC,EAA+CC,iBAA/C,EAAkEC,WAAlE,EAA+EC,WAA/E,EAA4FC,cAA5F,EAA4GC,IAA5G,EAAkHC,QAAlH,EAA4HC,cAA5H,EAA4IC,YAA5I,EAA0JC,QAA1J,EAAoKC,YAApK,EAAkLC,MAAlL,QAAgM,mBAAhM;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,WAAP,MAAwB,4DAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAOC,OAAP,MAAoB,SAApB;AAIA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,gBAA/C,EAAiEC,aAAjE,EAAgFC,WAAhF,QAAmG,yBAAnG;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,sBAAtD;AACA,SAASC,oBAAT,QAAqC,+CAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,OAAO,CAACE,KAAlC;AAEA,QAAMC,OAAO,GAAGnB,OAAO,CAACoB,GAAR,CAAYJ,OAAZ,CAAhB;AAEA,QAAMK,qBAAqB,GAAG,MAAMjB,gBAAgB,CAACa,aAAD,EAAgB,MAAMV,gBAAgB,CAACS,OAAD,CAAtC,CAApD;;AAEA,MAAI,CAACK,qBAAqB,CAACC,OAA3B,EAAoC;AAClC,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,YAAYP,aAAZ,GAA4B,eADjC;AAERQ,QAAAA,SAAS,EAAE;AAFH;AADL,KAAP;AAMD;;AAED,QAAMC,sBAAsB,GAAG,MAAMvB,iBAAiB,CAACc,aAAD,EAAgB,MAAMV,gBAAgB,CAACS,OAAD,CAAtC,CAAtD;;AAEA,MAAI,CAACU,sBAAsB,CAACJ,OAA5B,EAAqC;AACnC,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,YAAYP,aAAZ,GAA4B,eADjC;AAERQ,QAAAA,SAAS,EAAE;AAFH;AADL,KAAP;AAMD;;AAED,QAAME,kBAAkB,GAAG,MAAMtB,aAAa,CAACY,aAAD,EAAgB,MAAMV,gBAAgB,CAACS,OAAD,CAAtC,CAA9C;;AAEA,MAAI,CAACW,kBAAkB,CAACL,OAAxB,EAAiC;AAC/B,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,YAAYP,aAAZ,GAA4B,eADjC;AAERQ,QAAAA,SAAS,EAAE;AAFH;AADL,KAAP;AAMD;;AAED,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAEX,MAAAA,aAAF;AAAiBY,MAAAA,aAAa,EAAER,qBAAqB,CAACS,IAAtD;AAA4DC,MAAAA,cAAc,EAAEL,sBAAsB,CAACI,IAAnG;AAAyGE,MAAAA,UAAU,EAAEL,kBAAkB,CAACG;AAAxI;AAAT,GAAP;AACD;;AAED,MAAMG,MAAM,mCACPzC,WAAW,EADJ;AAEV0C,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,KAAK,EAAE,uBADU;AAEjBC,IAAAA,MAAM,EAAE,GAFS;AAGjBC,IAAAA,QAAQ,EAAE,MAHO;AAIjBC,IAAAA,SAAS,EAAE,GAJM;AAKjBC,IAAAA,YAAY,EAAE;AALG,GAFT;AASVC,EAAAA,cAAc,EAAE;AACdL,IAAAA,KAAK,EAAE,SADO;AAEdG,IAAAA,SAAS,EAAE,KAFG;AAGdG,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,UAAU,EAAE,4CALE;AAMdJ,IAAAA,YAAY,EAAE,KANA;AAOdK,IAAAA,cAAc,EAAE;AAPF,GATN;AAkBVC,EAAAA,WAAW,EAAE;AACXR,IAAAA,QAAQ,EAAE;AADC,GAlBH;AAqBVS,EAAAA,YAAY,EAAE;AACZX,IAAAA,KAAK,EAAGP,KAAD,IAAWA,KAAK,CAACkB;AADZ,GArBJ;AAwBVC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAE,KADO;AAEdC,IAAAA,MAAM,EAAGrB,KAAD,IAAW,eAAeA,KAAK,CAACkB,YAF1B;AAGdI,IAAAA,YAAY,EAAE;AAHA;AAxBN,EAAZ;;AA+BA,SAASC,cAAT,CAAwB;AAAEtB,EAAAA,aAAF;AAAiBE,EAAAA,cAAjB;AAAiCC,EAAAA,UAAjC;AAA6Cf,EAAAA;AAA7C,CAAxB,EAAsF;AACpF,QAAMmC,OAAO,GAAGlE,QAAQ,CAAC+C,MAAD,CAAxB;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEzB,IAAAA,aAAF;AAAiBE,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,GAAZ;AAEA,QAAMuB,aAAa,GAAGlG,UAAU,CAACwD,oBAAD,CAAhC;AAEA;;AACA,QAAM;AAAA,OAAC2C,IAAD;AAAA,OAAOC;AAAP,MAAkBnG,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMoG,WAAW,GAAG,MAAM,CACxB;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;AAGA;;;AAEA,QAAM;AAAA,OAACI,YAAD;AAAA,OAAeC;AAAf,MAAkCxG,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACyG,iBAAD;AAAA,OAAoBC;AAApB,MAA4C1G,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM;AAAA,OAAC2G,cAAD;AAAA,OAAiBC;AAAjB,MAAsC5G,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAAC6G,aAAD;AAAA,OAAgBC;AAAhB,MAAoC9G,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC+G,UAAD;AAAA,OAAaC;AAAb,MAA8BhH,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMiH,qBAAqB,GAAG1C,aAAa,CAAC2C,MAAd,CAAqBC,YAAY,IAAIR,cAAc,KAAK,EAAnB,IAAyBQ,YAAY,CAACC,SAAb,CAAuBC,EAAvB,KAA8BV,cAA5F,CAA9B;AAEAvE,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekF,QAAf,GAA0B;AAAA;;AACxB,YAAMC,aAAa,GAAG,MAAM3E,iBAAiB,CAACe,aAAD,EAAgB,MAAMV,gBAAgB,EAAtC,EAA0C8D,UAA1C,EAAsDJ,cAAtD,EAAsEE,aAAtE,CAA7C;;AAEA,UAAI,CAACU,aAAa,CAACvD,OAAnB,EAA4B;AAC1BiC,QAAAA,aAAa,CAACuB,WAAd;AACA;AACD;;AAED,YAAMC,KAAK,GAAGF,aAAa,CAAC/C,IAA5B,CARwB,CAUxB;;AAEA,YAAM+B,YAAY,eAAGpD,OAAO,CAACsE,KAAD,EAAQ,UAAR,CAAV,6DAAG,SACjBC,GADiB,CACbC,KAAK,KAAK;AAAEC,QAAAA,QAAQ,EAAED,KAAK,CAACC,QAAlB;AAA4BC,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoB,CAApB,EAAuB,EAAvB;AAArC,OAAL,CADQ,CAAH,iDAAG,aAEjBC,IAFiB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,QAAF,CAAWM,aAAX,CAAyBD,CAAC,CAACL,QAA3B,CAFE,CAArB;AAIA7B,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEyB,QAAAA,KAAF;AAASlB,QAAAA;AAAT,OAAZ;AAEAC,MAAAA,eAAe,CAACD,YAAD,aAACA,YAAD,cAACA,YAAD,GAAiB,EAAjB,CAAf;AACD;;AAED,QAAII,cAAc,KAAK,EAAnB,IAAyBE,aAAa,KAAK,EAA3C,IAAiDE,UAAU,KAAK,EAApE,EACE;AAEFO,IAAAA,QAAQ;AACT,GA1BQ,EA0BN,CAACX,cAAD,EAAiBE,aAAjB,EAAgCE,UAAhC,CA1BM,CAAT;AA4BA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAkC,QAAA,OAAO,EAAE;AAAEoB,UAAAA,IAAI,EAAE;AAAR,SAA3C;AAAA,gCACE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE,KAAd;AAAqBC,cAAAA,aAAa,EAAE;AAApC,aAAnC;AAAA,mCACE;AAAI,cAAA,SAAS,EAAEvC,OAAO,CAACZ,cAAvB;AAAA,sCAAuC,QAAC,YAAD;AAAc,gBAAA,QAAQ,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAAEoD,cAAAA,OAAO,EAAE;AAAX,aAAjB;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,KAAK,EAAE;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAtB;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAA0B,gBAAA,EAAE,EAAE,CAA9B;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEzC,OAAO,CAAC0C,KAAR,GAAgB,GAAhB,GAAsB1C,OAAO,CAAC2C,YAArD;AAAmE,oBAAA,OAAO,EAAC,UAA3E;AAAsF,oBAAA,OAAO,EAAC,qBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAE3C,OAAO,CAAC4C,MADrB;AAEE,oBAAA,OAAO,EAAE;AAAEP,sBAAAA,IAAI,EAAErC,OAAO,CAAC6C;AAAhB,qBAFX;AAGE,oBAAA,UAAU,EAAE;AACVC,sBAAAA,IAAI,EAAE,cADI;AAEVC,sBAAAA,GAAG,EAAE,cAFK;AAGVC,sBAAAA,KAAK,EAAEnC,cAHG;AAIVU,sBAAAA,EAAE,EAAE,qBAJM;AAKV0B,sBAAAA,QAAQ,EAAE,KALA;AAMVC,sBAAAA,QAAQ,EAAGC,CAAD,IAAO;AAAErC,wBAAAA,iBAAiB,CAACqC,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAjB;AAAmChC,wBAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAsB;AANlE,qBAHd;AAAA,8BAaIrC,cAAc,CAACiD,GAAf,CAAoByB,YAAD,iBACjB,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAEA,YAAY,CAAC9B,EAA9B;AAAA,gCAAmC8B,YAAY,CAACC;AAAhD;AAAA;AAAA;AAAA;AAAA,4BADF;AAbJ;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA,mBAA2B,kBAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eA0BE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAA0B,gBAAA,EAAE,EAAE,CAA9B;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEtD,OAAO,CAAC0C,KAAR,GAAgB,GAAhB,GAAsB1C,OAAO,CAAC2C,YAArD;AAAmE,oBAAA,OAAO,EAAC,UAA3E;AAAsF,oBAAA,OAAO,EAAC,qBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAE3C,OAAO,CAAC4C,MADrB;AAEE,oBAAA,OAAO,EAAE;AAAEP,sBAAAA,IAAI,EAAErC,OAAO,CAAC6C;AAAhB,qBAFX;AAGE,oBAAA,UAAU,EAAE;AACVC,sBAAAA,IAAI,EAAE,aADI;AAEVC,sBAAAA,GAAG,EAAE,aAFK;AAGVC,sBAAAA,KAAK,EAAEjC,aAHG;AAIVQ,sBAAAA,EAAE,EAAE,qBAJM;AAKV0B,sBAAAA,QAAQ,EAAE,IALA;AAMVC,sBAAAA,QAAQ,EAAGC,CAAD,IAAOnC,gBAAgB,CAACmC,CAAC,CAACC,MAAF,CAASJ,KAAV;AANvB,qBAHd;AAAA,8BAaI7B,qBAAqB,CAACoC,MAAtB,GAA+B,CAA/B,GAAmCpC,qBAAqB,CAACS,GAAtB,CAA2BP,YAAD,iBAC3D,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAEA,YAAY,CAACE,EAA9B;AAAA,gCAAmCF,YAAY,CAACmC;AAAhD;AAAA;AAAA;AAAA;AAAA,4BADiC,CAAnC,gBAEI,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE;AAAEzE,wBAAAA,KAAK,EAAE,KAAT;AAAgB0E,wBAAAA,aAAa,EAAE;AAA/B,uBAAjB;AAA0D,sBAAA,KAAK,EAAE,CAAjE;AAAA,gCAAqE;AAArE;AAAA;AAAA;AAAA;AAAA;AAfR;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA,mBAA2B,iBAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1BF,eAqDE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAA0B,gBAAA,EAAE,EAAE,CAA9B;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuC,kBAAA,QAAQ,EAAE5C,cAAc,KAAK,EAAnB,IAAyBE,aAAa,KAAK,EAA5F;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEf,OAAO,CAAC0C,KAAR,GAAgB,GAAhB,GAAsB1C,OAAO,CAAC2C,YAArD;AAAmE,oBAAA,OAAO,EAAC,UAA3E;AAAsF,oBAAA,OAAO,EAAC,qBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAE3C,OAAO,CAAC4C,MADrB;AAEE,oBAAA,OAAO,EAAE;AAAEP,sBAAAA,IAAI,EAAErC,OAAO,CAAC6C;AAAhB,qBAFX;AAGE,oBAAA,UAAU,EAAE;AACVC,sBAAAA,IAAI,EAAE,OADI;AAEVC,sBAAAA,GAAG,EAAE,OAFK;AAGVC,sBAAAA,KAAK,EAAE/B,UAHG;AAIVM,sBAAAA,EAAE,EAAE,qBAJM;AAKV0B,sBAAAA,QAAQ,EAAE,IALA;AAMVC,sBAAAA,QAAQ,EAAGC,CAAD,IAAOjC,aAAa,CAACiC,CAAC,CAACC,MAAF,CAASJ,KAAV;AANpB,qBAHd;AAAA,8BAaIpE,UAAU,CAACgD,GAAX,CAAgBE,QAAD,iBACb,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAEA,QAAQ,CAACP,EAA1B;AAAA,gCAA+BO,QAAQ,CAACwB;AAAxC;AAAA;AAAA;AAAA;AAAA,4BADF;AAbJ;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA,mBAA2B,WAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBArDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA2FE,QAAC,iBAAD;AAAmB,UAAA,YAAY,EAAE7C,YAAjC;AAA+C,UAAA,OAAO,EAAEJ,OAAxD;AAAiE,UAAA,oBAAoB,EAAEO,oBAAvF;AACE,UAAA,MAAM,EAAE,EAAEC,cAAc,KAAK,EAAnB,IAAyBE,aAAa,KAAK,EAA3C,IAAiDE,UAAU,KAAK,EAAlE;AADV;AAAA;AAAA;AAAA;AAAA,gBA3FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAkGE,QAAC,kBAAD;AACE,MAAA,IAAI,EAAEb,IADR;AAEE,MAAA,SAAS,EAAE,MAAM,CAAG,CAFtB;AAGE,MAAA,OAAO,EAAE,MAHX;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,KAAK,EAAEM;AALT;AAAA;AAAA;AAAA;AAAA,YAlGF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2GD;;AAED,SAAS+C,iBAAT,CAA2B;AAAEjD,EAAAA,YAAF;AAAgBJ,EAAAA,OAAhB;AAAyBO,EAAAA,oBAAzB;AAA+C+C,EAAAA;AAA/C,CAA3B,EAAoF;AAClF,QAAM3D,OAAO,GAAGlE,QAAQ,CAAC+C,MAAD,CAAxB;AAEA,sBAAO;AAAA,eACJ4B,YAAY,CAACmB,GAAb,CAAiBgC,UAAU,iBAAI,QAAC,KAAD,CAAO,QAAP;AAAA,8BAC9B,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE1E,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,YAAY,EAAE;AAAnC,SAAb;AAA0D,QAAA,SAAS,EAAC,eAApE;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEmD,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,aAAa,EAAE;AAApC,WAAnB;AAAgE,UAAA,KAAK,EAAC,WAAtE;AAAA,kCAAkF,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAlF,0CAA0H;AAAA,sBAAIqB,UAAU,CAAC9B;AAAf;AAAA;AAAA;AAAA;AAAA,kBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAD8B,eAI9B,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAAE9C,UAAAA,MAAM,EAAE;AAAV,SAAtB;AAAA,kBAEI4E,UAAU,CAAC7B,OAAX,CAAmBH,GAAnB,CAAuB,CAACiC,KAAD,EAAQC,KAAR,kBACrB,QAAC,QAAD;AAAwD,UAAA,KAAK,EAAE;AAAEtB,YAAAA,OAAO,EAAE,UAAX;AAAuBtD,YAAAA,SAAS,EAAE;AAAlC,WAA/D;AAA2G,UAAA,EAAE,EAAE,EAA/G;AAAmH,UAAA,EAAE,EAAE,EAAvH;AAA2H,UAAA,EAAE,EAAE,EAA/H;AAAmI,UAAA,EAAE,EAAE,CAAvI;AAA0I,UAAA,EAAE,EAAE,CAA9I;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEF,cAAAA,MAAM,EAAE,CAAV;AAAa+E,cAAAA,MAAM,EAAE;AAArB,aAAb;AAA4C,YAAA,SAAS,EAAC,oBAAtD;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAEzB,gBAAAA,UAAU,EAAE,KAAd;AAAqBC,gBAAAA,aAAa,EAAE,KAApC;AAA2CyB,gBAAAA,aAAa,EAAE;AAA1D,eAAnB;AAAoF,cAAA,KAAK,EAAC,SAA1F;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAE,EAAf;AAAmB,gBAAA,KAAK,EAAE;AAAE/E,kBAAAA,QAAQ,EAAE,MAAZ;AAAoBD,kBAAAA,MAAM,EAAE,MAA5B;AAAoCiF,kBAAAA,OAAO,EAAE,OAA7C;AAAsDC,kBAAAA,SAAS,EAAE;AAAjE,iBAA1B;AAAA,wCAAuG,QAAC,YAAD;AAAc,kBAAA,KAAK,EAAE;AAAEjF,oBAAAA,QAAQ,EAAE;AAAZ;AAArB;AAAA;AAAA;AAAA;AAAA,wBAAvG,UAA2JzB,iBAAiB,CAACqG,KAAK,CAACM,KAAP,EAAcN,KAAK,CAACO,IAApB,CAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAE;AAAEC,gBAAAA,YAAY,EAAE,KAAhB;AAAuBL,gBAAAA,aAAa,EAAE,MAAtC;AAA8CC,gBAAAA,OAAO,EAAE,MAAvD;AAA+DK,gBAAAA,UAAU,EAAE,QAA3E;AAAqFC,gBAAAA,cAAc,EAAE;AAArG,eAAjB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAEvE,OAAO,CAACL,cAAxB;AACE,gBAAA,GAAG,EAAE5E,MADP;AACe,gBAAA,GAAG,EAAC;AADnB;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAO,gBAAA,KAAK,EAAE;AAAEkE,kBAAAA,QAAQ,EAAE,MAAZ;AAAoBW,kBAAAA,KAAK,EAAE,KAA3B;AAAkCsE,kBAAAA,SAAS,EAAE,MAA7C;AAAqDF,kBAAAA,aAAa,EAAE,KAApE;AAA2EC,kBAAAA,OAAO,EAAE;AAApF,iBAAd;AAAA,oCAAmHJ,KAAK,CAACW,WAAzH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAG+I;AAAA;AAAA;AAAA;AAAA,sBAH/I,eAIE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,YAAY,EAAE,MAAhB;AAAwBC,kBAAAA,WAAW,EAAE,MAArC;AAA6C1F,kBAAAA,MAAM,EAAE,MAArD;AAA6DiF,kBAAAA,OAAO,EAAE,OAAtE;AAA+ErE,kBAAAA,KAAK,EAAE,KAAtF;AAA6FE,kBAAAA,YAAY,EAAE,MAA3G;AAAmH6E,kBAAAA,QAAQ,EAAE;AAA7H,iBAA/B;AAAsK,gBAAA,IAAI,EAAC,OAA3K;AAAmL,gBAAA,OAAO,EAAE,MAAM;AAAEtE,kBAAAA,OAAO,CAAC,IAAD,CAAP;AAAeO,kBAAAA,oBAAoB,CAACiD,KAAD,CAApB;AAA6B,iBAAhP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAeA,KAAK,CAACM,KAAN,GAAcN,KAAK,CAACW,WAApB,GAAkCV,KAAjD;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAJ8B;AAAA,OAAqBF,UAAU,CAAC9B,QAAhC;AAAA;AAAA;AAAA;AAAA,YAA/B,CADI,EA0BHrB,YAAY,CAAC8C,MAAb,KAAwB,CAAxB,IAA6BI,MAA7B,iBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BpC;AAAA,kBAAP;AA6BD;;AAED,SAASiB,kBAAT,CAA4B;AAAExE,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBwD,EAAAA;AAAjB,CAA5B,EAAsD;AACpD,QAAM7D,OAAO,GAAGlE,QAAQ,CAAC+C,MAAD,CAAxB;;AAEA,QAAMgG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAAC/B,GAAN,KAAc,OAAlB,EAA2B;AACzB1C,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,QAAIyE,KAAK,CAAC/B,GAAN,KAAc,QAAlB,EAA4B;AAC1B1C,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAPD;;AAUA,QAAM;AAAE0E,IAAAA;AAAF,MAAW9K,UAAU,CAACqD,WAAD,CAA3B;AAEA2C,EAAAA,OAAO,CAACC,GAAR,CAAY6E,IAAZ;AAEA,QAAM5E,aAAa,GAAGlG,UAAU,CAACwD,oBAAD,CAAhC;AAEA,QAAMuH,MAAM,GAAGtH,SAAS,EAAxB;;AAEA,QAAMuH,aAAa,GAAG,YAAY;AAChC,UAAM;AAAElE,MAAAA,aAAa,EAAEmE,cAAjB;AAAiCf,MAAAA,KAAjC;AAAwCC,MAAAA,IAAxC;AAA8Ce,MAAAA,UAA9C;AAA0DC,MAAAA;AAA1D,wCAA6EvB,KAA7E;AAAoFsB,MAAAA,UAAU,EAAEJ,IAAI,CAACxD;AAArG,MAAN;;AAEA,UAAM8D,mBAAmB,GAAG,MAAMnI,WAAW,CAAC6H,IAAI,CAAClH,aAAN,EAAqB,MAAMV,gBAAgB,EAA3C,EAA+C;AAAE+H,MAAAA,cAAF;AAAkBf,MAAAA,KAAlB;AAAyBC,MAAAA,IAAzB;AAA+Be,MAAAA,UAA/B;AAA2CC,MAAAA;AAA3C,KAA/C,CAA7C;AAEAnF,IAAAA,OAAO,CAACC,GAAR,CAAYmF,mBAAZ;;AAEA,QAAI,CAACA,mBAAmB,CAACnH,OAAzB,EAAkC;AAChCiC,MAAAA,aAAa,CAACmF,KAAd;AACAnF,MAAAA,aAAa,CAACoF,UAAd,CAAyBF,mBAAmB,CAACG,OAA7C;AACArF,MAAAA,aAAa,CAACC,IAAd;AACA;AACD;;AAEDD,IAAAA,aAAa,CAACsF,WAAd,CAA0B,gCAA1B;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,YAAYX,IAAI,CAAClH,aAAjB,GAAiC,YAA7C;AACD,GAhBD;;AAkBA,QAAMyC,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAsF,IAAAA,UAAU,CAAChJ,UAAD,EAAa,CAAb,CAAV;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEyD,IADR;AAEE,IAAA,SAAS,EAAEyE,UAFb;AAGE,IAAA,OAAO,EAAEvE,WAHX;AAIE,IAAA,SAAS,EAAC,sBAJZ;AAAA,2BAME,QAAC,aAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEpB,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,YAAY,EAAE;AAAnC,SAAb;AAA0D,QAAA,SAAS,EAAC,eAApE;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,kBAAtB;AAAyC,UAAA,KAAK,EAAE;AAAEF,YAAAA,QAAQ,EAAE,MAAZ;AAAoBuD,YAAAA,OAAO,EAAE;AAA7B,WAAhD;AAAsF,UAAA,KAAK,EAAC,SAA5F;AAAA,kCAAsG,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,kBAA3B;AAA8C,YAAA,KAAK,EAAE;AAAEvD,cAAAA,QAAQ,EAAE;AAAZ;AAArD;AAAA;AAAA;AAAA;AAAA,kBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEqD,YAAAA,UAAU,EAAE;AAAd,WAAjB;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,QAAD;AAAA,sCACE,QAAC,cAAD;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAEtC,OAAO,CAACN,YAA1B;AAAA,0CACE;AAAO,oBAAA,KAAK,EAAE;AAAET,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,2CAAoC;AAAA,gCAAI1B,kBAAkB,CAACsG,KAAK,CAACM,KAAP;AAAtB;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,0BADF,eACsF;AAAA;AAAA;AAAA;AAAA,0BADtF,eAEE;AAAO,oBAAA,KAAK,EAAE;AAAElF,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA,gCAAI4E,KAAK,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,4BAApC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE,QAAC,YAAD;AACE,gBAAA,OAAO,eACL;AAAO,kBAAA,SAAS,EAAC,MAAjB;AAAA,0CACE;AAAO,oBAAA,KAAK,EAAE;AAAEnF,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApC,eAAyD;AAAO,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,QAAQ,EAAE;AAAZ,uBAAd;AAAA,gCAAqC4E,KAAK,CAACR;AAA3C;AAAA;AAAA;AAAA;AAAA,4BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eACmI;AAAA;AAAA;AAAA;AAAA,0BADnI,eAEE;AAAO,oBAAA,KAAK,EAAE;AAAEpE,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApC,eAAqE;AAAO,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,QAAQ,EAAE;AAAZ,uBAAd;AAAA,gCAAqC4E,KAAK,CAAC/B;AAA3C;AAAA;AAAA;AAAA;AAAA,4BAArE;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAE2I;AAAA;AAAA;AAAA;AAAA,0BAF3I,eAGE;AAAO,oBAAA,KAAK,EAAE;AAAE7C,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApC,eAAkD;AAAO,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,QAAQ,EAAE;AAAZ,uBAAd;AAAA,gCAAqCzB,iBAAiB,CAACqG,KAAK,CAACM,KAAP,EAAcN,KAAK,CAACO,IAApB;AAAtD;AAAA;AAAA;AAAA;AAAA,4BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAGoJ;AAAA;AAAA;AAAA;AAAA,0BAHpJ,eAIE;AAAO,oBAAA,KAAK,EAAE;AAAEnF,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApC,eAAwD;AAAO,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,QAAQ,EAAE;AAAZ,uBAAd;AAAA,gCAAqC4E,KAAK,CAACW;AAA3C;AAAA;AAAA;AAAA;AAAA,4BAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAIiI;AAAA;AAAA;AAAA;AAAA,0BAJjI,eAKE;AAAO,oBAAA,KAAK,EAAE;AAAEvF,sBAAAA,QAAQ,EAAE;AAAZ,qBAAd;AAAA,4CAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApC,eAAmD;AAAO,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,QAAQ,EAAE;AAAZ,uBAAd;AAAA,gCAAqC4E,KAAK,CAAC+B;AAA3C;AAAA;AAAA;AAAA;AAAA,4BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAKuH;AAAA;AAAA;AAAA;AAAA,0BALvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA2BE;AAAA;AAAA;AAAA;AAAA,oBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA8BE;AAAK,YAAA,KAAK,EAAE;AAAE3B,cAAAA,OAAO,EAAE,MAAX;AAAmBM,cAAAA,cAAc,EAAE,cAAnC;AAAmDpF,cAAAA,YAAY,EAAE;AAAjE,aAAZ;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEmB,WAAjB;AAA8B,cAAA,KAAK,EAAC,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE2E,aAAjB;AAAgC,cAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD;;AAEDlF,cAAc,CAAC8F,MAAf,GAAwBxL,KAAxB;AAEA,eAAe0F,cAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n// layout for this page\r\nimport Admin from \"layouts/Admin.js\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nimport avatar from \"assets/img/placeholderPic.jpg\";\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormHelperText, List, ListItem, ListItemAvatar, ListItemText, MenuItem, NativeSelect, Select } from \"@material-ui/core\";\r\nimport useTheme from \"../../../hooks/useTheme\";\r\n\r\nimport CalendarIcon from '@material-ui/icons/Today';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\n\r\nimport adminStyles from \"assets/jss/nextjs-material-dashboard/layouts/adminStyle.js\";\r\nimport { showLoad } from \"../../../utils/loading\";\r\nimport { useEffect } from \"react\";\r\nimport { TURNOS_DISPONIBLES } from \"../../../utils/mockData\";\r\nimport { useRef } from \"react\";\r\nimport MUIButton from \"@material-ui/core/Button\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { resetFocus } from \"../../../utils/focus\";\r\n\r\nimport nookies from 'nookies'\r\n\r\n\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { getAvailableTurns, getEspecialidades, getProfessionals, getSucursales, requestTurn } from \"../../../services/turns\";\r\nimport GLOBAL_GET_TOKEN from \"../../../utils/token\";\r\nimport MessageDialog from \"../../../components/Dialogs/MessageDialog\";\r\nimport { groupBy } from \"../../../utils/algorithms\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\nimport { fullDateToDayMonth, getFullNameOfDate } from \"../../../utils/dates\";\r\nimport { MessageDialogContext } from \"../../../context/MessageDialogContextProvider\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { consultorioId } = context.query;\r\n\r\n  const cookies = nookies.get(context);\r\n\r\n  const professionalsResponse = await getProfessionals(consultorioId, await GLOBAL_GET_TOKEN(context));\r\n\r\n  if (!professionalsResponse.success) {\r\n    return {\r\n      redirect: {\r\n        destination: '/login/' + consultorioId + \"/server-error\",\r\n        permanent: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  const especialidadesResponse = await getEspecialidades(consultorioId, await GLOBAL_GET_TOKEN(context));\r\n\r\n  if (!especialidadesResponse.success) {\r\n    return {\r\n      redirect: {\r\n        destination: '/login/' + consultorioId + \"/server-error\",\r\n        permanent: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  const sucursalesResponse = await getSucursales(consultorioId, await GLOBAL_GET_TOKEN(context));\r\n\r\n  if (!sucursalesResponse.success) {\r\n    return {\r\n      redirect: {\r\n        destination: '/login/' + consultorioId + \"/server-error\",\r\n        permanent: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  return { props: { consultorioId, professionals: professionalsResponse.data, especialidades: especialidadesResponse.data, sucursales: sucursalesResponse.data } };\r\n}\r\n\r\nconst styles = ({\r\n  ...adminStyles(),\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  description: {\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  colorPrimary: {\r\n    color: (props) => props.colorPrimary\r\n  },\r\n  profesionalImg: {\r\n    width: \"10%\",\r\n    border: (props) => \"1px solid \" + props.colorPrimary,\r\n    borderRadius: \"100%\"\r\n  }\r\n});\r\n\r\nfunction SolicitarTurno({ professionals, especialidades, sucursales, consultorioId }) {\r\n  const classes = useTheme(styles);\r\n\r\n  console.log({ professionals, especialidades, sucursales });\r\n\r\n  const messageDialog = useContext(MessageDialogContext);\r\n\r\n  /* DIALOG VERIFICACION */\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    // Do something when the dialog is closed\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n  /* DIALOG VERIFICACION */\r\n\r\n  const [turnsGrouped, setTurnsGrouped] = useState([]);\r\n  const [turnoSeleccionado, setTurnoSeleccionado] = useState({});\r\n\r\n  const [especialidadId, setEspecialidadId] = useState(\"\");\r\n  const [profesionalId, setProfesionalId] = useState(\"\");\r\n  const [sucursalId, setSucursalId] = useState(\"\");\r\n\r\n  const professionalsFiltered = professionals.filter(professional => especialidadId === \"\" || professional.specialty.id === especialidadId);\r\n\r\n  useEffect(() => {\r\n    async function getTurns() {\r\n      const turnsResponse = await getAvailableTurns(consultorioId, await GLOBAL_GET_TOKEN(), sucursalId, especialidadId, profesionalId);\r\n\r\n      if (!turnsResponse.success) {\r\n        messageDialog.defaultOpen();\r\n        return;\r\n      }\r\n\r\n      const turns = turnsResponse.data;\r\n\r\n      // Agrupar turnos\r\n\r\n      const turnsGrouped = groupBy(turns, \"sucursal\")\r\n        ?.map(group => ({ sucursal: group.sucursal, content: group.content.slice(0, 10) }))\r\n        ?.sort((a, b) => a.sucursal.localeCompare(b.sucursal));\r\n\r\n      console.log({ turns, turnsGrouped });\r\n\r\n      setTurnsGrouped(turnsGrouped ?? []);\r\n    }\r\n\r\n    if (especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\")\r\n      return;\r\n\r\n    getTurns();\r\n  }, [especialidadId, profesionalId, sucursalId]);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12} classes={{ root: \"\" }} >\r\n          <Card>\r\n            <CardHeader color=\"primary\" style={{ paddingTop: \"6px\", paddingBottom: \"6px\" }}>\r\n              <h3 className={classes.cardTitleWhite}><CalendarIcon fontSize=\"large\" />Solicitud de Turnos</h3>\r\n            </CardHeader>\r\n            <CardBody style={{ padding: \"10px 20px\" }}>\r\n              <GridContainer style={{ rowGap: \"1.5em\" }}>\r\n                <GridItem xs={12} sm={12} md={4}>\r\n                  <FormControl fullWidth key=\"especialidadForm\">\r\n                    <InputLabel className={classes.label + \" \" + classes.labelEnabled} variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                      Seleccione Especialidad\r\n                    </InputLabel>\r\n                    <Select\r\n                      className={classes.select}\r\n                      classes={{ root: classes.selectRoot }}\r\n                      inputProps={{\r\n                        name: 'especialidad',\r\n                        key: 'especialidad',\r\n                        value: especialidadId,\r\n                        id: 'uncontrolled-native',\r\n                        required: false,\r\n                        onChange: (e) => { setEspecialidadId(e.target.value); setProfesionalId(\"\") }\r\n                      }}\r\n                    >\r\n                      {\r\n                        especialidades.map((especialidad) =>\r\n                          <MenuItem value={especialidad.id}>{especialidad.nombre}</MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                <GridItem xs={12} sm={12} md={4}>\r\n                  <FormControl fullWidth key=\"profesionalForm\" >\r\n                    <InputLabel className={classes.label + \" \" + classes.labelEnabled} variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                      Seleccione Profesional\r\n                    </InputLabel>\r\n                    <Select\r\n                      className={classes.select}\r\n                      classes={{ root: classes.selectRoot }}\r\n                      inputProps={{\r\n                        name: 'profesional',\r\n                        key: 'profesional',\r\n                        value: profesionalId,\r\n                        id: 'uncontrolled-native',\r\n                        required: true,\r\n                        onChange: (e) => setProfesionalId(e.target.value)\r\n                      }}\r\n                    >\r\n                      {\r\n                        professionalsFiltered.length > 0 ? professionalsFiltered.map((professional) =>\r\n                          <MenuItem value={professional.id}>{professional.fullName}</MenuItem>\r\n                        ) : <MenuItem style={{ color: \"red\", pointerEvents: \"none\" }} value={2}>{\"No hay profesionales para la especialidad seleccionada.\"}</MenuItem>\r\n                      }\r\n                    </Select>\r\n                    {/* <FormHelperText style={{ \"marginTop\": \"unset\" }} >Opcional</FormHelperText> */}\r\n                  </FormControl>\r\n                </GridItem>\r\n\r\n                <GridItem xs={12} sm={12} md={4}>\r\n                  <FormControl fullWidth key=\"lugarForm\" disabled={especialidadId === \"\" && profesionalId === \"\"}>\r\n                    <InputLabel className={classes.label + \" \" + classes.labelEnabled} variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                      Seleccione Lugar\r\n                    </InputLabel>\r\n                    <Select\r\n                      className={classes.select}\r\n                      classes={{ root: classes.selectRoot }}\r\n                      inputProps={{\r\n                        name: 'lugar',\r\n                        key: 'lugar',\r\n                        value: sucursalId,\r\n                        id: 'uncontrolled-native',\r\n                        required: true,\r\n                        onChange: (e) => setSucursalId(e.target.value)\r\n                      }}\r\n                    >\r\n                      {\r\n                        sucursales.map((sucursal) =>\r\n                          <MenuItem value={sucursal.id}>{sucursal.nombre}</MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    {/* <FormHelperText style={{ \"marginTop\": \"unset\" }} >Opcional</FormHelperText> */}\r\n                  </FormControl>\r\n                </GridItem>\r\n\r\n\r\n              </GridContainer>\r\n\r\n            </CardBody>\r\n          </Card>\r\n          <TurnosDisponibles turnsGrouped={turnsGrouped} setOpen={setOpen} setTurnoSeleccionado={setTurnoSeleccionado}\r\n            active={!(especialidadId === \"\" && profesionalId === \"\" && sucursalId === \"\")} />\r\n        </GridItem>\r\n\r\n      </GridContainer>\r\n      <ConfirmationDialog\r\n        open={open}\r\n        onConfirm={() => { }}\r\n        message={\"hola\"}\r\n        setOpen={setOpen}\r\n        turno={turnoSeleccionado} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TurnosDisponibles({ turnsGrouped, setOpen, setTurnoSeleccionado, active }) {\r\n  const classes = useTheme(styles);\r\n\r\n  return <>\r\n    {turnsGrouped.map(turnsGroup => <React.Fragment key={turnsGroup.sucursal}>\r\n      <Card style={{ marginTop: \"10px\", marginBottom: \"10px\" }} className=\"proxTurnoCard\">\r\n        <CardHeader style={{ paddingTop: \"4px\", paddingBottom: \"4px\" }} color=\"secondary\"><PlaceIcon /> Lugar de atenci&oacute;n: <b>{turnsGroup.sucursal}</b></CardHeader>\r\n      </Card>\r\n      <GridContainer style={{ margin: \"-10px -16px\" }}>\r\n        {\r\n          turnsGroup.content.map((turno, index) =>\r\n            <GridItem key={turno.fecha + turno.profesional + index} style={{ padding: \"8px 16px\", marginTop: \"24px\" }} xs={12} sm={12} md={12} lg={6} xl={4}>\r\n              <Card style={{ margin: 0, height: \"100%\" }} className=\"solicitarTurnoCard\">\r\n                <CardHeader style={{ paddingTop: \"2px\", paddingBottom: \"2px\", paddingInline: \"0\" }} color=\"primary\">\r\n                  <h3 className={\"\"} style={{ fontSize: '20px', margin: \"auto\", display: \"block\", textAlign: \"center\" }}><CalendarIcon style={{ fontSize: '30px' }} />&nbsp;{getFullNameOfDate(turno.fecha, turno.hora) }</h3>\r\n                </CardHeader>\r\n                <CardBody style={{ paddingBlock: \"8px\", paddingInline: \"16px\", display: \"flex\", alignItems: \"center\", justifyContent: \"start\" }}>\r\n                  <img className={classes.profesionalImg}\r\n                    src={avatar} alt=\"...\" />\r\n                  <label style={{ fontSize: '18px', width: \"60%\", textAlign: \"left\", paddingInline: \"6px\", display: \"block\" }}>Dr.  {turno.profesional}</label><br />\r\n                  <Button color=\"primary\" style={{ paddingRight: \"10px\", paddingLeft: \"10px\", margin: \"auto\", display: \"block\", width: \"10%\", borderRadius: \"2rem\", minWidth: \"80px\" }} size=\"small\" onClick={() => { setOpen(true); setTurnoSeleccionado(turno) }}>Solicitar</Button>\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>)\r\n        }\r\n      </GridContainer>\r\n    </React.Fragment>\r\n    )}\r\n    {\r\n      turnsGrouped.length === 0 && active && <h3>No hay turnos disponibles seg&uacute;n lo seleccionado.</h3>\r\n    }\r\n  </>\r\n}\r\n\r\nfunction ConfirmationDialog({ open, setOpen, turno }) {\r\n  const classes = useTheme(styles);\r\n\r\n  const handleKeys = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      setOpen(false)\r\n    }\r\n    if (event.key === \"Escape\") {\r\n      setOpen(false)\r\n    }\r\n  }\r\n\r\n  \r\n  const { user } = useContext(UserContext);\r\n\r\n  console.log(user);\r\n\r\n  const messageDialog = useContext(MessageDialogContext);\r\n\r\n  const router = useRouter();\r\n\r\n  const handleConfirm = async () => {\r\n    const { profesionalId: professionalId, fecha, hora, patienteId, horarioId } = { ...turno, patienteId: user.id };\r\n\r\n    const requestTurnResponse = await requestTurn(user.consultorioId, await GLOBAL_GET_TOKEN(), { professionalId, fecha, hora, patienteId, horarioId });\r\n\r\n    console.log(requestTurnResponse);\r\n\r\n    if (!requestTurnResponse.success) {\r\n      messageDialog.reset();\r\n      messageDialog.setMessage(requestTurnResponse.message);\r\n      messageDialog.open();\r\n      return;\r\n    }\r\n\r\n    messageDialog.messageOpen(\"Se reservó su turno con éxito.\");\r\n    router.push(\"/admin/\" + user.consultorioId + \"/dashboard\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTimeout(resetFocus, 0);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onKeyDown={handleKeys}\r\n      onClose={handleClose}\r\n      className=\"solicitarTurnoDialog\"\r\n    >\r\n      <DialogContent>\r\n        <Card style={{ marginTop: \"10px\", marginBottom: \"10px\" }} className=\"proxTurnoCard\">\r\n          <CardHeader className=\"dialogCardHeader\" style={{ fontSize: \"2rem\", padding: \"8px\" }} color=\"primary\"><CheckCircleIcon className=\"dialogCardHeader\" style={{ fontSize: \"2rem\" }} /> ¿Desea confirmar la solicitud de este turno?</CardHeader>\r\n          <CardBody style={{ paddingTop: 0 }}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <label className={classes.colorPrimary}>\r\n                    <label style={{ fontSize: '20px' }}><b>{fullDateToDayMonth(turno.fecha)}</b></label><br />\r\n                    <label style={{ fontSize: '13px' }}><b>{turno.hora}</b>hs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                  </label>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <label className=\"mx-2\">\r\n                      <label style={{ fontSize: '15px' }}><b>Especialidad: </b><label style={{ fontSize: '14px' }}>{turno.especialidad}</label></label><br />\r\n                      <label style={{ fontSize: '15px' }}><b>Lugar de Atenci&oacute;n: </b><label style={{ fontSize: '14px' }}>{turno.sucursal}</label></label><br />\r\n                      <label style={{ fontSize: '15px' }}><b>Fecha: </b><label style={{ fontSize: '14px' }}>{getFullNameOfDate(turno.fecha, turno.hora)}</label></label><br />\r\n                      <label style={{ fontSize: '15px' }}><b>Profesional: </b><label style={{ fontSize: '14px' }}>{turno.profesional}</label></label><br />\r\n                      <label style={{ fontSize: '15px' }}><b>Motivo: </b><label style={{ fontSize: '14px' }}>{turno.motivo}</label></label><br />\r\n                    </label>\r\n                  }\r\n                />\r\n                {/* <ListItemAvatar>\r\n                  <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                  <Button onClick={handleConfirm} color=\"primary\">\r\n                    Confirmar\r\n                  </Button>              </ListItemAvatar> */}\r\n              </ListItem>\r\n              <hr />\r\n            </List>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-evenly\", marginBottom: \"8px\" }}>\r\n              <Button onClick={handleClose} color=\"secondaryOutlined\">\r\n                Cancelar\r\n              </Button>\r\n              <Button onClick={handleConfirm} color=\"primary\">\r\n                Confirmar\r\n              </Button>\r\n            </div>\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSolicitarTurno.layout = Admin;\r\n\r\nexport default SolicitarTurno;\r\n"]},"metadata":{},"sourceType":"module"}